#region RDIFramework.NET-generated
//------------------------------------------------------------------------------
//     RDIFramework.NET（.NET快速信息化系统开发、整合框架）是基于.NET的快速信息化系统开发、整合框架，给用户和开发者最佳的.Net框架部署方案。
//     RDIFramework.NET平台包含基础公共类库、强大的权限控制、模块分配、数据字典、自动升级、各商业级控件库、工作流平台、代码生成器、开发辅助
//工具等，应用系统的各个业务功能子系统，在系统体系结构设计的过程中被设计成各个原子功能模块，各个子功能模块按照业务功能组织成单独的程序集文
//件，各子系统开发完成后，由RDIFramework.NET平台进行统一的集成部署。
//
//	框架官网：http://www.rdiframework.net/
//	框架博客：http://blog.rdiframework.net/
//	交流QQ：406590790 
//	邮件交流：406590790@qq.com
//	其他博客：
//    http://www.cnblogs.com/huyong 
//    http://blog.csdn.net/chinahuyong
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由RDIFramework.NET平台代码生成工具自动生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#endregion

using System;

namespace RDIFramework.BizLogic
{
     using RDIFramework.Utilities;

     /// <summary>
     /// PiStaffEntity
     /// 员工（职员）表
     ///
     /// 修改纪录
    ///         2014-07-30 版本: 2.8 EricHu 以自动属性进行重新组织。
     ///		2012-03-02 版本：1.0 EricHu 创建主键。
     ///
     /// 版本：3.0
     ///
     /// <author>
     ///		<name>EricHu</name>
     ///		<date>2012-03-02</date>
     /// </author>
     /// </summary>
    [Serializable]
    public partial class PiStaffEntity : BaseEntity
    {
        /// <summary>
        /// 主键
        /// </summary>
        public String Id { get; set; }

        /// <summary>
        /// 编号,工号
        /// </summary>
        public String Code { get; set; }

        /// <summary>
        /// 用户主键
        /// </summary>
        public String UserId { get; set; }

        /// <summary>
        /// 用户名(登录用)
        /// </summary>
        public String UserName { get; set; }

        /// <summary>
        /// 姓名
        /// </summary>
        public String RealName { get; set; }

        /// <summary>
        /// 职位代码
        /// </summary>
        public String DutyId { get; set; }

        /// <summary>
        /// 性别
        /// </summary>
        public String Gender { get; set; }

        /// <summary>
        /// 出生日期
        /// </summary>
        public DateTime? Birthday { get; set; }

        /// <summary>
        /// 年龄
        /// </summary>
        public String Age { get; set; }

        /// <summary>
        /// 唯一身份Id
        /// </summary>
        public String IdentificationCode { get; set; }

        /// <summary>
        /// 身份证号码
        /// </summary>
        public String IDCard { get; set; }

        /// <summary>
        /// 银行卡号
        /// </summary>
        public String BankCode { get; set; }

        /// <summary>
        /// 电子邮件
        /// </summary>
        public String Email { get; set; }

        /// <summary>
        /// 手机
        /// </summary>
        public String Mobile { get; set; }

        /// <summary>
        /// 短号
        /// </summary>
        public String ShortNumber { get; set; }

        /// <summary>
        /// 电话
        /// </summary>
        public String Telephone { get; set; }

        /// <summary>
        /// QQ号码
        /// </summary>
        public String QICQ { get; set; }

        /// <summary>
        /// 办公电话
        /// </summary>
        public String OfficePhone { get; set; }

        /// <summary>
        /// 办公邮编
        /// </summary>
        public String OfficeZipCode { get; set; }

        /// <summary>
        /// 办公地址
        /// </summary>
        public String OfficeAddress { get; set; }

        /// <summary>
        /// 办公传真
        /// </summary>
        public String OfficeFax { get; set; }

        /// <summary>
        /// 住宅电话
        /// </summary>
        public String HomePhone { get; set; }

        /// <summary>
        /// 最高学历
        /// </summary>
        public String Education { get; set; }

        /// <summary>
        /// 毕业院校
        /// </summary>
        public String School { get; set; }

        /// <summary>
        /// 最高学位
        /// </summary>
        public String Degree { get; set; }

        /// <summary>
        /// 职称主键
        /// </summary>
        public String Title { get; set; }

        /// <summary>
        /// 职称评定日期
        /// </summary>
        public DateTime? TitleDate { get; set; }

        /// <summary>
        /// 职称等级
        /// </summary>
        public String TitleLevel { get; set; }

        /// <summary>
        /// 工作时间
        /// </summary>
        public DateTime? WorkingDate { get; set; }

        /// <summary>
        /// 加入本单位时间
        /// </summary>
        public DateTime? JoinInDate { get; set; }

        /// <summary>
        /// 家庭住址邮编
        /// </summary>
        public String HomeZipCode { get; set; }

        /// <summary>
        /// 家庭住址
        /// </summary>
        public String HomeAddress { get; set; }

        /// <summary>
        /// 家庭传真
        /// </summary>
        public String HomeFax { get; set; }

        /// <summary>
        /// 籍贯
        /// </summary>
        public String NativePlace { get; set; }

        /// <summary>
        /// 政治面貌
        /// </summary>
        public String Party { get; set; }

        /// <summary>
        /// 国籍
        /// </summary>
        public String Nation { get; set; }

        /// <summary>
        /// 民族
        /// </summary>
        public String Nationality { get; set; }

        /// <summary>
        /// 专业
        /// </summary>
        public String Major { get; set; }

        /// <summary>
        /// 工作性质
        /// </summary>
        public String WorkingProperty { get; set; }

        /// <summary>
        /// 职业资格
        /// </summary>
        public String Competency { get; set; }

        /// <summary>
        /// 离职
        /// </summary>
        public int? IsDimission { get; set; }

        /// <summary>
        /// 离职日期
        /// </summary>
        public DateTime? DimissionDate { get; set; }

        /// <summary>
        /// 离职原因
        /// </summary>
        public String DimissionCause { get; set; }

        /// <summary>
        /// 离职去向
        /// </summary>
        public String DimissionWhither { get; set; }

        /// <summary>
        /// 有效
        /// </summary>
        public int? Enabled { get; set; }

        /// <summary>
        /// 删除标记
        /// </summary>
        public int? DeleteMark { get; set; }

        /// <summary>
        /// 排序码
        /// </summary>
        public int? SortCode { get; set; }

        /// <summary>
        /// 描述
        /// </summary>
        public String Description { get; set; }

        /// <summary>
        /// 创建日期
        /// </summary>
        public DateTime? CreateOn { get; set; }

        /// <summary>
        /// 创建用户主键
        /// </summary>
        public String CreateUserId { get; set; }

        /// <summary>
        /// 创建用户
        /// </summary>
        public String CreateBy { get; set; }

        /// <summary>
        /// 修改日期
        /// </summary>
        public DateTime? ModifiedOn { get; set; }

        /// <summary>
        /// 修改用户主键
        /// </summary>
        public String ModifiedUserId { get; set; }

        /// <summary>
        /// 修改用户
        /// </summary>
        public String ModifiedBy { get; set; }

        /// <summary>
        /// 构造函数
        /// </summary>
        public PiStaffEntity()
        {
            this.Enabled = 0;
            this.DeleteMark = 0;
            this.IsDimission = 0;
            this.SortCode = null;
        }

        /// <summary>
        /// 从数据行读取
        /// </summary>
        /// <param name="dataRow">数据行</param>
        protected override BaseEntity GetFrom(IDataRow dataRow)
        {
            this.Id = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldId]);
            this.Code = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldCode]);
            this.UserId = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldUserId]);
            this.UserName = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldUserName]);
            this.RealName = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldRealName]);
            this.DutyId = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldDutyId]);
            this.Gender = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldGender]);
            this.Birthday = BusinessLogic.ConvertToNullableDateTime(dataRow[PiStaffTable.FieldBirthday]);
            this.Age = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldAge]);
            this.IdentificationCode = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldIdentificationCode]);
            this.IDCard = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldIDCard]);
            this.BankCode = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldBankCode]);
            this.Email = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldEmail]);
            this.Mobile = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldMobile]);
            this.ShortNumber = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldShortNumber]);
            this.Telephone = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldTelephone]);
            this.QICQ = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldQICQ]);
            this.OfficePhone = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldOfficePhone]);
            this.OfficeZipCode = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldOfficeZipCode]);
            this.OfficeAddress = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldOfficeAddress]);
            this.OfficeFax = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldOfficeFax]);
            this.HomePhone = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldHomePhone]);
            this.Education = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldEducation]);
            this.School = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldSchool]);
            this.Degree = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldDegree]);
            this.Title = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldTitle]);
            this.TitleDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiStaffTable.FieldTitleDate]);
            this.TitleLevel = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldTitleLevel]);
            this.WorkingDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiStaffTable.FieldWorkingDate]);
            this.JoinInDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiStaffTable.FieldJoinInDate]);
            this.HomeZipCode = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldHomeZipCode]);
            this.HomeAddress = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldHomeAddress]);
            this.HomeFax = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldHomeFax]);
            this.NativePlace = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldNativePlace]);
            this.Party = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldParty]);
            this.Nation = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldNation]);
            this.Nationality = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldNationality]);
            this.Major = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldMajor]);
            this.WorkingProperty = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldWorkingProperty]);
            this.Competency = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldCompetency]);
            this.IsDimission = BusinessLogic.ConvertToNullableInt(dataRow[PiStaffTable.FieldIsDimission]);
            this.DimissionDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiStaffTable.FieldDimissionDate]);
            this.DimissionCause = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldDimissionCause]);
            this.DimissionWhither = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldDimissionWhither]);
            this.Enabled = BusinessLogic.ConvertToNullableInt(dataRow[PiStaffTable.FieldEnabled]);
            this.DeleteMark = BusinessLogic.ConvertToNullableInt(dataRow[PiStaffTable.FieldDeleteMark]);
            this.SortCode = BusinessLogic.ConvertToNullableInt(dataRow[PiStaffTable.FieldSortCode]);
            this.Description = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldDescription]);
            this.CreateOn = BusinessLogic.ConvertToNullableDateTime(dataRow[PiStaffTable.FieldCreateOn]);
            this.CreateUserId = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldCreateUserId]);
            this.CreateBy = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldCreateBy]);
            this.ModifiedOn = BusinessLogic.ConvertToNullableDateTime(dataRow[PiStaffTable.FieldModifiedOn]);
            this.ModifiedUserId = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldModifiedUserId]);
            this.ModifiedBy = BusinessLogic.ConvertToString(dataRow[PiStaffTable.FieldModifiedBy]);
            return this;
        }
    }
}
