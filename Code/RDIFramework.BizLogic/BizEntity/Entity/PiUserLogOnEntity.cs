#region RDIFramework.NET-generated
//------------------------------------------------------------------------------
//     RDIFramework.NET（.NET快速信息化系统开发、整合框架）是基于.NET的快速信息化系统开发、整合框架，给用户和开发者最佳的.Net框架部署方案。
//     RDIFramework.NET平台包含基础公共类库、强大的权限控制、模块分配、数据字典、自动升级、各商业级控件库、工作流平台、代码生成器、开发辅助
//工具等，应用系统的各个业务功能子系统，在系统体系结构设计的过程中被设计成各个原子功能模块，各个子功能模块按照业务功能组织成单独的程序集文
//件，各子系统开发完成后，由RDIFramework.NET平台进行统一的集成部署。
//
//	框架官网：http://www.rdiframework.net/
//	框架博客：http://blog.rdiframework.net/
//	交流QQ：406590790 
//	邮件交流：406590790@qq.com
//	其他博客：
//    http://www.cnblogs.com/huyong 
//    http://blog.csdn.net/chinahuyong
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由RDIFramework.NET平台代码生成工具自动生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#endregion

using System;

namespace RDIFramework.BizLogic
{
    using RDIFramework.Utilities;

    /// <summary>
    /// PiUserEntity
    /// 用户登录账户实体
    ///
    /// 修改纪录
    ///
    ///     2014-07-30 版本: 2.8 XuWangBin 以自动属性进行重新组织。
    ///		2014-03-25 版本：3.0 XuWangBin 创建。
    ///
    /// 版本：3.0
    ///
    /// <author>
    ///		<name>XuWangBin</name>
    ///		<date>2014-03-25</date>
    /// </author>
    /// </summary>
    [Serializable]
    public class PiUserLogOnEntity : BaseEntity
    {
        /// <summary>
        /// 主键
        /// </summary>
        public String Id { get; set; }

        /// <summary>
        /// 用户来源
        /// </summary>
        public String UserFrom { get; set; }

        /// <summary>
        /// 用户密码
        /// </summary>
        public String UserPassword { get; set; }

        /// <summary>
        /// 当点登录标示
        /// </summary>
        public String OpenId { get; set; }

        /// <summary>
        /// 允许登录时间开始
        /// </summary>
        public DateTime? AllowStartTime { get; set; }

        /// <summary>
        /// 允许登录时间结束
        /// </summary>
        public DateTime? AllowEndTime { get; set; }

        /// <summary>
        /// 暂停用户开始日期
        /// </summary>
        public DateTime? LockStartDate { get; set; }

        /// <summary>
        /// 暂停用户结束日期
        /// </summary>
        public DateTime? LockEndDate { get; set; }

        /// <summary>
        /// 第一次访问时间
        /// </summary>
        public DateTime? FirstVisit { get; set; }

        /// <summary>
        /// 上一次访问时间
        /// </summary>
        public DateTime? PreviousVisit { get; set; }

        /// <summary>
        /// 最后访问时间
        /// </summary>
        public DateTime? LastVisit { get; set; }

        /// <summary>
        /// 最后修改密码日期
        /// </summary>
        public DateTime? ChangePasswordDate { get; set; }

        /// <summary>
        /// 允许同时有多用户登录
        /// </summary>
        public int? MultiUserLogin { get; set; }

        /// <summary>
        /// 登录次数
        /// </summary>
        public int? LogOnCount { get; set; }

        /// <summary>
        /// 密码连续错误次数
        /// </summary>
        public int? PasswordErrorCount { get; set; }

        /// <summary>
        /// 在线状态
        /// </summary>
        public int? UserOnLine { get; set; }

        /// <summary>
        /// IP访问限制
        /// </summary>
        public int? CheckIPAddress { get; set; }

        /// <summary>
        /// 登录IP地址
        /// </summary>
        public String IPAddress { get; set; }

        /// <summary>
        /// 登录MAC地址
        /// </summary>
        public String MACAddress { get; set; }

        /// <summary>
        /// 密码提示问题
        /// </summary>
        public String Question { get; set; }

        /// <summary>
        /// 密码提示答案
        /// </summary>
        public String AnswerQuestion { get; set; }

        /// <summary>
        /// 创建日期
        /// </summary>
        public DateTime? CreateOn { get; set; }

        /// <summary>
        /// 创建用户主键
        /// </summary>
        public String CreateUserId { get; set; }

        /// <summary>
        /// 创建用户
        /// </summary>
        public String CreateBy { get; set; }

        /// <summary>
        /// 修改日期
        /// </summary>
        public DateTime? ModifiedOn { get; set; }

        /// <summary>
        /// 修改用户主键
        /// </summary>
        public String ModifiedUserId { get; set; }

        /// <summary>
        /// 修改用户
        /// </summary>
        public String ModifiedBy { get; set; }

        /// <summary>
        /// 构造函数
        /// </summary>
        public PiUserLogOnEntity()
        {
            this.OpenId = BusinessLogic.NewGuid();
            this.MultiUserLogin = 0;
            this.UserOnLine = 0;
        }

        /// <summary>
        /// 从数据行读取
        /// </summary>
        /// <param name="dataRow">数据行</param>
        protected override BaseEntity GetFrom(IDataRow dataRow)
        {
            this.Id = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldId]);
            this.UserFrom = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldUserFrom]);
            this.UserPassword = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldUserPassword]);
            this.OpenId = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldOpenId]);
            this.AllowStartTime = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldAllowStartTime]);
            this.AllowEndTime = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldAllowEndTime]);
            this.LockStartDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldLockStartDate]);
            this.LockEndDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldLockEndDate]);
            this.FirstVisit = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldFirstVisit]);
            this.PreviousVisit = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldPreviousVisit]);
            this.LastVisit = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldLastVisit]);
            this.ChangePasswordDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldChangePasswordDate]);
            this.MultiUserLogin = BusinessLogic.ConvertToNullableInt(dataRow[PiUserLogOnTable.FieldMultiUserLogin]);
            this.LogOnCount = BusinessLogic.ConvertToNullableInt(dataRow[PiUserLogOnTable.FieldLogOnCount]);
            this.PasswordErrorCount = BusinessLogic.ConvertToNullableInt(dataRow[PiUserLogOnTable.FieldPasswordErrorCount]);
            this.UserOnLine = BusinessLogic.ConvertToNullableInt(dataRow[PiUserLogOnTable.FieldUserOnLine]);
            this.CheckIPAddress = BusinessLogic.ConvertToNullableInt(dataRow[PiUserLogOnTable.FieldCheckIPAddress]);
            this.IPAddress = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldIPAddress]);
            this.MACAddress = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldMACAddress]);
            this.Question = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldQuestion]);
            this.AnswerQuestion = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldAnswerQuestion]);
            this.CreateOn = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldCreateOn]);
            this.CreateUserId = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldCreateUserId]);
            this.CreateBy = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldCreateBy]);
            this.ModifiedOn = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserLogOnTable.FieldModifiedOn]);
            this.ModifiedUserId = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldModifiedUserId]);
            this.ModifiedBy = BusinessLogic.ConvertToString(dataRow[PiUserLogOnTable.FieldModifiedBy]);
            return this;
        }
    }
}
