#region RDIFramework.NET-generated
//------------------------------------------------------------------------------
//     RDIFramework.NET（.NET快速信息化系统开发、整合框架）是基于.NET的快速信息化系统开发、整合框架，给用户和开发者最佳的.Net框架部署方案。
//     RDIFramework.NET平台包含基础公共类库、强大的权限控制、模块分配、数据字典、自动升级、各商业级控件库、工作流平台、代码生成器、开发辅助
//工具等，应用系统的各个业务功能子系统，在系统体系结构设计的过程中被设计成各个原子功能模块，各个子功能模块按照业务功能组织成单独的程序集文
//件，各子系统开发完成后，由RDIFramework.NET平台进行统一的集成部署。
//
//	框架官网：http://www.rdiframework.net/
//	框架博客：http://blog.rdiframework.net/
//	交流QQ：406590790 
//	邮件交流：406590790@qq.com
//	其他博客：
//    http://www.cnblogs.com/huyong 
//    http://blog.csdn.net/chinahuyong
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由RDIFramework.NET平台代码生成工具自动生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#endregion
using System;

namespace RDIFramework.BizLogic
{
    using RDIFramework.Utilities;

    /// <summary>
    /// PiUserEntity
    /// 用户账户表
    ///
    /// 修改纪录
    /// 
    ///     2016-01-30 版本：3.0 XuWangBin 新增离职相关的列。
    ///     2014-07-30 版本: 2.8 XuWangBin 以自动属性进行重新组织。
    ///     2014-03-27 版本：3.0 XuWangBin 重新整理用户帐号表，分离登录信息部分列
    ///		2012-03-02 版本：3.0 XuWangBin 创建主键。
    ///
    /// 版本：3.0
    ///
    /// <author>
    ///		<name>XuWangBin</name>
    ///		<date>2012-03-02</date>
    /// </author>
    /// </summary>
    [Serializable]
    public class PiUserEntity : BaseEntity
    {
        /// <summary>
        /// 主键
        /// </summary>
        public String Id { get; set; }

        /// <summary>
        /// 用户密码
        /// </summary>
        public string UserPassword { get; set; }

        /// <summary>
        /// 编号
        /// </summary>
        public String Code { get; set; }

        /// <summary>
        /// 登录名
        /// </summary>
        public String UserName { get; set; }

        /// <summary>
        /// 姓名
        /// </summary>
        public String RealName { get; set; }

        /// <summary>
        /// 昵称
        /// </summary>
        public String NickName { get; set; }

        /// <summary>
        /// 快速查询键
        /// </summary>
        public String QuickQuery { get; set; }

        /// <summary>
        /// 默认角色主键
        /// </summary>
        public String RoleId { get; set; }

        /// <summary>
        /// 默认角色名称（不做数据绑定V3.0新增）
        /// </summary>
        public String RoleName { get; set; }

        /// <summary>
        /// 公司主键
        /// </summary>
        public String CompanyId { get; set; }

        /// <summary>
        /// 公司名称
        /// </summary>
        public String CompanyName { get; set; }

        /// <summary>
        /// 子公司（分支机构）主键
        /// </summary>
        public String SubCompanyId { get; set; }

        /// <summary>
        /// 子公司（分支机构）名称
        /// </summary>
        public String SubCompanyName { get; set; }

        /// <summary>
        /// 部门主键
        /// </summary>
        public String DepartmentId { get; set; }

        /// <summary>
        /// 部门名称
        /// </summary>
        public String DepartmentName { get; set; }

        /// <summary>
        /// 子部门主键
        /// </summary>
        public String SubDepartmentId { get; set; }

        /// <summary>
        /// 子部门名称
        /// </summary>
        public String SubDepartmentName { get; set; }

        /// <summary>
        /// 工作组主键
        /// </summary>
        public String WorkgroupId { get; set; }

        /// <summary>
        /// 工作组名称
        /// </summary>
        public String WorkgroupName { get; set; }

        /// <summary>
        /// 工作行业
        /// </summary>
        public String WorkCategory { get; set; }

        /// <summary>
        /// 安全级别
        /// </summary>
        public int? SecurityLevel { get; set; }

        /// <summary>
        /// 职称
        /// </summary>
        public String Title { get; set; }

        /// <summary>
        /// 岗位
        /// </summary>
        public String Duty { get; set; }

        /// <summary>
        /// 电子邮件
        /// </summary>
        public String Email { get; set; }

        /// <summary>
        /// 系统语言选择
        /// </summary>
        public String Lang { get; set; }

        /// <summary>
        /// 性别
        /// </summary>
        public String Gender { get; set; }

        /// <summary>
        /// 出生日期
        /// </summary>
        public DateTime? Birthday { get; set; }

        /// <summary>
        /// 手机
        /// </summary>
        public String Mobile { get; set; }

        /// <summary>
        /// 固定电话
        /// </summary>
        public String Telephone { get; set; }

        /// <summary>
        /// QQ号码
        /// </summary>
        public String QICQ { get; set; }

        /// <summary>
        /// 个性签名
        /// </summary>
        public String Signature { get; set; }

        /// <summary>
        /// 系统样式选择
        /// </summary>
        public String Theme { get; set; }

        /// <summary>
        /// 是否职员
        /// </summary>
        public int? IsStaff { get; set; }

        /// <summary>
        /// 是否显示
        /// </summary>
        public int? IsVisible { get; set; }

        /// <summary>
        /// 审核状态
        /// </summary>
        public String AuditStatus { get; set; }

        /// <summary>
        /// 家庭住址
        /// </summary>
        public String HomeAddress { get; set; }

        /// <summary>
        /// 用户默认地址
        /// </summary>
        public String UserAddress { get; set; }

        /// <summary>
        /// 离职
        /// </summary>
        public int? IsDimission { get; set; }

        /// <summary>
        /// 离职日期
        /// </summary>
        public DateTime? DimissionDate { get; set; }

        /// <summary>
        /// 离职原因
        /// </summary>
        public String DimissionCause { get; set; }

        /// <summary>
        /// 离职去向
        /// </summary>
        public String DimissionWhither { get; set; }

        /// <summary>
        /// 删除标志
        /// </summary>
        public int? DeleteMark { get; set; }

        /// <summary>
        /// 有效取值范围（1：有效、0：失效、-1：未激活）
        /// </summary>
        public int? Enabled { get; set; }

        /// <summary>
        /// 排序码
        /// </summary>
        public int? SortCode { get; set; }

        /// <summary>
        /// 描述
        /// </summary>
        public String Description { get; set; }

        /// <summary>
        /// 创建日期
        /// </summary>
        public DateTime? CreateOn { get; set; }

        /// <summary>
        /// 创建用户主键
        /// </summary>
        public String CreateUserId { get; set; }

        /// <summary>
        /// 创建用户
        /// </summary>
        public String CreateBy { get; set; }

        /// <summary>
        /// 修改日期
        /// </summary>
        public DateTime? ModifiedOn { get; set; }

        /// <summary>
        /// 修改用户主键
        /// </summary>
        public String ModifiedUserId { get; set; }

        /// <summary>
        /// 修改用户
        /// </summary>
        public String ModifiedBy { get; set; }

        /// <summary>
        /// 构造函数
        /// </summary>
        public PiUserEntity()
        {
            this.IsStaff = 1;
            this.IsVisible = 1;
            this.SecurityLevel = null;
            this.Enabled = 0;
            this.DeleteMark = 0;
            this.IsDimission = 0;
            this.SortCode = null;
        }

        /// <summary>
        /// 从数据行读取
        /// </summary>
        /// <param name="dataRow">数据行</param>
        protected override BaseEntity GetFrom(IDataRow dataRow)
        {
            this.Id = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldId]);
            this.Code = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldCode]);
            this.UserName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldUserName]);
            this.RealName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldRealName]);
            this.NickName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldNickName]);
            this.QuickQuery = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldQuickQuery]);
            this.RoleId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldRoleId]);
            this.CompanyId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldCompanyId]);
            this.CompanyName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldCompanyName]);
            this.SubCompanyId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldSubCompanyId]);
            this.SubCompanyName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldSubCompanyName]);
            this.DepartmentId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldDepartmentId]);
            this.DepartmentName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldDepartmentName]);
            this.SubDepartmentId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldSubDepartmentId]);
            this.SubDepartmentName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldSubDepartmentName]);
            this.WorkgroupId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldWorkgroupId]);
            this.WorkgroupName = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldWorkgroupName]);
            this.WorkCategory = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldWorkCategory]);
            this.SecurityLevel = BusinessLogic.ConvertToNullableInt(dataRow[PiUserTable.FieldSecurityLevel]);
            this.Title = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldTitle]);
            this.Duty = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldDuty]);
            this.Email = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldEmail]);
            this.Lang = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldLang]);
            this.Gender = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldGender]);
            this.Birthday = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserTable.FieldBirthday]);
            this.Mobile = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldMobile]);
            this.Telephone = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldTelephone]);
            this.QICQ = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldQICQ]);
            this.Signature = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldSignature]);
            this.Theme = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldTheme]);
            this.IsStaff = BusinessLogic.ConvertToNullableInt(dataRow[PiUserTable.FieldIsStaff]);
            this.IsVisible = BusinessLogic.ConvertToNullableInt(dataRow[PiUserTable.FieldIsVisible]);
            this.AuditStatus = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldAuditStatus]);
            this.HomeAddress = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldHomeAddress]);
            this.UserAddress = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldUserAddress]);
            this.IsDimission = BusinessLogic.ConvertToNullableInt(dataRow[PiUserTable.FieldIsDimission]);
            this.DimissionDate = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserTable.FieldDimissionDate]);
            this.DimissionCause = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldDimissionCause]);
            this.DimissionWhither = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldDimissionWhither]);
            this.DeleteMark = BusinessLogic.ConvertToNullableInt(dataRow[PiUserTable.FieldDeleteMark]);
            this.Enabled = BusinessLogic.ConvertToNullableInt(dataRow[PiUserTable.FieldEnabled]);
            this.SortCode = BusinessLogic.ConvertToNullableInt(dataRow[PiUserTable.FieldSortCode]);
            this.Description = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldDescription]);
            this.CreateOn = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserTable.FieldCreateOn]);
            this.CreateUserId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldCreateUserId]);
            this.CreateBy = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldCreateBy]);
            this.ModifiedOn = BusinessLogic.ConvertToNullableDateTime(dataRow[PiUserTable.FieldModifiedOn]);
            this.ModifiedUserId = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldModifiedUserId]);
            this.ModifiedBy = BusinessLogic.ConvertToString(dataRow[PiUserTable.FieldModifiedBy]);
            return this;
        }
    }
}
