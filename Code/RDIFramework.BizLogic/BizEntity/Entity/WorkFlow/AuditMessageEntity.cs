#region RDIFramework.NET-generated
//------------------------------------------------------------------------------
//     RDIFramework.NET（.NET快速信息化系统开发、整合框架）是基于.NET的快速信息化系统开发、整合框架，给用户和开发者最佳的.Net框架部署方案。
//     RDIFramework.NET平台包含基础公共类库、强大的权限控制、模块分配、数据字典、自动升级、各商业级控件库、工作流平台、代码生成器、开发辅助
//工具等，应用系统的各个业务功能子系统，在系统体系结构设计的过程中被设计成各个原子功能模块，各个子功能模块按照业务功能组织成单独的程序集文
//件，各子系统开发完成后，由RDIFramework.NET平台进行统一的集成部署。
//
//	框架官网：http://www.rdiframework.net/
//	框架博客：http://blog.rdiframework.net/
//	交流QQ：406590790 
//	邮件交流：406590790@qq.com
//	其他博客：
//    http://www.cnblogs.com/huyong 
//    http://blog.csdn.net/chinahuyong
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由RDIFramework.NET平台代码生成工具自动生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#endregion

using System;

namespace RDIFramework.BizLogic
{
    using RDIFramework.Utilities;

    /// <summary>
    /// AuditMessageEntity
    /// 
    /// 
    /// 修改纪录
    /// 
    /// 2014-06-03 版本：1.0 XuWangBin 创建主键。
    /// 
    /// 版本：3.0
    /// 
    /// <author>
    /// <name>XuWangBin</name>
    /// <date>2014-06-03</date>
    /// </author>
    /// </summary>
    [Serializable]
    public partial class AuditMessageEntity : BaseEntity
    {
        /// <summary>
        /// AuditId
        /// </summary>
        public String AuditId { get; set; }

        /// <summary>
        /// WorkflowId
        /// </summary>
        public String WorkflowId { get; set; }

        /// <summary>
        /// WorkflowInsId
        /// </summary>
        public String WorkflowInsId { get; set; }

        /// <summary>
        /// WorktaskId
        /// </summary>
        public String WorktaskId { get; set; }

        /// <summary>
        /// WorktaskInsId
        /// </summary>
        public String WorktaskInsId { get; set; }

        /// <summary>
        /// OperatorInsId
        /// </summary>
        public String OperatorInsId { get; set; }

        /// <summary>
        /// Message
        /// </summary>
        public String Message { get; set; }

        /// <summary>
        /// AuditUserId
        /// </summary>
        public String AuditUserId { get; set; }

        /// <summary>
        /// AuditUserName
        /// </summary>
        public String AuditUserName { get; set; }

        /// <summary>
        /// AuditDuty
        /// </summary>
        public String AuditDuty { get; set; }

        /// <summary>
        /// AuditArch
        /// </summary>
        public String AuditArch { get; set; }

        /// <summary>
        /// AuditResult
        /// </summary>
        public String AuditResult { get; set; }

        /// <summary>
        /// AuditTime
        /// </summary>
        public DateTime? AuditTime { get; set; }

        /// <summary>
        /// AuditXYB
        /// </summary>
        public int? AuditXYB { get; set; }

        /// <summary>
        /// 构造函数
        /// </summary>
        public AuditMessageEntity()
        {
            this.AuditTime = DateTime.Now;
        }

        /// <summary>
        /// 从数据行读取
        /// </summary>
        /// <param name="dataRow">数据行</param>
        protected override BaseEntity GetFrom(IDataRow dataRow)
        {
            this.AuditId = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldAuditId]);
            this.WorkflowId = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldWorkflowId]);
            this.WorkflowInsId = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldWorkflowInsId]);
            this.WorktaskId = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldWorktaskId]);
            this.WorktaskInsId = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldWorktaskInsId]);
            this.OperatorInsId = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldOperatorInsId]);
            this.Message = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldMessage]);
            this.AuditUserId = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldAuditUserId]);
            this.AuditUserName = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldAuditUserName]);
            this.AuditDuty = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldAuditDuty]);
            this.AuditArch = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldAuditArch]);
            this.AuditResult = BusinessLogic.ConvertToString(dataRow[AuditMessageTable.FieldAuditResult]);
            this.AuditTime = BusinessLogic.ConvertToNullableDateTime(dataRow[AuditMessageTable.FieldAuditTime]);
            this.AuditXYB = BusinessLogic.ConvertToNullableInt(dataRow[AuditMessageTable.FieldAuditXYB]);
            return this;
        }
    }
}
