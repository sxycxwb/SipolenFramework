<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RDIFramework.Utilities</name>
    </assembly>
    <members>
        <member name="T:RDIFramework.Utilities.MSOracleProvider">
            <summary>
            OracleHelper
            有关数据库连接的方法。
            
            修改纪录
            
            	2008.08.26 版本：1.3 EricHu 修改Open时的错误反馈。
            	2008.06.01 版本：1.2 EricHu 数据库连接获得方式进行改进，构造函数获得调通。
            	2008.05.08 版本：1.1 EricHu 调试通过，修改一些 有关参数的 Bug。
            	2008.05.07 版本：1.0 EricHu 创建。
            
            版本：1.3
            
            <author>
            	<name>EricHu</name>
            	<date>2010.08.26</date>
            </author> 
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.BaseDbProvider">
            <summary>
            BaseDbProvider
            数据库访问层基础类。
            
            修改纪录
                
                2011.02.20 版本：3.2 EricHu 重新排版代码。
                2011.01.29 版本：3.1 EricHu 实现IDisposable接口。
                2010.06.13 版本：3.0 EricHu 改进为支持静态方法，不用数据库Open、Close的方式，AutoOpenClose开关。
            	2010.03.14 版本：2.0 EricHu 无法彻底释放、并发时出现异常问题解决。
            	2009.11.25 版本：1.0 EricHu 改进ConnectionString。
            
            版本：3.2
            
            <author>
            	<name>EricHu</name>
            	<date>2011.02.20</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.GetInstance">
            <summary>
            DbProviderFactory实例
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.SqlSafe(System.String)">
            <summary>
            检查参数的安全性
            </summary>
            <param name="value">参数</param>
            <returns>安全的参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.PlusSign">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Open">
            <summary>
            这时主要的获取数据库连接的方法
            </summary>
            <returns>数据库连接</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Open(System.String)">
            <summary>
            获得新的数据库连接
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <returns>数据库连接</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.GetDbConnection">
            <summary>
            获取数据库连接
            </summary>
            <returns>数据库连接</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.GetDbTransaction">
            <summary>
            获取数据源上执行的事务
            </summary>
            <returns>数据源上执行的事务</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.GetDbCommand">
            <summary>
            获取数据源上命令
            </summary>
            <returns>数据源上命令</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteReader(System.String)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <returns>结果集流</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteReader(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>结果集流</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteReader(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>结果集流</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteNonQuery(System.String)">
            <summary>
            执行查询, SQL BUILDER 用了这个东西？参数需要保存, 不能丢失.
            </summary>
            <param name="commandText">sql查询</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteNonQuery(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteNonQuery(System.String,System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="commandType">命令分类</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteNonQuery(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteNonQuery(System.Data.IDbTransaction,System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="transaction">数据库事务</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteScalar(System.String)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <returns>object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteScalar(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>Object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteScalar(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>Object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteScalar(System.Data.IDbTransaction,System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="transaction">数据库事务</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>Object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.String)">
            <summary>
            填充数据表
            </summary>
            <param name="commandText">查询</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.Data.DataTable,System.String)">
            <summary>
            填充数据表
            </summary>
            <param name="dataTable">目标数据表</param>
            <param name="commandText">查询</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据表
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.Data.DataTable,System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据表
            </summary>
            <param name="dataTable">目标数据表</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            填充数据表
            </summary>
            <param name="commandText">sql查询</param>
            <param name="commandType">命令分类</param>
            <param name="dbParameters">参数集</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.Data.DataTable,System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            填充数据表
            </summary>
            <param name="dataTable">目标数据表</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.Data.DataSet,System.String,System.String)">
            <summary>
            填充数据权限
            </summary>
            <param name="dataSet">目标数据权限</param>
            <param name="commandText">查询</param>
            <param name="tableName">填充表</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.Data.DataSet,System.String,System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据权限
            </summary>
            <param name="dataSet">数据权限</param>
            <param name="commandText">sql查询</param>
            <param name="tableName">填充表</param>
            <param name="dbParameters">参数集</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Fill(System.Data.DataSet,System.Data.CommandType,System.String,System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据权限
            </summary>
            <param name="dataSet">数据权限</param>
            <param name="commandType">命令分类</param>
            <param name="commandText">sql查询</param>
            <param name="tableName">填充表</param>
            <param name="dbParameters">参数集</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteProcedure(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="procedureName">存储过程</param>
            <returns>int</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteProcedure(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行代参数的存储过程
            </summary>
            <param name="procedureName">存储过程名</param>
            <param name="dbParameters">参数集</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.ExecuteProcedureForDataTable(System.String,System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行存储过程返回数据表
            </summary>
            <param name="procedureName">存储过程</param>
            <param name="tableName">填充表</param>
            <param name="dbParameters">参数集</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.BeginTransaction">
            <summary>
            事务开始
            </summary>
            <returns>事务</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.CommitTransaction">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.RollbackTransaction">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Close">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.WriteLog(System.String,System.String)">
            <summary>
            写入sql查询句日志
            </summary>
            <param name="commandText">异常</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.Dispose">
            <summary>
            内存回收
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.SqlBulkCopyData(System.Data.DataTable)">
            <summary>
            利用Net SqlBulkCopy 批量导入数据库,速度超快
            </summary>
            <param name="dataTable">源内存数据表</param>
        </member>
        <member name="M:RDIFramework.Utilities.BaseDbProvider.GetPageList(System.Data.IDbDataParameter[])">
            <summary>
            得到分页数据(用存储过程实现)
            </summary>
            <param name="connection">存储过程的相关参数</param>
            <returns>分页后的数据（DataTable）</returns>
        </member>
        <member name="P:RDIFramework.Utilities.BaseDbProvider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.BaseDbProvider.DbConnection">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.BaseDbProvider.DbCommand">
            <summary>
            命令
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.BaseDbProvider.DbDataAdapter">
            <summary>
            数据库适配器
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.BaseDbProvider.ConnectionString">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.BaseDbProvider.InTransaction">
            <summary>
            是否已采用事务
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.BaseDbProvider.AutoOpenClose">
            <summary>
            默认打开关闭数据库选项（默认为否）
            </summary>
        </member>
        <!-- 对于成员“T:RDIFramework.Utilities.IDbProvider”忽略有格式错误的 XML 注释 -->
        <member name="M:RDIFramework.Utilities.IDbProvider.GetInstance">
            <summary>
            创建提供程序对数据源类的实现的实例。
            </summary>
            <returns>数据源类的实现的实例</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.GetDBNow">
            <summary>
            获得数据库当前日期
            </summary>
            <returns>当前日期</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.GetDBDateTime">
            <summary>
            获得数据库当前日期
            </summary>
            <returns>当前日期</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.SqlSafe(System.String)">
            <summary>
            检查参数的安全性
            </summary>
            <param name="value">参数</param>
            <returns>安全的参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.PlusSign">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.GetParameter(System.String)">
            <summary>
            获得Sql参数表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            生成参数
            </summary>
            <param name="parameterName">目标字段</param>
            <param name="parameterValue">值</param>
            <param name="dbType">数据库类型</param>
            <param name="parameterSize">长度</param>
            <param name="parameterDirection">输入输出类型</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.GetDbConnection">
            <summary>
            获取数据库连接
            </summary>
            <returns>数据库连接</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.GetDbTransaction">
            <summary>
            获取数据源上执行的事务
            </summary>
            <returns>数据源上执行的事务</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.GetDbCommand">
            <summary>
            获取数据源上命令
            </summary>
            <returns>数据源上命令</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Open">
            <summary>
            打开数据库连接
            </summary>
            <returns>数据库连接</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Open(System.String)">
            <summary>
            打开数据库连接
            </summary>
            <param name="connectionString">数据库连接字符串</param>
            <returns>数据库连接</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.BeginTransaction">
            <summary>
            事务开始
            </summary>
            <returns>事务</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.CommitTransaction">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.RollbackTransaction">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Close">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteReader(System.String)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <returns>结果集流</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteReader(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>结果集流</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteReader(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>结果集流</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteNonQuery(System.String)">
            <summary>
            执行查询, SQL BUILDER 用了这个东西？参数需要保存, 不能丢失.
            </summary>
            <param name="commandText">sql查询</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteNonQuery(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteNonQuery(System.String,System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="commandType">命令分类</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteNonQuery(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteNonQuery(System.Data.IDbTransaction,System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="dbTransaction">数据库事务</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteScalar(System.String)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <returns>Object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteScalar(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>Object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteScalar(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>Object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteScalar(System.Data.IDbTransaction,System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询
            </summary>
            <param name="dbTransaction">数据库事务</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>Object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.String)">
            <summary>
            填充数据表
            </summary>
            <param name="commandText">查询</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.Data.DataTable,System.String)">
            <summary>
            填充数据表
            </summary>
            <param name="dataTable">目标数据表</param>
            <param name="commandText">查询</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据表
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.Data.DataTable,System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据表
            </summary>
            <param name="dataTable">目标数据表</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            填充数据表
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="CommandType">命令分类</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.Data.DataTable,System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            填充数据表
            </summary>
            <param name="dataTable">目标数据表</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.Data.DataSet,System.String,System.String)">
            <summary>
            填充数据权限
            </summary>
            <param name="dataSet">目标数据权限</param>
            <param name="commandText">查询</param>
            <param name="tableName">填充表</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.Data.DataSet,System.String,System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据权限
            </summary>
            <param name="dataSet">数据权限</param>
            <param name="commandText">sql查询</param>
            <param name="tableName">填充表</param>
            <param name="dbParameters">参数集</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Fill(System.Data.DataSet,System.Data.CommandType,System.String,System.String,System.Data.IDbDataParameter[])">
            <summary>
            填充数据权限
            </summary>
            <param name="dataSet">数据权限</param>
            <param name="commandType">命令分类</param>
            <param name="commandText">sql查询</param>
            <param name="tableName">填充表</param>
            <param name="dbParameters">参数集</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteProcedure(System.String)">
            <summary>
            执行数据库查询
            </summary>
            <param name="procedureName">存储过程</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteProcedure(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="procedureName">存储过程名</param>
            <param name="dbParameters">参数集</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.ExecuteProcedureForDataTable(System.String,System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行数据库脚本
            </summary>
            <param name="procedureName">存储过程</param>
            <param name="tableName">填充表</param>
            <param name="dbParameters">参数集</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.WriteLog(System.String)">
            <summary>
            写入sql查询日志
            </summary>
            <param name="commandText">sql查询</param>
        </member>
        <member name="M:RDIFramework.Utilities.IDbProvider.Dispose">
            <summary>
            内存回收，撤销
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IDbProvider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IDbProvider.AutoOpenClose">
            <summary>
            默认打开关闭数据库选项（默认为否）
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IDbProvider.InTransaction">
            <summary>
            是否已在事务之中
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="connectionString">数据连接</param>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.GetDBNow">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.PlusSign">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.MakeInParam(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.MakeOutParam(System.String,System.Data.DbType,System.Int32)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.MakeInParam(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            获取输入参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">值</param>
            <param name="value"></param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="parameterName">目标字段</param>
            <param name="parameterValue">值</param>
            <param name="dbType">数据类型</param>
            <param name="parameterSize">长度</param>
            <param name="parameterDirection">参数类型</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MSOracleProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="P:RDIFramework.Utilities.MSOracleProvider.CurrentDbType">
            <summary> 
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.OracleProvider">
            <summary>
            OracleProvider
            有关数据库连接的方法。
            
            修改纪录
            
            	2008.08.26 版本：1.3 EricHu 修改Open时的错误反馈。
            	2008.06.01 版本：1.2 EricHu 数据库连接获得方式进行改进，构造函数获得调通。
            	2008.05.08 版本：1.1 EricHu 调试通过，修改一些 有关参数的 Bug。
            	2008.05.07 版本：1.0 EricHu 创建。
            
            版本：1.3
            
            <author>
            	<name>EricHu</name>
            	<date>2010.08.26</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="connectionString">数据连接</param>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.GetDBNow">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.SqlSafe(System.String)">
            <summary>
            检查参数的安全性
            </summary>
            <param name="value">参数</param>
            <returns>安全的参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.MakeInParam(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.MakeOutParam(System.String,System.Data.DbType,System.Int32)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.MakeInParam(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            获取输入参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">值</param>
            <param name="value"></param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <param name="direction">参数类型</param>
            <param name="value">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OracleProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="P:RDIFramework.Utilities.OracleProvider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.CellType">
            <summary>
            单元格类型
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellType.DataCell">
            <summary>
            数据单元格
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellType.HeaderCell">
            <summary>
            表头单元格
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.CellValueType">
            <summary>
            单元格值的类型
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellValueType.StringDenotable">
            <summary>可用 String 表示的，即可调用 ToString() 得到</summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellValueType.String">
            <summary>String</summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellValueType.DateTime">
            <summary>DateTime</summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellValueType.Boolean">
            <summary>Boolean</summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellValueType.Double">
            <summary>Double，数字的都用 double 表示</summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellValueType.RichText">
            <summary>IRichTextString</summary>
        </member>
        <member name="F:RDIFramework.Utilities.CellValueType.Other">
            <summary>其他，需要自己发现</summary>
        </member>
        <member name="T:RDIFramework.Utilities.DataGridViewExportable">
            <summary>
            将 DataGridView 封装成 Exportable
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.Exportable">
            <summary>
            固定行数和列数的 Exportable
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.IExportable">
            <summary>
            定义了一个可导出对象的规范
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IExportable.NextRow(System.Int32)">
            <summary>
            将行游标移动到下一个行.
            </summary>
            <param name="rowIndex">当前行的下标，从 0 开始，系统会自动计数，每成功获取一行会自动加一.</param>
            <returns>如果成功，返回 true，否则返回 false.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IExportable.NextCell(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            将游标移动到当前行的下一个单元格，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">当前行的下标，从 0 开始，系统会自动计数，每成功获取一行会自动加一.</param>
            <param name="columnIndex">当前列的下标，从 0 开始，系统会自动计数，每成功获取一个单元格会自动加一.</param>
            <param name="context">导出上下文.</param>
            <returns>成功则返回 true, 否则返回 false.</returns>
        </member>
        <member name="T:RDIFramework.Utilities.IExportHeader">
            <summary>
            导出对象的表头
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IExportHeader.NextHeaderCell(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            将单元格游标移动到下一个单元格.
            </summary>
            <param name="columnIndex">当前列的下标，从 0 开始，系统会自动计数，每成功获取一个单元格会自动加一.</param>
            <param name="context">导出上下文.</param>
            <returns>成功则返回 true, 否则返回 false.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.Exportable"/> class.
            </summary>
            <param name="rowCount">行数.</param>
            <param name="columnCount">列数.</param>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.Exportable"/> class.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.SetRowAndColumnCount(System.Int32,System.Int32)">
            <summary>
            Sets the row and column count.
            </summary>
            <param name="rowCount">行数.</param>
            <param name="columnCount">列数.</param>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.GetRowCount">
            <summary>
            获取行数.
            </summary>
            <returns>行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.GetColumnCount">
            <summary>
            获取列数.
            </summary>
            <returns>列数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.NextRow(System.Int32)">
            <summary>
            将行游标移动到下一个行.
            </summary>
            <param name="rowIndex">当前行的下标，从 0 开始，系统会自动计数，每成功获取一行会自动加一.</param>
            <returns>
            如果成功，返回 true，否则返回 false.
            </returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.NextCell(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            将游标移动到当前行的下一个单元格，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">当前行的下标，从 0 开始，系统会自动计数，每成功获取一行会自动加一.</param>
            <param name="columnIndex">当前列的下标，从 0 开始，系统会自动计数，每成功获取一个单元格会自动加一.</param>
            <param name="context">导出上下文.</param>
            <returns>
            成功则返回 true, 否则返回 false.
            </returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.GetValue(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定位置单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">行下标.</param>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.NextHeaderCell(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            将单元格游标移动到下一个单元格，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="columnIndex">当前列的下标，从 0 开始，系统会自动计数，每成功获取一个单元格会自动加一.</param>
            <param name="context">导出上下文.</param>
            <returns>
            成功则返回 true, 否则返回 false.
            </returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exportable.GetHeaderValue(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定表头单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="M:RDIFramework.Utilities.DataGridViewExportable.#ctor(System.Windows.Forms.DataGridView)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.DataGridViewExportable"/> class.
            </summary>
            <param name="dataGridView">The data grid view.</param>
        </member>
        <member name="M:RDIFramework.Utilities.DataGridViewExportable.GetValue(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定位置单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">行下标.</param>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="M:RDIFramework.Utilities.DataGridViewExportable.GetHeaderValue(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定表头单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="T:RDIFramework.Utilities.DataTableExportable">
            <summary>
            将 DataTable 封装成 IExportable
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DataTableExportable.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.DataTableExportable"/> class.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:RDIFramework.Utilities.DataTableExportable.GetValue(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定位置单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">行下标.</param>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="M:RDIFramework.Utilities.DataTableExportable.GetHeaderValue(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定表头单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="T:RDIFramework.Utilities.DataViewExportable">
            <summary>
            将 DataView 封装成 Exportable
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DataViewExportable.#ctor(System.Data.DataView)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.DataViewExportable"/> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:RDIFramework.Utilities.DataViewExportable.GetValue(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定位置单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">行下标.</param>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="M:RDIFramework.Utilities.DataViewExportable.GetHeaderValue(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定表头单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="T:RDIFramework.Utilities.ExportCallback">
            <summary>
            导出回调
            </summary>
            <param name="context">导出上下文.</param>
        </member>
        <member name="T:RDIFramework.Utilities.ExportContext">
            <summary>
            表示导出上下文
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ExportContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.ExportContext"/> class.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ExportContext.Reset">
            <summary>
            重设 CellValueType, CellStyle, IsValid 属性.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ExportContext.Clone">
            <summary>
            创建作为当前实例副本的新对象。
            </summary>
            <returns>
            作为此实例副本的新对象。
            </returns>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.Exporter">
            <summary>
            关联的导出工具
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.Exportable">
            <summary>
            获取导出上下文相关的 Exportable.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.Workbook">
            <summary>
            获取导出上下文相关的 Workbook
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.Sheet">
            <summary>
            获取导出上下文相关的 Sheet
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.StartRowIndex">
            <summary>
            当前导出的开始行下标（此值受之前使用 Union 的影响）.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.TotalRowIndex">
            <summary>
            获取总的行下标（ = StartRowIndex + RowIndex，如果仅有一个导出对象，则此值与 RowIndex 相同，否则不同）.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.RowIndex">
            <summary>
            获取导出上下文相关的 RowIndex
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.ColumnIndex">
            <summary>
            获取导出上下文相关的 ColumnIndex
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.CellType">
            <summary>
            单元格类型.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.CellValue">
            <summary>
            获取或设置当前单元格的导出值
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.StringValue">
            <summary>
            获取字符串值
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.CellValueType">
            <summary>
            单元格值的类型
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.CellStyle">
            <summary>
            获取或设置当前单元格的样式，为空表示不引用样式
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.IsValid">
            <summary>
            获取或设置当前单元格的有效性
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.Tag">
            <summary>
            获取或设置包含有关导出上下文的数据的对象.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.ColumnTags">
            <summary>
            获取或设置包含有关当前单元格所在的列的数据的对象的数组.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ExportContext.ColumnTag">
            <summary>
            获取或设置包含有关当前单元格所在的列的数据的对象.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.Exporter">
            <summary>
            导出工具（用于批量导出数据到 Excel）
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.Exporter"/> class.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.NewExcel">
            <summary>
            创建新的 excel 文档.
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.SetInitColumnCount(System.Int32)">
            <summary>
            设置列数（是一个参考值，如果指定准确的值，则在使用 ColumnTag 时，效率会高）.
            </summary>
            <param name="columnCount">列数目.</param>
            <returns>this, 以支持链式操作</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.NewSheet(System.String)">
            <summary>
            在当前 excel 文档中创建一个 sheet
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <param name="name">sheet 名称.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.Union(System.Int32,System.Int32,RDIFramework.Utilities.ExportCallback)">
            <summary>
            将 exportable 中的数据连接到当前 sheet 中
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <param name="rowCount">行数.</param>
            <param name="columnCount">列数.</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.UnionHeader(RDIFramework.Utilities.IExportHeader,RDIFramework.Utilities.ExportCallback)">
            <summary>
            将 exportable 中的数据连接到当前 sheet 中
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <param name="header">导出对象头.</param>
            <param name="callback">导出回调.</param>
            <returns>
            this, 以支持链式操作.
            </returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.Union(RDIFramework.Utilities.IExportable,RDIFramework.Utilities.ExportCallback)">
            <summary>
            将 exportable 中的数据连接到当前 sheet 中
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <param name="exportable">可导出对象.</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.DoUnion(RDIFramework.Utilities.IExportable,RDIFramework.Utilities.ExportCallback)">
            <summary>
            将 exportable 中的数据连接到当前 sheet 中
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <param name="exportable">可导出对象.</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.WriteTo(System.IO.Stream)">
            <summary>
            将当前 excel 文档写入到目标中
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <param name="output">目标流.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.WriteTo(System.String)">
            <summary>
            将当前 excel 文档写入到目标中
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <param name="fileName">目标文件.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.CloseExcel">
            <summary>
            关闭当前 excel 文档，释放资源
            调用顺序: NewExcel() -&gt; NewSheet() -&gt; Union() -&gt; WriteTo() -&gt; CloseExcel().
            </summary>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.ExportToExcel(System.Data.DataView,System.String,System.String,RDIFramework.Utilities.ExportCallback)">
            <summary>
            导出到 Excel.
            </summary>
            <param name="view">是导出的 DataView.</param>
            <param name="name">导出目标 sheet 的名称.</param>
            <param name="fileName">输出文件.</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.ExportToExcel(System.Data.DataTable,System.String,System.String,RDIFramework.Utilities.ExportCallback)">
            <summary>
            导出到 Excel.
            </summary>
            <param name="table">是导出的 DataTable.</param>
            <param name="name">导出目标 sheet 的名称.</param>
            <param name="fileName">输出文件.</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.ExportToExcel(RDIFramework.Utilities.IExportable,System.String,System.String,RDIFramework.Utilities.ExportCallback)">
            <summary>
            导出到 Excel.
            </summary>
            <param name="exportable">可导出对象.</param>
            <param name="name">导出目标 sheet 的名称.</param>
            <param name="fileName">输出文件.</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.ExportToExcel(RDIFramework.Utilities.IExportable,System.String,System.IO.Stream,RDIFramework.Utilities.ExportCallback)">
            <summary>
            导出到 Excel.
            </summary>
            <param name="exportable">可导出对象.</param>
            <param name="name">导出目标 sheet 的名称.</param>
            <param name="output">输出流.</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.ExportToExcelByPage(RDIFramework.Utilities.IExportable,System.String,System.Int32,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,RDIFramework.Utilities.ExportCallback)">
            <summary>
            分页导出到 Excel.
            </summary>
            <param name="exportable">可导出对象.</param>
            <param name="name">导出目标 sheet 的名称.</param>
            <param name="pageSize">每页的大小.</param>
            <param name="zip">导出目标流.</param>
            <param name="partNameFormat">分页文件命名格式 {0} 代表编号，必须至少包含一个 {0}，否则会出现命名冲突..</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.ExportToExcelByPage(RDIFramework.Utilities.IExportable,System.String,System.Int32,System.String,System.String,RDIFramework.Utilities.ExportCallback)">
            <summary>
            分页导出到 Excel.
            </summary>
            <param name="exportable">可导出对象.</param>
            <param name="name">导出目标 sheet 的名称.</param>
            <param name="pageSize">每页的大小.</param>
            <param name="fileName">导出目标流.</param>
            <param name="partNameFormat">分页文件命名格式 {0} 代表编号，必须至少包含一个 {0}，否则会出现命名冲突..</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.ExportToExcelByPage(RDIFramework.Utilities.PagedExportable,System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,RDIFramework.Utilities.ExportCallback)">
            <summary>
            分页导出到 Excel.
            </summary>
            <param name="paged">分页的 Exportable.</param>
            <param name="name">导出目标 sheet 的名称.</param>
            <param name="zip">导出目标流.</param>
            <param name="partNameFormat">分页文件命名格式 {0} 代表编号，必须至少包含一个 {0}，否则会出现命名冲突..</param>
            <param name="callback">导出回调.</param>
            <returns>this, 以支持链式操作.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Exporter.SetCell(NPOI.SS.UserModel.ICell,RDIFramework.Utilities.ExportContext)">
            <summary>
            设置单元格
            </summary>
            <param name="cell"></param>
            <param name="context"></param>
        </member>
        <member name="P:RDIFramework.Utilities.Exporter.Company">
            <summary>
            公司信息
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.Exporter.Subject">
            <summary>
            标题信息
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.GridViewExportable">
            <summary>
            将 GridView 封装成 Exportable
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.GridViewExportable.#ctor(System.Web.UI.WebControls.GridView)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.GridViewExportable"/> class.
            </summary>
            <param name="gridView">The grid view.</param>
        </member>
        <member name="M:RDIFramework.Utilities.GridViewExportable.GetValue(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定位置单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">行下标.</param>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="M:RDIFramework.Utilities.GridViewExportable.GetHeaderValue(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定表头单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="T:RDIFramework.Utilities.ListExportable">
            <summary>
            将 List 封装成 Exportable
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ListExportable.#ctor(System.Collections.IList,System.Type,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.ListExportable"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="type">The type.</param>
            <param name="props">The props.</param>
        </member>
        <member name="M:RDIFramework.Utilities.ListExportable.#ctor(System.Collections.IList,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.ListExportable"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:RDIFramework.Utilities.ListExportable.#ctor(System.Collections.IList,System.Reflection.PropertyInfo[])">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.ListExportable"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="props">The props.</param>
        </member>
        <member name="M:RDIFramework.Utilities.ListExportable.Init(System.Collections.IList,System.Reflection.PropertyInfo[])">
            <summary>
            Inits the specified list.
            </summary>
            <param name="list">The list.</param>
            <param name="props">The props.</param>
        </member>
        <member name="M:RDIFramework.Utilities.ListExportable.GetValue(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定位置单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">行下标.</param>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="M:RDIFramework.Utilities.ListExportable.GetHeaderValue(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            获取指定表头单元格的值，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="columnIndex">列下标.</param>
            <param name="context">导出上下文.</param>
        </member>
        <member name="T:RDIFramework.Utilities.PagedExportable">
            <summary>
            一个用于分页的 Exportable
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.PagedExportable.#ctor(RDIFramework.Utilities.IExportable,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.PagedExportable"/> class.
            </summary>
            <param name="target">包含要导出数据的 Exportable.</param>
            <param name="pageSize">分页大小.</param>
        </member>
        <member name="M:RDIFramework.Utilities.PagedExportable.#ctor(RDIFramework.Utilities.IExportHeader,RDIFramework.Utilities.IExportable,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.PagedExportable"/> class.
            </summary>
            <param name="header">导出头.</param>
            <param name="target">包含要导出数据的 Exportable.</param>
            <param name="pageSize">分页大小.</param>
        </member>
        <member name="M:RDIFramework.Utilities.PagedExportable.NextPage(System.Int32)">
            <summary>
            下翻一页.
            </summary>
            <param name="pageIndex">当前页的下标.</param>
        </member>
        <member name="M:RDIFramework.Utilities.PagedExportable.NextRow(System.Int32)">
            <summary>
            将行游标移动到下一个行.
            </summary>
            <param name="rowIndex">当前行的下标，从 0 开始，系统会自动计数，每成功获取一行会自动加一.</param>
            <returns>
            如果成功，返回 true，否则返回 false.
            </returns>
        </member>
        <member name="M:RDIFramework.Utilities.PagedExportable.NextCell(System.Int32,System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            将游标移动到当前行的下一个单元格，并填充当前 context 的 CellValue 等属性.
            </summary>
            <param name="rowIndex">当前行的下标，从 0 开始，系统会自动计数，每成功获取一行会自动加一.</param>
            <param name="columnIndex">当前列的下标，从 0 开始，系统会自动计数，每成功获取一个单元格会自动加一.</param>
            <param name="context">导出上下文.</param>
            <returns>
            成功则返回 true, 否则返回 false.
            </returns>
        </member>
        <member name="M:RDIFramework.Utilities.PagedExportable.NextHeaderCell(System.Int32,RDIFramework.Utilities.ExportContext)">
            <summary>
            将单元格游标移动到下一个单元格.
            </summary>
            <param name="columnIndex">当前列的下标，从 0 开始，系统会自动计数，每成功获取一个单元格会自动加一.</param>
            <param name="context">导出上下文.</param>
            <returns>
            成功则返回 true, 否则返回 false.
            </returns>
        </member>
        <member name="T:RDIFramework.Utilities.RDIFrameworkMessage">
             <summary>
            	RDIFrameworkMessage
             通用信息控制基类
             
             修改记录
                 2013-10-20 EricHu 2.7 重新组织，使用了partial进行了更明确的功能分类。
                 2013-10-08 EricHu 2.7 新增工作流部分消息。
                 2013-03-01 EricHu 2.0 新增了表字段服务相关方法对应消息。
                 2012-06-06 EricHu 1.5 重新组织了整个基类，使得结构更为清晰。
            		2012.02.17 EricHu 1.0 建立，为了提高效率分开建立了类。
            	
             版本：2.7
            
             <author>
            		<name>EricHu</name>
            		<date>2012.02.17</date>
             </author> 
             </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0000">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0001">
            <summary>
            发生未知错误。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0002">
            <summary>
            数据库连接不正常。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0003">
            <summary>
            WebService连接不正常。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0004">
            <summary>
            没有数据被修改。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0005">
            <summary>
            记录未找到，可能已被其他人删除。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0006">
            <summary>
            数据已被其他人修改，请按F5键重新更新取得数据。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0007">
            <summary>
            请输入{0}，不允许为空。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0008">
            <summary>
            {0} 已重复。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0009">
            <summary>
            新增成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0010">
            <summary>
            更新成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0011">
            <summary>
            保存成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0012">
            <summary>
            批量储存成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0013">
            <summary>
            删除成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0014">
            <summary>
            批量删除成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0015">
            <summary>
            您确认删除吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0016">
            <summary>
            您确认删除 '{0}' 吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0017">
            <summary>
            当前记录不允许被删除。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0018">
            <summary>
            当前记录 '{0}' 不允许被删除。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0019">
            <summary>
            当前记录不允许被编辑,请键重新获得最新资料。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0020">
            <summary>
            当前记录 '{0}' 不允许被编辑，请按重新获得最新资料。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0021">
            <summary>
            当前记录已是第一条记录。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0022">
            <summary>
            当前记录已是最后一条记录。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSGC023">
            <summary>
            请至少选择一项。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSGC024">
            <summary>
            只能选择一笔数据。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0024">
            <summary>
            请至少选择一项 '{0}'。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0025">
            <summary>
            '{0}' 不能大于 '{1}'。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0026">
            <summary>
            '{0}' 不能小于 '{1}'。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0027">
            <summary>
            '{0}' 不能等于 '{1}'。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0028">
             <summary>
            '{0}' 不是有效的日期。
             </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0029">
            <summary>
            '{0}' 不是有效的字符。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0030">
            <summary>
            '{0}' 不是有效的数字。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0031">
            <summary>
            '{0}' 不是有效的金额。
            </summary>
        </member>
        <!-- 对于成员“F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0032”忽略有格式错误的 XML 注释 -->
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0033">
            <summary>
            数据已经被引用，有关联资料在。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0034">
            <summary>
            数据已经被引用，有关联资料在，是否强制删除资料？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0035">
            <summary>
            {0} 有子节点不允许被删除，有子节点还未被删除。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0036">
            <summary>
            {0} 不能移动到 {1}。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0037">
            <summary>
            {0} 下的子节点不能移动到 {1}。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0038">
            <summary>
            确认移动 {0} 到 {1} 吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0039">
            <summary>
            '{0}' 不等于 '{1}'。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0040">
            <summary>
            {0} 错误。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0041">
            <summary>
            确认审核通过吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0042">
            <summary>
            确认审核退回吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0043">
            <summary>
            不能锁定数据。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0044">
            <summary>
            成功锁定数据。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0045">
            <summary>
            数据已经改变，想储存数据吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0046">
            <summary>
            最近 {0} 次内密码不能重复。。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0047">
            <summary>
            密码已过期，账号被锁定，请联系系统管理员。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0048">
            <summary>
            拒绝登入，用户已经在在线。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0049">
            <summary>
            拒绝登入，网卡Mac位置不符合限制条件。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0050">
            <summary>
            拒绝登入，IP位置不符限制条件。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0051">
            <summary>
            已到在线用户最大数量限制。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0052">
            <summary>
            IP位置格式不正确。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0053">
            <summary>
            MAC位置格式不正确。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0054">
            <summary>
            请填写IP位置或MAC位置信息。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0055">
            <summary>
            存在相同的IP位置。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0056">
            <summary>
            IP位置新增成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0057">
            <summary>
            IP位置新增失败。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0058">
            <summary>
            存在相同的MAC位置。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0059">
            <summary>
            MAC位置新增成功。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0060">
            <summary>
            请先新增该职员的登入系统用户信息。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0061">
            <summary>
            MAC位置新增失败。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0062">
            <summary>
            请设定新密码，原始密码未曾修改过。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0063">
            <summary>
            请设定新密码，30天内未曾修改过密码。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0064">
            <summary>
            您输入的分钟数值不正确，请检查。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0065">
            <summary>
            数据已经改变，不储存数据？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0075">
            <summary>
            您确认移除吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0076">
            <summary>
            您确认移除 {0} 吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0077">
            <summary>
            成功删除 {0} 笔记录。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0078">
            <summary>
            用户登入被拒，用户审核中。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0079">
            <summary>
            用户被锁定，登入被拒绝，请联系系统管理员。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0080">
            <summary>
            用户账号未被激活，请及时激活用户账号。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0081">
            <summary>
            用户被锁定，登入被拒绝，不可早于：
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0082">
            <summary>
            用户被锁定，登入被拒绝，不可晚于：
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0083">
            <summary>
            用户被锁定，登入被拒绝，锁定开始日期：
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0084">
            <summary>
            用户被锁定，登入被拒绝，锁定结束日期：
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0085">
            <summary>
            IP Address 不正确。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0086">
            <summary>
            MAC Address 不正确。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0087">
            <summary>
            用户已经上线，不允许重复登入。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0088">
            <summary>
            密码错误，登入被拒绝。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0089">
            <summary>
            已超出用户在线数量上限：
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0090">
            <summary>
            登入被拒绝。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0091">
            <summary>
            新增操作权限项。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0092">
            <summary>
            登入开始时间
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0093">
            <summary>
            登入结束时间
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0094">
            <summary>
            暂停开始时间
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0095">
            <summary>
            暂停结束日期
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0100">
            <summary>
            {0} 在在线，不允许删除。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0101">
            <summary>
            目前用户 {0} 不允许删除自己。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0600">
            <summary>
             您确认清除权限吗？
             </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0700">
            <summary>
            已经成功连接到目标数据。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0800">
            <summary>
            调用被拒绝，未经授权的访问。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG0900">
            <summary>
            服务调用被拒绝，用户未登入。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG1000">
            <summary>
            系统设定信息错误，请与软件开发商联系。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG1001">
            <summary>
            您确认重置功能选单吗？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG1002">
            <summary>
            指定的dll文件不存在。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RDIFrameworkMessage.MSG2000">
            <summary>
            {0} 不正确，请重新输入。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.RDIFrameworkMessage.GetLanguageResource">
            <summary>
            从当前指定的语系包读取信息，用了反射循环遍历
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.RDIFrameworkMessage.Format(System.String,System.String[])">
            <summary>
            格式化一个资源字符串
            </summary>
            <param name="value">目标字符串</param>
            <param name="messages">传入的信息</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.RDIFrameworkMessage.GetMessage(System.String)">
            <summary>
            读取一个资源定义
            </summary>
            <param name="id">资源主键</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.RDIFrameworkMessage.GetMessage(System.String,System.String[])">
            <summary>
            读取一个资源定义
            </summary>
            <param name="id">资源主键</param>
            <param name="messages">传入的信息</param>
            <returns>字符串</returns>
        </member>
        <member name="T:RDIFramework.Utilities.HttpHelper">
            <summary>
            HttpHelper（优先使用）
            用来实现Http访问，Post或者Get方式的，直接访问，带Cookie的，带证书的等方式，可以设置代理
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HttpHelper.GetHttpRequestData(System.String)">
            <summary>
            根据相传入的数据，得到相应页面数据
            </summary>
            <param name="strPostdata">传入的数据Post方式,get方式传NUll或者空字符串都可以</param>
            <returns>string类型的响应数据</returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpHelper.GetMemoryStream(System.IO.Stream)">
            <summary>
            4.0以下.net版本取水运
            </summary>
            <param name="streamResponse"></param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpHelper.SetRequest(RDIFramework.Utilities.HttpItem)">
             <summary>
             为请求准备参数
             </summary>
            <param name="objhttpItem">参数列表</param>
             <param name="_Encoding">读取数据时的编码方式</param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpHelper.SetWebProxy(System.String,System.String,System.String)">
            <summary>
            设置当前访问使用的代理
            </summary>
            <param name="userName">代理 服务器用户名</param>
            <param name="passWord">代理 服务器密码</param>
            <param name="ip">代理 服务器地址</param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpHelper.GetUrl(System.String)">
            <summary>    
            传入一个正确或不正确的URl，返回正确的URL
            </summary>    
            <param name="URL">url</param>   
            <returns>
            </returns>    
        </member>
        <member name="M:RDIFramework.Utilities.HttpHelper.GetHtml(RDIFramework.Utilities.HttpItem)">
            <summary>
            采用https协议访问网络,根据传入的URl地址，得到响应的数据字符串。
            </summary>
            <param name="objhttpItem">参数列表</param>
            <returns>String类型的数据</returns>
        </member>
        <member name="T:RDIFramework.Utilities.HttpItem">
            <summary>
            Http请求参考类 
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.URL">
            <summary>
            请求URL必须填写
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.Method">
            <summary>
            请求方式默认为GET方式
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.Accept">
            <summary>
            请求标头值 默认为text/html, application/xhtml+xml, */*
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.ContentType">
            <summary>
            请求返回类型默认 text/html
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.UserAgent">
            <summary>
            客户端访问信息默认Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.Encoding">
            <summary>
            返回数据编码默认为NUll,可以自动识别
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.Postdata">
            <summary>
            Post请求时要发送的Post数据
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.Cookie">
            <summary>
            请求时的Cookie
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.Referer">
            <summary>
            来源地址，上次访问地址
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpItem.CerPath">
            <summary>
            证书绝对路径
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.PinYinConverter">
            <summary>
            汉字拼音转换类
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.PinYinConverter.otherChinese">
            <summary>
            二级汉字数组
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.PinYinConverter.otherPinYin">
            <summary>
            二级汉字对应拼音数组
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.PinYinConverter.GetFirst(System.Char)">
            <summary>
            取拼音第一个字段
            </summary>        
            <param name="ch"></param>        
            <returns></returns>        
        </member>
        <member name="M:RDIFramework.Utilities.PinYinConverter.GetFirst(System.String)">
            <summary>
            取拼音第一个字段
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.PinYinConverter.Get(System.Char)">
            <summary>
            获取单字拼音
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.PinYinConverter.Get(System.String)">
            <summary>
            把汉字转换成拼音(全拼)
            </summary>
            <param name="str">汉字字符串</param>
            <returns>转换后的拼音(全拼)字符串</returns>
        </member>
        <member name="T:RDIFramework.Utilities.FTPUtil">
            <summary>
            FTPUtil
            FTP处理操作类
            常用功能：
            建立FTP链接、支持代理、多种重载的同步上传文件、多种重载的异步上传文件
            多种重载的同步下载文件、多种重载的异步下载文件、上传文件的进度百分比、下载文件的进度白分比
            有区分的列出目录或者文件的信息（考虑到MS DOS显示格式和UNIX格式）、目录或文件存在的判断
            删除文件、
            重命名文件、目录
            在FTP服务器上面拷贝、移动文件
            建立、删除目录
            目录切换操作
            </summary>
            <remarks>
            
            修改纪录：
                2011-06-17 版本V1.0 封装了FTP几个基本常用的操作接口，增加远程文件移动功能。
                2010-02-28 版本V2.0 EricHu FTPUtil
                
            版本2.0
            </remarks>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil.Request">
            <summary>
            FTP请求对象
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil.Response">
            <summary>
            FTP响应对象
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._Uri">
            <summary>
            FTP服务器地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._DirectoryPath">
            <summary>
            当前工作目录
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._UserName">
            <summary>
            FTP登录用户
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._Password">
            <summary>
            FTP登录密码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._Proxy">
            <summary>
            连接FTP服务器的代理服务
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._isDeleteTempFile">
            <summary>
            是否需要删除临时文件
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.FTPUtil._UploadTempFile">
            <summary>
            异步上传所临时生成的文件
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.#ctor(System.Uri,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="FtpUri">FTP地址</param>
            <param name="strUserName">登录用户名</param>
            <param name="strPassword">登录密码</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.#ctor(System.Uri,System.String,System.String,System.Net.WebProxy)">
            <summary>
            构造函数
            </summary>
            <param name="FtpUri">FTP地址</param>
            <param name="strUserName">登录用户名</param>
            <param name="strPassword">登录密码</param>
            <param name="objProxy">连接代理</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.Open(System.Uri,System.String)">
            <summary>
            建立FTP链接,返回响应对象
            </summary>
            <param name="uri">FTP地址</param>
            <param name="FtpMathod">操作命令</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.OpenRequest(System.Uri,System.String)">
            <summary>
            建立FTP链接,返回请求对象
            </summary>
            <param name="uri">FTP地址</param>
            <param name="FtpMathod">操作命令</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.DownloadFile(System.String,System.String)">
            <summary>
            从FTP服务器下载文件，使用与远程文件同名的文件名来保存文件
            </summary>
            <param name="RemoteFileName">远程文件名</param>
            <param name="LocalPath">本地路径</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.DownloadFile(System.String,System.String,System.String)">
            <summary>
            从FTP服务器下载文件，指定本地路径和本地文件名
            </summary>
            <param name="RemoteFileName">远程文件名</param>
            <param name="LocalPath">本地路径</param>
            <param name="LocalFileName">保存本地的文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.DownloadFile(System.String)">
            <summary>
            从FTP服务器下载文件，返回文件二进制数据
            </summary>
            <param name="RemoteFileName">远程文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.DownloadFileAsync(System.String,System.String,System.String)">
            <summary>
            从FTP服务器异步下载文件，指定本地路径和本地文件名
            </summary>
            <param name="RemoteFileName">远程文件名</param>        
            <param name="LocalPath">保存文件的本地路径,后面带有"\"</param>
            <param name="LocalFileName">保存本地的文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.DownloadFileAsync(System.String,System.String)">
            <summary>
            从FTP服务器异步下载文件，指定本地完整路径文件名
            </summary>
            <param name="RemoteFileName">远程文件名</param>
            <param name="LocalFullPath">本地完整路径文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.client_DownloadFileCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            异步下载文件完成之后触发的事件
            </summary>
            <param name="sender">下载对象</param>
            <param name="e">数据信息对象</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.client_DownloadProgressChanged(System.Object,System.Net.DownloadProgressChangedEventArgs)">
            <summary>
            异步下载进度发生改变触发的事件
            </summary>
            <param name="sender">下载对象</param>
            <param name="e">进度信息对象</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFile(System.String)">
            <summary> 
            上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFile(System.String,System.Boolean)">
            <summary>
            上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件</param>
            <param name="OverWriteRemoteFile">是否覆盖远程服务器上面同名的文件</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFile(System.String,System.String)">
            <summary>
            上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFile(System.String,System.String,System.Boolean)">
            <summary>
            上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件名</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
            <param name="OverWriteRemoteFile">是否覆盖远程服务器上面同名的文件</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFile(System.Byte[],System.String)">
            <summary>
            上传文件到FTP服务器
            </summary>
            <param name="FileBytes">上传的二进制数据</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFile(System.Byte[],System.String,System.Boolean)">
            <summary>
            上传文件到FTP服务器
            </summary>
            <param name="FileBytes">文件二进制内容</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
            <param name="OverWriteRemoteFile">是否覆盖远程服务器上面同名的文件</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFileAsync(System.String)">
            <summary>
            异步上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFileAsync(System.String,System.Boolean)">
            <summary>
            异步上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件</param>
            <param name="OverWriteRemoteFile">是否覆盖远程服务器上面同名的文件</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFileAsync(System.String,System.String)">
            <summary>
            异步上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFileAsync(System.String,System.String,System.Boolean)">
            <summary>
            异步上传文件到FTP服务器
            </summary>
            <param name="LocalFullPath">本地带有完整路径的文件名</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
            <param name="OverWriteRemoteFile">是否覆盖远程服务器上面同名的文件</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFileAsync(System.Byte[],System.String)">
            <summary>
            异步上传文件到FTP服务器
            </summary>
            <param name="FileBytes">上传的二进制数据</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.UploadFileAsync(System.Byte[],System.String,System.Boolean)">
            <summary>
            异步上传文件到FTP服务器
            </summary>
            <param name="FileBytes">文件二进制内容</param>
            <param name="RemoteFileName">要在FTP服务器上面保存文件名</param>
            <param name="OverWriteRemoteFile">是否覆盖远程服务器上面同名的文件</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.client_UploadFileCompleted(System.Object,System.Net.UploadFileCompletedEventArgs)">
            <summary>
            异步上传文件完成之后触发的事件
            </summary>
            <param name="sender">下载对象</param>
            <param name="e">数据信息对象</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.client_UploadProgressChanged(System.Object,System.Net.UploadProgressChangedEventArgs)">
            <summary>
            异步上传进度发生改变触发的事件
            </summary>
            <param name="sender">下载对象</param>
            <param name="e">进度信息对象</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.ListFilesAndDirectories">
            <summary>
            列出FTP服务器上面当前目录的所有文件和目录
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.ListFiles">
            <summary>
            列出FTP服务器上面当前目录的所有文件
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.ListDirectories">
            <summary>
            列出FTP服务器上面当前目录的所有的目录
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.GetList(System.String)">
            <summary>
            获得文件和目录列表
            </summary>
            <param name="datastring">FTP返回的列表字符信息</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.ParseFileStructFromWindowsStyleRecord(System.String)">
            <summary>
            从Windows格式中返回文件信息
            </summary>
            <param name="Record">文件信息</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.GuessFileListStyle(System.String[])">
            <summary>
            判断文件列表的方式Window方式还是Unix方式
            </summary>
            <param name="recordList">文件信息列表</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.ParseFileStructFromUnixStyleRecord(System.String)">
            <summary>
            从Unix格式中返回文件信息
            </summary>
            <param name="Record">文件信息</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil._cutSubstringFromStringWithTrim(System.String@,System.Char,System.Int32)">
            <summary>
            按照一定的规则进行字符串截取
            </summary>
            <param name="s">截取的字符串</param>
            <param name="c">查找的字符</param>
            <param name="startIndex">查找的位置</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.DirectoryExist(System.String)">
            <summary>
            判断当前目录下指定的子目录是否存在
            </summary>
            <param name="RemoteDirectoryName">指定的目录名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.FileExist(System.String)">
            <summary>
            判断一个远程文件是否存在服务器当前目录下面
            </summary>
            <param name="RemoteFileName">远程文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.DeleteFile(System.String)">
            <summary>
            从FTP服务器上面删除一个文件
            </summary>
            <param name="RemoteFileName">远程文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.ReName(System.String,System.String)">
            <summary>
            更改一个文件的名称或一个目录的名称
            </summary>
            <param name="RemoteFileName">原始文件或目录名称</param>
            <param name="NewFileName">新的文件或目录的名称</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.CopyFileToAnotherDirectory(System.String,System.String)">
            <summary>
            把当前目录下面的一个文件拷贝到服务器上面另外的目录中，注意，拷贝文件之后，当前工作目录还是文件原来所在的目录
            </summary>
            <param name="RemoteFile">当前目录下的文件名</param>
            <param name="DirectoryName">新目录名称。
            说明：如果新目录是当前目录的子目录，则直接指定子目录。如: SubDirectory1/SubDirectory2 ；
            如果新目录不是当前目录的子目录，则必须从根目录一级一级的指定。如： ./NewDirectory/SubDirectory1/SubDirectory2
            </param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.MoveFileToAnotherDirectory(System.String,System.String)">
            <summary>
            把当前目录下面的一个文件移动到服务器上面另外的目录中，注意，移动文件之后，当前工作目录还是文件原来所在的目录
            </summary>
            <param name="RemoteFile">当前目录下的文件名</param>
            <param name="DirectoryName">新目录名称。
            说明：如果新目录是当前目录的子目录，则直接指定子目录。如: SubDirectory1/SubDirectory2 ；
            如果新目录不是当前目录的子目录，则必须从根目录一级一级的指定。如： ./NewDirectory/SubDirectory1/SubDirectory2
            </param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.MakeDirectory(System.String)">
            <summary>
            在FTP服务器上当前工作目录建立一个子目录
            </summary>
            <param name="DirectoryName">子目录名称</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.RemoveDirectory(System.String)">
            <summary>
            从当前工作目录中删除一个子目录
            </summary>
            <param name="DirectoryName">子目录名称</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.IsValidPathChars(System.String)">
            <summary>
            判断目录名中字符是否合法
            </summary>
            <param name="DirectoryName">目录名称</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.IsValidFileChars(System.String)">
            <summary>
            判断文件名中字符是否合法
            </summary>
            <param name="FileName">文件名称</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.GotoDirectory(System.String)">
            <summary>
            进入一个目录
            </summary>
            <param name="DirectoryName">
            新目录的名字。 
            说明：如果新目录是当前目录的子目录，则直接指定子目录。如: SubDirectory1/SubDirectory2 ； 
            如果新目录不是当前目录的子目录，则必须从根目录一级一级的指定。如： ./NewDirectory/SubDirectory1/SubDirectory2
            </param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.EnterOneSubDirectory(System.String)">
            <summary>
            从当前工作目录进入一个子目录
            </summary>
            <param name="DirectoryName">子目录名称</param>
        </member>
        <member name="M:RDIFramework.Utilities.FTPUtil.ComeoutDirectory">
            <summary>
            从当前工作目录往上一级目录
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.FTPUtil.Uri">
            <summary>
            FTP服务器地址
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.FTPUtil.DirectoryPath">
            <summary>
            当前工作目录
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.FTPUtil.UserName">
            <summary>
            FTP登录用户
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.FTPUtil.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.FTPUtil.Password">
            <summary>
            FTP登录密码
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.FTPUtil.Proxy">
            <summary>
            连接FTP服务器的代理服务
            </summary>
        </member>
        <member name="E:RDIFramework.Utilities.FTPUtil.DownloadProgressChanged">
            <summary>
            异步下载进度发生改变触发的事件
            </summary>
        </member>
        <member name="E:RDIFramework.Utilities.FTPUtil.DownloadDataCompleted">
            <summary>
            异步下载文件完成之后触发的事件
            </summary>
        </member>
        <member name="E:RDIFramework.Utilities.FTPUtil.UploadProgressChanged">
            <summary>
            异步上传进度发生改变触发的事件
            </summary>
        </member>
        <member name="E:RDIFramework.Utilities.FTPUtil.UploadFileCompleted">
            <summary>
            异步上传文件完成之后触发的事件
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.IniFile">
            <summary>
            包含一组方法和属性，提供对 ini 文件的基本操作。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.#ctor(System.String)">
            <summary>
            使用默认字符编码从指定文件初始化 <see cref="T:RDIFramework.Utilities.IniFile"/> 类的新实例。
            </summary>
            <param name="fileName">指定 ini 文件的完整路径。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.#ctor(System.String,System.Text.Encoding)">
            <summary>
            从指定文件初始化 <see cref="T:RDIFramework.Utilities.IniFile"/> 类的新实例。
            </summary>
            <param name="fileName">指定 ini 文件的完整路径。</param>
            <param name="encoding">指定 ini 文件的字符编码。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.#ctor(System.String,System.Double)">
            <summary>
            使用默认字符编码从指定文件从指定文件初始化 <see cref="T:RDIFramework.Utilities.IniFile"/> 类的新实例。
            </summary>
            <param name="fileName">指定 ini 文件的完整路径。</param>
            <param name="interval">指定自动保存的时间间隔。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.#ctor(System.String,System.Text.Encoding,System.Double)">
            <summary>
            从指定文件初始化 <see cref="T:RDIFramework.Utilities.IniFile"/> 类的新实例。
            </summary>
            <param name="fileName">指定 ini 文件的完整路径。</param>
            <param name="encoding">指定 ini 文件的字符编码。</param>
            <param name="interval">指定自动保存的时间间隔。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile._ToBoolean(System.String)">
            <summary>
            将该字符串文本转换为 <see cref="T:System.Boolean"/> 类型。
            </summary>
            <param name="str">表示文本，即一系列 Unicode 字符。</param>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.String)">
            <summary>
            从指定配置节读取 <see cref="T:System.String"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.String"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Int32)">
            <summary>
            从指定配置节读取 <see cref="T:System.Int32"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Int32"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Boolean)">
            <summary>
            从指定配置节读取 <see cref="T:System.Boolean"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Boolean"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Byte)">
            <summary>
            从指定配置节读取 <see cref="T:System.Byte"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Byte"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Char)">
            <summary>
            从指定配置节读取 <see cref="T:System.Char"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Char"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.DateTime)">
            <summary>
            从指定配置节读取 <see cref="T:System.DateTime"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.DateTime"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Decimal)">
            <summary>
            从指定配置节读取 <see cref="T:System.Decimal"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Decimal"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Double)">
            <summary>
            从指定配置节读取 <see cref="T:System.Double"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Double"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Single)">
            <summary>
            从指定配置节读取 <see cref="T:System.Single"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Single"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Guid)">
            <summary>
            从指定配置节读取 <see cref="T:System.Guid"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Guid"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Int16)">
            <summary>
            从指定配置节读取 <see cref="T:System.Int16"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Int16"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.Int64)">
            <summary>
            从指定配置节读取 <see cref="T:System.Int64"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.Int64"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.UInt16)">
            <summary>
            从指定配置节读取 <see cref="T:System.UInt16"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.UInt16"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.UInt32)">
            <summary>
            从指定配置节读取 <see cref="T:System.UInt32"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.UInt32"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.UInt64)">
            <summary>
            从指定配置节读取 <see cref="T:System.UInt64"/>。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="defaultValue">指定默认值。</param>
            <returns>当成功获取指定配置节的指定键值时则返回一个 <see cref="T:System.UInt64"/> 值，否则返回 <paramref name="defaultValue"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.String,System.StringSplitOptions)">
            <summary>
            从指定配置节读取指定键的以指定分隔符分隔的字符串的集合。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="separator">指定分隔符。</param>
            <param name="options">指定 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> 以省略返回的数组中的空数组元素，或指定 <see cref="F:System.StringSplitOptions.None"/> 以包含返回的数组中的空数组元素。</param>
            <returns>返回指定配置节读取指定键的以指定分隔符分隔的字符串的集合。如果读取失败将返回空集合，而不是返回 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read(System.String,System.String,System.String[],System.StringSplitOptions)">
            <summary>
            从指定配置节读取指定键的以指定分隔符分隔的字符串的集合。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="separator">指定分隔字符串中子字符串的字符串数组、不包含分隔符的空数组或 null。</param>
            <param name="options">指定 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> 以省略返回的数组中的空数组元素，或指定 <see cref="F:System.StringSplitOptions.None"/> 以包含返回的数组中的空数组元素。</param>
            <returns>返回指定配置节读取指定键的以指定分隔符分隔的字符串的集合。如果读取失败将返回空集合，而不是返回 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read``1(System.String,System.String,System.String,System.StringSplitOptions,System.Converter{System.String,``0})">
            <summary>
            从指定配置节读取指定键的以指定分隔符分隔的类型为 <typeparamref name="T"/> 的集合。
            </summary>
            <typeparam name="T">表示集合中的值的类型。</typeparam>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="separator">指定分隔符。</param>
            <param name="options">指定 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> 以省略返回的数组中的空数组元素，或指定 <see cref="F:System.StringSplitOptions.None"/> 以包含返回的数组中的空数组元素。</param>
            <param name="converter">指定将集合中的字符串型的值转换为 <typeparamref name="T"/> 的方法。</param>
            <returns>返回指定配置节读取指定键的以指定分隔符分隔的类型为 <typeparamref name="T"/> 的集合。如果读取失败将返回空集合，而不是返回 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Read``1(System.String,System.String,System.String[],System.StringSplitOptions,System.Converter{System.String,``0})">
            <summary>
            从指定配置节读取指定键的以指定分隔符分隔的类型为 <typeparamref name="T"/> 的集合。
            </summary>
            <typeparam name="T">表示集合中的值的类型。</typeparam>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="separator">指定分隔字符串中子字符串的字符串数组、不包含分隔符的空数组或 null。</param>
            <param name="options">指定 <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> 以省略返回的数组中的空数组元素，或指定 <see cref="F:System.StringSplitOptions.None"/> 以包含返回的数组中的空数组元素。</param>
            <param name="converter">指定将集合中的字符串型的值转换为 <typeparamref name="T"/> 的方法。</param>
            <returns>返回指定配置节读取指定键的以指定分隔符分隔的类型为 <typeparamref name="T"/> 的集合。如果读取失败将返回空集合，而不是返回 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
            <summary>
            将指定的字符串集合以指定的分隔符串联后写入到指定的配置节的键。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定要写入的字符串集合。</param>
            <param name="separator">指定分隔字符串中子字符串的字符串数组、不包含分隔符的空数组或 null。</param>
            <param name="removeEmptyEntries">指定 true 以省略返回的数组中的空数组元素，或指定 false 以包含返回的数组中的空数组元素。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write``1(System.String,System.String,System.Collections.Generic.List{``0},System.String,System.Boolean,System.Converter{``0,System.String})">
            <summary>
            将指定的集合转换为字符串集合后以指定的分隔符串联后写入到指定的配置节的键。
            </summary>
            <typeparam name="T">表示集合中的值的类型。</typeparam>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定要写入的集合。</param>
            <param name="separator">指定分隔字符串中子字符串的字符串数组、不包含分隔符的空数组或 null。</param>
            <param name="removeEmptyEntries">指定 true 以省略返回的数组中的空数组元素，或指定 false 以包含返回的数组中的空数组元素。</param>
            <param name="converter">指定将集合中的 <typeparamref name="T"/> 的值转换为 <typeparamref name="T"/> 的方法。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.String)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.UpdateWrite(System.String,System.String,System.String)">
            <summary>
            更新键值的值
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Int32)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Boolean)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Byte)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Char)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.DateTime)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Decimal)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Double)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Single)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Guid)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Int16)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.Int64)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.UInt16)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.UInt32)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Write(System.String,System.String,System.UInt64)">
            <summary>
            在指定配置节写入键值对。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.DeleteKey(System.String,System.String)">
            <summary>
            从 ini 文件删除指定的键。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <param name="keyName">指定键名。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.DeleteSection(System.String)">
            <summary>
            从 ini 文件删除指定名称的配置节。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Save">
            <summary>
            保存配置信息。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Save(System.String)">
            <summary>
            保存配置信息到指定的文件。
            </summary>
            <param name="fileName">指定要保存到的文件的完整路径。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Save(System.String,System.Text.Encoding)">
            <summary>
            保存配置信息到指定的文件。
            </summary>
            <param name="fileName">指定要保存到的文件的完整路径。</param>
            <param name="encoding">指定字符编码。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFile.Refresh">
            <summary>
            刷新配置信息。
            </summary>
        </member>
        <member name="E:RDIFramework.Utilities.IniFile.Saved">
            <summary>
            数据保存完成时发生。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFile.Item(System.String)">
            <summary>
            获取或设置具有指定键的 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 的实例。
            </summary>
            <param name="sectionname">指定键名。</param>
            <returns>返回具有指定键名的 <see cref="T:RDIFramework.Utilities.IniFileSection"/>。</returns>
        </member>
        <member name="P:RDIFramework.Utilities.IniFile.FileName">
            <summary>
            获取 ini 文件的完整路径。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFile.Encoding">
            <summary>
            获取 ini 文件的编码类型。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFile.Comment">
            <summary>
            获取或设置 ini 文件文档注释。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFile.Sections">
            <summary>
            获取 ini 文件包含的配置节的集合。
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.IniFileSection">
            <summary>
            表示 ini 文件的一个配置节。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.IniFileSection.None">
            <summary>
            表示键名、键值和注释全部为空的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 的常量值。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSection.#ctor(System.String)">
            <summary>
            初始化 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 类的新实例。
            </summary>
            <param name="name">指定配置节的名称。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSection.GetValue(System.String)">
            <summary>
            返回指定键的值。
            </summary>
            <param name="keyName">指定键名。</param>
            <returns>如果找到指定名称的键值对，则返回其键值，否则返回 <see cref="F:System.String.Empty"/>。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSection.op_Inequality(RDIFramework.Utilities.IniFileSection,RDIFramework.Utilities.IniFileSection)">
            <summary>
            比较两个 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 对象。此结果指定两个 MLngLat 对象的 <see cref="P:RDIFramework.Utilities.IniFileSection.Name"/> 属性的值是否不等。
            </summary>
            <param name="left">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSection"/>。</param>
            <param name="right">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSection"/>。</param>
            <returns>如果 <paramref name="left"/> 和 <paramref name="right"/> 的 <see cref="P:RDIFramework.Utilities.IniFileSection.Name"/> 属性值不等，则为 true；否则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSection.op_Equality(RDIFramework.Utilities.IniFileSection,RDIFramework.Utilities.IniFileSection)">
            <summary>
            比较两个 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 对象。此结果指定两个 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 对象的 <see cref="P:RDIFramework.Utilities.IniFileSection.Name"/> 属性的值是否相等。
            </summary>
            <param name="left">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSection"/>。</param>
            <param name="right">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSection"/>。</param>
            <returns>如果 <paramref name="left"/> 和 <paramref name="right"/> 的 <see cref="P:RDIFramework.Utilities.IniFileSection.Name"/> 值相等，则为 true；否则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSection.Equals(System.Object)">
            <summary>
            确定此 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 实例是否与指定的对象（也必须是 <see cref="T:RDIFramework.Utilities.IniFileSection"/>）具有相同的名称。
            </summary>
            <param name="obj">一个 <see cref="T:System.Object"/>。</param>
            <returns>如果 <paramref name="obj"/> 为 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 并且它的值与此实例相同，则为 true；否则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSection.GetHashCode">
            <summary>
            返回该 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 的哈希代码。
            </summary>
            <returns>32 位有符号整数哈希代码。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSection.ToString">
            <summary>
            返回表示当前配置节数据的字符串。
            </summary>
            <returns>返回包含当前配置节数据的字符串。</returns>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSection.Item(System.String)">
            <summary>
            获取或设置具有指定键的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 的实例。
            </summary>
            <param name="keyName">指定键名。</param>
            <returns>返回具有指定键名的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>。</returns>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSection.Name">
            <summary>
            获取配置节名称。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSection.Comment">
            <summary>
            获取或设置当前配置节的注释。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSection.Items">
            <summary>
            获取配置节包含的键值对的集合。
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.IniFileSectionCollection">
            <summary>
            表示可通过索引或键名访问 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 的强类型列表。提供用于对列表进行搜索、排序和操作的方法。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionCollection.Add(RDIFramework.Utilities.IniFileSection)">
            <summary>
            将对象添加到列表。
            </summary>
            <param name="item">要添加到列表的对象。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionCollection.Contains(System.String)">
            <summary>
            确定指定名称的配置节对象是否在列表中。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
            <returns>如果在列表中找到指定名称的配置节对象则返回 true，否则返回 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionCollection.Remove(System.String)">
            <summary>
            移除指定名称的配置节对象。
            </summary>
            <param name="sectionName">指定配置节名称。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionCollection.ToString">
            <summary>
            返回表示当前配置节数据的字符串。
            </summary>
            <returns>返回包含当前配置节数据的字符串。</returns>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSectionCollection.Item(System.String)">
            <summary>
            获取或设置具有指定名称的 <see cref="T:RDIFramework.Utilities.IniFileSection"/>。
            </summary>
            <param name="name">指定 <see cref="T:RDIFramework.Utilities.IniFileSection"/> 的名称。</param>
            <returns>返回具有指定名称的 <see cref="T:RDIFramework.Utilities.IniFileSection"/>。</returns>
        </member>
        <member name="T:RDIFramework.Utilities.IniFileSectionItem">
            <summary>
            定义 ini 文件配置项的基本信息。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.IniFileSectionItem.None">
            <summary>
            表示键名、键值和注释全部为空的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 的常量值。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItem.#ctor(System.String)">
            <summary>
            使用指定键名初始化 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 类的新实例。
            </summary>
            <param name="key">指定键名。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItem.#ctor(System.String,System.String)">
            <summary>
            使用指定键名和键值初始化 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 类的新实例。
            </summary>
            <param name="key">指定键名。</param>
            <param name="value">指定键值。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItem.op_Inequality(RDIFramework.Utilities.IniFileSectionItem,RDIFramework.Utilities.IniFileSectionItem)">
            <summary>
            比较两个 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 对象。此结果指定两个 MLngLat 对象的 <see cref="P:RDIFramework.Utilities.IniFileSectionItem.Key"/> 属性的值是否不等。
            </summary>
            <param name="left">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>。</param>
            <param name="right">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>。</param>
            <returns>如果 <paramref name="left"/> 和 <paramref name="right"/> 的 <see cref="P:RDIFramework.Utilities.IniFileSectionItem.Key"/> 属性值不等，则为 true；否则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItem.op_Equality(RDIFramework.Utilities.IniFileSectionItem,RDIFramework.Utilities.IniFileSectionItem)">
            <summary>
            比较两个 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 对象。此结果指定两个 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 对象的 <see cref="P:RDIFramework.Utilities.IniFileSectionItem.Key"/> 属性的值是否相等。
            </summary>
            <param name="left">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>。</param>
            <param name="right">要比较的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>。</param>
            <returns>如果 <paramref name="left"/> 和 <paramref name="right"/> 的 <see cref="P:RDIFramework.Utilities.IniFileSectionItem.Key"/> 值相等，则为 true；否则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItem.Equals(System.Object)">
            <summary>
            确定此 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 实例是否与指定的对象（也必须是 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>）具有相同的名称。
            </summary>
            <param name="obj">一个 <see cref="T:System.Object"/>。</param>
            <returns>如果 <paramref name="obj"/> 为 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 并且它的值与此实例相同，则为 true；否则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItem.GetHashCode">
            <summary>
            返回该 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 的哈希代码。
            </summary>
            <returns>32 位有符号整数哈希代码。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItem.ToString">
            <summary>
            返回表示当前配置项数据的字符串。
            </summary>
            <returns>返回包含当前配置项数据的字符串。</returns>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSectionItem.Key">
            <summary>
            获取或设置当前配置项的键。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSectionItem.Value">
            <summary>
            获取或设置当前配置项的值。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSectionItem.Comment">
            <summary>
            获取或设置当前配置项的注释。
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.IniFileSectionItemCollection">
            <summary>
            表示可通过索引或键名访问 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 的强类型列表。提供用于对列表进行搜索、排序和操作的方法。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItemCollection.Add(RDIFramework.Utilities.IniFileSectionItem)">
            <summary>
            将对象添加到列表。
            </summary>
            <param name="item">要添加到列表的对象。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItemCollection.Contains(System.String)">
            <summary>
            确定指定键名的配置项对象是否在列表中。
            </summary>
            <param name="keyName">指定配置项名称。</param>
            <returns>如果在列表中找到指定键名的配置项对象则返回 true，否则返回 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItemCollection.Remove(System.String)">
            <summary>
            移除指定键名的配置项对象。
            </summary>
            <param name="keyName">指定配置项名称。</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileSectionItemCollection.ToString">
            <summary>
            返回表示当前配置节数据的字符串。
            </summary>
            <returns>返回包含当前配置节数据的字符串。</returns>
        </member>
        <member name="P:RDIFramework.Utilities.IniFileSectionItemCollection.Item(System.String)">
            <summary>
            获取或设置具有指定键名的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>。
            </summary>
            <param name="key">指定 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/> 的名称。</param>
            <returns>返回具有指定键名的 <see cref="T:RDIFramework.Utilities.IniFileSectionItem"/>。</returns>
        </member>
        <member name="T:RDIFramework.Utilities.SimpleTimerProvider`1">
            <summary>
            包含一组方法和属性，提供简易的定时器应用。
            </summary>
            <typeparam name="T">表示与此类关联的对象的类型。</typeparam>
        </member>
        <member name="M:RDIFramework.Utilities.SimpleTimerProvider`1.#ctor(`0,System.Double,System.Boolean)">
            <summary>
            初始化 <see cref="!:SimpleTimerProviderProvider&lt;T&gt;"/> 类的新实例。
            </summary>
            <param name="obj">指定与此类关联的对象的实例。</param>
            <param name="interval">指定引发事件的间隔时间（以毫秒为单位）。默认为 100 毫秒。</param>
            <param name="autoReset">如果应在每次间隔结束时引发事件，则为 true；如果它仅在间隔第一次结束后引发一次事件，则为 false。默认值为 true。</param>
        </member>
        <member name="M:RDIFramework.Utilities.SimpleTimerProvider`1.#ctor(`0,System.Double)">
            <summary>
            初始化 <see cref="!:SimpleTimerProviderProvider&lt;T&gt;"/> 类的新实例。
            </summary>
            <param name="obj">指定与此类关联的对象的实例。</param>
            <param name="interval">指定引发事件的间隔时间（以毫秒为单位）。默认为 100 毫秒。</param>
        </member>
        <member name="M:RDIFramework.Utilities.SimpleTimerProvider`1.Run(System.Action{`0})">
            <summary>
            执行定时器上的 <see cref="T:System.Action`1"/> 委托方法。
            </summary>
            <param name="action">指定一个 <see cref="T:System.Action`1"/> 委托。</param>
        </member>
        <member name="M:RDIFramework.Utilities.SimpleTimerProvider`1.Run(System.Action{`0,System.Timers.ElapsedEventArgs})">
            <summary>
            执行定时器上的 <see cref="T:System.Action`2"/> 委托方法。
            </summary>
            <param name="action">指定一个 <see cref="T:System.Action`2"/> 委托。</param>
        </member>
        <member name="M:RDIFramework.Utilities.SimpleTimerProvider`1.Run(System.Action{`0,System.Timers.Timer})">
            <summary>
            执行定时器上的 <see cref="T:System.Action`2"/> 委托方法。
            </summary>
            <param name="action">指定一个 <see cref="T:System.Action`2"/> 委托。</param>
        </member>
        <member name="M:RDIFramework.Utilities.SimpleTimerProvider`1.Run(System.Action{`0,System.Timers.Timer,System.Timers.ElapsedEventArgs})">
            <summary>
            执行定时器上的 <see cref="T:System.Action`3"/> 委托方法。
            </summary>
            <param name="action">指定一个 <see cref="T:System.Action`3"/> 委托。</param>
        </member>
        <member name="M:RDIFramework.Utilities.SimpleTimerProvider`1.Close">
            <summary>
            关闭定时器并释放由 <see cref="!:SimpleTimerProviderProvider&lt;T&gt;"/> 占用的资源。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.SimpleTimerProvider`1.Object">
            <summary>
            获取与此类关联的对象的实例。
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.SimpleTimerProvider`1.Timer">
            <summary>
            获取用于生成定期事件的定时器的实例。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper.ObjectToJSON(System.Object)">
            <summary> 
            对象转JSON 
            </summary> 
            <param name="obj">对象</param> 
            <returns>JSON格式的字符串</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper.DataTableToList(System.Data.DataTable)">
            <summary> 
            数据表转键值对集合 www.2cto.com  
            把DataTable转成 List集合, 存每一行 
            集合中放的是键值对字典,存每一列 
            </summary> 
            <param name="dt">数据表</param> 
            <returns>哈希表数组</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper.DataSetToDic(System.Data.DataSet)">
            <summary> 
            数据集转键值对数组字典 
            </summary> 
            <param name="dataSet">数据集</param> 
            <returns>键值对数组字典</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper.DataTableToJSON(System.Data.DataTable)">
            <summary> 
            数据表转JSON 
            </summary> 
            <param name="dataTable">数据表</param> 
            <returns>JSON字符串</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper.JSONToObject``1(System.String)">
            <summary> 
            JSON文本转对象,泛型方法 
            </summary> 
            <typeparam name="T">类型</typeparam> 
            <param name="jsonText">JSON文本</param> 
            <returns>指定类型的对象</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper.TablesDataFromJSON(System.String)">
            <summary> 
            将JSON文本转换为数据表数据 
            </summary> 
            <param name="jsonText">JSON文本</param> 
            <returns>数据表字典</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper.DataRowFromJSON(System.String)">
            <summary> 
            将JSON文本转换成数据行 
            </summary> 
            <param name="jsonText">JSON文本</param> 
            <returns>数据行的字典</returns> 
        </member>
        <member name="T:RDIFramework.Utilities.FTPHelper">
            <summary>
            FTP帮助类
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.#ctor(System.String,System.String,System.String,System.String)">
            <summary>  
            连接FTP服务器
            </summary>  
            <param name="FtpServerIP">FTP连接地址</param>  
            <param name="FtpRemotePath">指定FTP连接成功后的当前目录, 如果不指定即默认为根目录</param>  
            <param name="FtpUserID">用户名</param>  
            <param name="FtpPassword">密码</param>  
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.Upload(System.String)">
            <summary>  
            上传  
            </summary>   
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.Download(System.String,System.String)">
            <summary>  
            下载  
            </summary>   
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.Delete(System.String)">
            <summary>  
            删除文件  
            </summary>  
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.GetFilesDetailList">
            <summary>  
            获取当前目录下明细(包含文件和文件夹)  
            </summary>  
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.GetAllList(System.String)">
            <summary>  
            获取FTP文件列表(包括文件夹)
            </summary>   
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.GetFileList(System.String)">
            <summary>  
            获取当前目录下文件列表(不包括文件夹)  
            </summary>  
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.FileExist(System.String)">
            <summary>  
            判断当前目录下指定的文件是否存在  
            </summary>  
            <param name="RemoteFileName">远程文件名</param>  
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.MakeDir(System.String)">
            <summary>  
            创建文件夹  
            </summary>   
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.GetFileSize(System.String)">
            <summary>  
            获取指定文件大小  
            </summary>  
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.ReName(System.String,System.String)">
            <summary>  
            更改文件名  
            </summary> 
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.MovieFile(System.String,System.String)">
            <summary>  
            移动文件  
            </summary>  
        </member>
        <member name="M:RDIFramework.Utilities.FTPHelper.GotoDirectory(System.String,System.Boolean)">
            <summary>  
            切换当前目录  
            </summary>  
            <param name="IsRoot">true:绝对路径 false:相对路径</param>   
        </member>
        <member name="T:RDIFramework.Utilities.CookieHelper">
            <summary>
            CookieHelper
            操作Cookie的帮助类 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.WriteCookie(System.String,System.Collections.Specialized.NameValueCollection,System.Int32,System.String)">
            <summary>
            为Cookie赋值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="Nvc">Cookie值集合</param>
            <param name="days">Cookie日期  0 为无时间限制。浏览器关闭就结束</param>
            <param name="Domain">Cookie站点</param>
            <returns>返回布尔值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.WriteCookieNoDay(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            不限制日期的写cookies 江文海修改
            </summary>
            <param name="CookieName">cookie名称</param>
            <param name="Nvc">集合</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.WriteCookie(System.String,System.Collections.Specialized.NameValueCollection,System.Int32)">
            
            <summary>
            为Cookie赋值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="Nvc">Cookie值集合</param>
            <param name="days">Cookie日期</param>
            <returns>返回布尔值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.WriteCookie(System.String,System.Collections.Specialized.NameValueCollection)">
            
            <summary>
            为Cookie赋值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="Nvc">Cookie值集合</param>
            <returns>返回布尔值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.AddCookie(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            添加Cookie值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="Nvc">Cookie值集合</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.UpdateCookie(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            更新Cookie
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="Nvc">Cookie值集合</param>
            <returns>bool</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.GetCookie(System.String)">
            <summary>
            得到Cookie值集合
            </summary>
            <param name="CookieName">Cookie名称</param>
            <returns>返回NameValueCollection集合</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.DeleteCookie(System.String,System.String)">
            <summary>
            删除cookie
            </summary>
            <param name="CookieName">cookie的值</param>
            <param name="CookieDomain">cookie的域</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.DeleteCookie(System.String)">
            
            <summary>
            删除Cookie
            </summary>
            <param name="CookieName">Cookie名称</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.GetSingleValue(System.String,System.String)">
            <summary>
            得到单独一条Cookie的值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="KeyName">Key名称</param>
            <returns>返回string</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.GetSingleValueFromServer(System.String,System.String)">
            
            <summary>
            得到服务器端单独一条Cookie的值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="KeyName">Key名称</param>
            <returns>返回string</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.UpdateSingleValue(System.String,System.String,System.String)">
            <summary>
            更新单独一条Cookie的值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="KeyName">Key名称</param>
            <param name="Value">值</param>
            <returns>返回布尔值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.AddSingleCookie(System.String,System.String,System.String)">
            <summary>
            添加单独的一条Cookie值
            </summary>
            <param name="CookieName">Cookie名称</param>
            <param name="KeyName">Key名称</param>
            <param name="Value">值</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.CookieHelper.HasCookie(System.String)">
            <summary>
            判断是否存在Cookie表
            </summary>
            <param name="CookieName">Cookie名称</param>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.Format">
            <summary>
            Message formats
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Format.Html">
            <summary>
            The body is composed of html content
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Format.Text">
            <summary>
            The body is pure text
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.GmailSender">
            <summary>
            See http://stackoverflow.com/questions/704636/sending-email-through-gmail-smtp-server-with-c
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.SmtpSender">
            <summary>
            Uses Smtp to send emails.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.IEmailSender">
            <summary>
            Abstracts an approach to send e-mails
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IEmailSender.Send(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a message. 
            </summary>
            <param name="from">From field</param>
            <param name="to">To field</param>
            <param name="subject">e-mail's subject</param>
            <param name="messageText">message's body</param>
        </member>
        <member name="M:RDIFramework.Utilities.IRichMessageEmailSender.Send(RDIFramework.Utilities.Message)">
            <summary>
            Sends a message. 
            </summary>
            <param name="message">Message instance</param>
        </member>
        <member name="M:RDIFramework.Utilities.IRichMessageEmailSender.Send(RDIFramework.Utilities.Message[])">
            <summary>
            Sends multiple messages. 
            </summary>
            <param name="messages">Array of messages</param>
        </member>
        <member name="M:RDIFramework.Utilities.SmtpSender.#ctor(System.String)">
            <summary>
            This service implementation
            requires a host name in order to work
            </summary>
            <param name="hostname">The smtp server name</param>
        </member>
        <member name="M:RDIFramework.Utilities.SmtpSender.Send(System.String,System.String,System.String,System.String)">
            <summary>
            Sends a message. 
            </summary>
            <exception cref="T:System.ArgumentNullException">If any of the parameters is null</exception>
            <param name="from">From field</param>
            <param name="to">To field</param>
            <param name="subject">e-mail's subject</param>
            <param name="messageText">message's body</param>
        </member>
        <member name="M:RDIFramework.Utilities.SmtpSender.Send(RDIFramework.Utilities.Message)">
            <summary>
            Sends a message. 
            </summary>
            <exception cref="T:System.ArgumentNullException">If the message is null</exception>
            <param name="message">Message instance</param>
        </member>
        <member name="M:RDIFramework.Utilities.SmtpSender.CreateMailMessage(RDIFramework.Utilities.Message)">
            <summary>
            Converts a message from Castle.Components.Common.EmailSender.Message  type
            to System.Net.Mail.MailMessage
            </summary>
            <param name="message">The message to convert.</param>
            <returns>The converted message .</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SmtpSender.ConfigureSender(RDIFramework.Utilities.Message)">
            <summary>
            Configures the message or the sender
            with port information and eventual credential
            informed
            </summary>
            <param name="message">Message instance</param>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.Port">
            <summary>
            Gets or sets the port used to 
            access the SMTP server
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.Hostname">
            <summary>
            Gets the hostname.
            </summary>
            <value>The hostname.</value>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.AsyncSend">
            <summary>
            Gets or sets a value which is used to 
            configure if emails are going to be sent asyncrhonously or not.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.Timeout">
            <summary>
            Gets or sets a value that specifies 
            the amount of time after which a synchronous Send call times out.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.Domain">
            <summary>
            Gets or sets the domain.
            </summary>
            <value>The domain.</value>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:RDIFramework.Utilities.SmtpSender.HasCredentials">
            <summary>
            Gets a value indicating whether credentials were informed.
            </summary>
            <value>
            <see langword="true"/> if this instance has credentials; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:RDIFramework.Utilities.Message">
            <summary>
            Abstracts an e-mail message
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.Message"/> class.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Message.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.Message"/> class.
            </summary>
            <param name="from">From header.</param>
            <param name="to">To header.</param>
            <param name="subject">The subject header.</param>
            <param name="body">The message body.</param>
        </member>
        <member name="P:RDIFramework.Utilities.Message.Resources">
            <summary>
            You can add any number of inline attachments to this mail message. Inline attachments 
            differ from normal attachments in that they can be displayed withing the email body, 
            which makes this very handy for displaying images that can be viewed without having to 
            access an external server. 
            Provide an unique identifier (id) and use it with a &lt;img src="cid:my_id" /> tag from 
            within your view code.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.MessageAttachment">
            <summary>
            Represents a file attachment
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.MessageAttachment.#ctor(System.String,System.String)">
            <summary>
            Creates a new attachment
            </summary>
            <param name="mediaType">Look at System.Net.Mimie.MediaTypeNames for help.</param>
            <param name="fileName">Path to the file.</param>
        </member>
        <member name="M:RDIFramework.Utilities.MessageAttachment.#ctor(System.String,System.IO.Stream)">
            <summary>
            Creates a new attachment
            </summary>
            <param name="mediaType">Look at System.Net.Mime.MediaTypeNames for help.</param>
            <param name="stream">File stream.</param>
        </member>
        <member name="M:RDIFramework.Utilities.MessageAttachment.#ctor(System.String,System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.MessageAttachment"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="mediaType">Type of the media.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:RDIFramework.Utilities.MessageAttachment.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:RDIFramework.Utilities.MessageAttachment.MediaType">
            <summary>
            Gets the type of the media.
            </summary>
            <value>The type of the media.</value>
        </member>
        <member name="P:RDIFramework.Utilities.MessageAttachment.Stream">
            <summary>
            Gets the stream.
            </summary>
            <value>The stream.</value>
        </member>
        <member name="T:RDIFramework.Utilities.MessagePriority">
            <summary>
            Message priority
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ReflectHelper.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            设置对象属性的值
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ReflectHelper.GetProperty(System.Object,System.String)">
            <summary>
            获取对象属性的值
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ReflectHelper.GetPropertyNames(System.Object)">
            <summary>
            获取对象属性信息（组装成字符串输出）
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ReflectHelper.GetPropertyNameTypes(System.Object)">
            <summary>
            获取对象属性信息（组装成字符串输出）
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.HTMLReportEngine">
            <summary>
            Holds the report details and Methods to generate report.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.GenerateReport">
            <summary>
            Generates the HTML Content for the given ReportSource.
            </summary>
            <returns>HTML String</returns>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.SaveReport(System.String)">
            <summary>
            Generates and Saves the report into a file.
            </summary>
            <param name="fileName">HTML Report file name</param>
            <returns>On success returns true</returns>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.WriteTitle">
            <summary>
            Writes CSS and HTML title.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.WriteSections">
            <summary>
            Generates all section contents
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.WriteSectionHeader(RDIFramework.Utilities.Section,System.String)">
            <summary>
            Writes the section header information.
            </summary>
            <param name="section">The section details as Section object</param>
            <param name="sectionValue">section group field data</param>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.WriteSectionDetail(RDIFramework.Utilities.Section,System.String)">
            <summary>
            Method to write Chart and Section data information
            </summary>
            <param name="section">the section details</param>
            <param name="criteria">the section selection criteria</param>
        </member>
        <!-- 对于成员“M:RDIFramework.Utilities.HTMLReportEngine.WriteSectionFooter(RDIFramework.Utilities.Section,System.Collections.Hashtable)”忽略有格式错误的 XML 注释 -->
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.WriteFooter">
            <summary>
            Writes the HTML closing tags
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.RecurseSections(RDIFramework.Utilities.Section,System.String)">
            <summary>
            A recursive funtion to write all the section headers, details and footer content.
            </summary>
            <param name="section">the section details</param>
            <param name="criteria">section data selection criteria</param>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.GenerateBarChart(System.String,RDIFramework.Utilities.Section)">
            <summary>
            Method to generate BarChart
            </summary>
            <param name="criteria">Section data selection criteria</param>
            <param name="changeOnField">Y-Axis data field</param>
            <param name="valueField">X-Axis data field (Send "count" as value for reporting record count)</param>
            <param name="showBorder">Enable or disable chart border</param>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.GetDistinctValuesForChart(System.Data.DataSet,System.String,System.String,System.String)">
            <summary>
            Method to get distinct values for given Column name from the dataset for generating Chart.
            </summary>
            <param name="dataSet">report source dataset</param>
            <param name="criteria">data selection criteria</param>
            <param name="changeOnField">Column name</param>
            <param name="valueField">Column name</param>
            <returns>List of distinct labels and values</returns>
        </member>
        <member name="M:RDIFramework.Utilities.HTMLReportEngine.GetDistinctValues(System.Data.DataSet,System.String,System.String)">
            <summary>
            Method to get distinct values for the column in the report source dataset
            </summary>
            <param name="dataSet">report source dataset</param>
            <param name="columnName">Column name</param>
            <param name="criteria">Data selection criteria</param>
            <returns>List of distinct values</returns>
        </member>
        <member name="P:RDIFramework.Utilities.HTMLReportEngine.ReportSource">
            <summary>
            Gets or Sets report source as DataSet.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HTMLReportEngine.Sections">
            <summary>
            Gets or Sets Report sections as ArrayList. Contains of objects of Section class.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HTMLReportEngine.ReportTitle">
            <summary>
            Gets or Sets Report title as string.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HTMLReportEngine.ReportFields">
            <summary>
            Gets or Sets report fields as ArrayList. Contains objects of Field class.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.Section">
            <summary>
            Class to hold Report section details
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Section.backColor">
            <summary>
            HTML Color code as string
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.Field">
            <summary>
            Class to hold Report field details
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Field.backColor">
            <summary>
            HTML Color code as string
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Field.headerBackColor">
            <summary>
            HTML Color code as string
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.Field.Alignment">
            <summary>
            Gets or sets field alignment of type ALIGN
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.JsonHelper1">
            <summary>
            JSON帮助类
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper1.CreateJsonOne(System.Data.DataTable,System.Boolean)">
            <summary>
            生成表单编辑赋值 JSON格式
            </summary>
            <param name="dt"></param>
            <param name="displayCount"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper1.CreateJsonParameters(System.Data.DataTable,System.Boolean)">
            <summary>
            将DataTable中的数据转换成JSON格式
            </summary>
            <param name="dt">数据源DataTable</param>
            <param name="displayCount">是否输出数据总条数</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper1.CreateJsonParameters(System.Data.DataTable)">
            <summary>
            将DataTable中的数据转换成JSON格式
            </summary>
            <param name="dt">数据源DataTable</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper1.CreateJsonParameters(System.Data.DataTable,System.Boolean,System.Int32)">
            <summary>
            将DataTable中的数据转换成JSON格式
            </summary>
            <param name="dt">数据源DataTable</param>
            <param name="displayCount">是否输出数据总条数</param>
            <param name="totalcount">JSON中显示的数据总条数</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.JsonHelper1.Convert2Json(System.Object)">
            <summary>
            
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.HiPerfTimerHelper">
            <summary>
            HiPerfTimerHelper
            高性能计时器
            
            修改记录
            2012-06-04 EricHu 创建HiPerfTimerHelper
            
            <example>
            HiPerfTimerHelper perfTimer = new HiPerfTimerHelper();
            perfTimer.Start();
            ;执行一些相关的操作
            perfTimer.Stop();
            pt.Duration;//显示操作所耗费的时间
            </example>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HiPerfTimerHelper.Start">
            <summary>
            Start the timer
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HiPerfTimerHelper.Stop">
            <summary>
            Stop the timer
            </summary> 
        </member>
        <member name="P:RDIFramework.Utilities.HiPerfTimerHelper.Duration">
            <summary>
            Returns the duration of the timer (in seconds)
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.SetColorFilter(RDIFramework.Utilities.ImageHandler.ColorFilterTypes)">
            <summary>
            设置滤镜
            </summary>
            <param name="colorFilterType">设置滤镜颜色</param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.SetGamma(System.Double,System.Double,System.Double)">
            <summary>
            设置灰度系数
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.SetBrightness(System.Int32)">
            <summary>
            设置亮度
            </summary>
            <param name="brightness"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.SetContrast(System.Double)">
            <summary>
            设置对比度
            </summary>
            <param name="contrast"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.SetGrayscale">
            <summary>
            设置为灰阶
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.SetInvert">
            <summary>
            设置为倒置
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.Resize(System.Int32,System.Int32)">
            <summary>
            调整大小
            </summary>
            <param name="newWidth"></param>
            <param name="newHeight"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.RotateFlip(System.Drawing.RotateFlipType)">
            <summary>
            各种角度旋转图像
            </summary>
            <param name="rotateFlipType"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.Crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            裁减图像
            </summary>
            <param name="xPosition">开始位置X坐标</param>
            <param name="yPosition">开始位置Y坐标</param>
            <param name="width">裁减宽度</param>
            <param name="height">裁减高度</param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.DrawOutCropArea(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="xPosition"></param>
            <param name="yPosition"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.InsertText(System.String,System.Int32,System.Int32,System.String,System.Single,System.String,System.String,System.String)">
            <summary>
            在图像上插入文字
            </summary>
            <param name="text"></param>
            <param name="xPosition"></param>
            <param name="yPosition"></param>
            <param name="fontName"></param>
            <param name="fontSize"></param>
            <param name="fontStyle"></param>
            <param name="colorName1"></param>
            <param name="colorName2"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.InsertImage(System.String,System.Int32,System.Int32)">
            <summary>
            在图像上插入图像
            </summary>
            <param name="imagePath"></param>
            <param name="xPosition"></param>
            <param name="yPosition"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.InsertShape(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            在图像上插入形状
            </summary>
            <param name="shapeType"></param>
            <param name="xPosition"></param>
            <param name="yPosition"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="colorName"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHandler.QuickWhiteAndBlack(System.String)">
            <summary>
            快速的将彩色图像变成黑白图像-目前仅适用于jpg格式的图像 
            </summary>
            <param name="filePath">彩色图像地址</param>
            <returns>返回的黑白图像</returns>
        </member>
        <member name="T:RDIFramework.Utilities.ImageHelper">
            <summary>
            ImageHelper
            图片处理类
            
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.imageToByteArray(System.Drawing.Image)">
            <summary>
            将Image转化为byte数组
            </summary>
            <param name="imageIn">图片</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.byteArrayToImage(System.Byte[])">
            <summary>
            将byte数组转化为Image
            </summary>
            <param name="byteArrayIn">图片数组</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,RDIFramework.Utilities.ZoomType)">
            <summary>
            将图片缩放为指定大小
            </summary>
            <param name="originalImagePath">源图片路径</param>
            <param name="thumbnailPath">缩放后图片存放路径</param>
            <param name="width">缩放图片宽</param>
            <param name="height">缩放图片高</param>
            <param name="zoomtype">缩放类型</param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.RetrunImage(System.String,System.Int32,System.Int32,RDIFramework.Utilities.ZoomType)">
            <summary>
            将图片缩放为指定大小
            </summary>
            <param name="originalImagePath">源图片路径</param>
            <param name="width">缩放图片宽</param>
            <param name="height">缩放图片高</param>
            <param name="mode">缩放类型</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.Rotate(System.Drawing.Bitmap,System.Int32)">
            <summary>
            以逆时针为方向对图像进行旋转
            </summary>
            <param name="b">位图流</param>
            <param name="angle">旋转角度[0,360](前台给的)</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.Scale(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            缩略图，按高度和宽度来缩略
            </summary>
            <param name="image"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.Scale(System.Drawing.Image,System.Int32)">
            <summary>
            缩略图，按倍数来缩略
            </summary>
            <param name="image">原图</param>
            <param name="multiple">放大或缩小的倍数，负数表示缩小，正数表示放大</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.ScaleFixWidth(System.Drawing.Image,System.Int32)">
            <summary>
            固定宽度缩略
            </summary>
            <param name="image"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.ScaleFixHeight(System.Drawing.Image,System.Int32)">
            <summary>
            固定高度缩略
            </summary>
            <param name="image"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.ScaleCut(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            裁减缩略，根据固定的高度和宽度
            </summary>
            <param name="image"></param>
            <param name="width"></param>
            <param name="heigth"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>    
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.Makewater(System.Drawing.Image,System.String,System.Drawing.Point)">
            <summary>
            打水印，在某一点
            </summary>
            <param name="image"></param>
            <param name="waterImagePath"></param>
            <param name="p"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.SaveQuality(System.Drawing.Image,System.String)">
            <summary>
            高质量保存      
            </summary>
            <param name="image"></param>
            <param name="path"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.CutForSquare(System.Web.HttpPostedFile,System.String,System.Int32,System.Int32)">
            <summary>  
            正方型裁剪  
            以图片中心为轴心，截取正方型，然后等比缩放  
            用于头像处理  
            </summary>  
            <remarks>吴剑 2010-11-23</remarks>  
            <param name="postedFile">原图HttpPostedFile对象</param>  
            <param name="fileSaveUrl">缩略图存放地址</param>  
            <param name="side">指定的边长（正方型）</param>  
            <param name="quality">质量（范围0-100）</param>  
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.CutForSquare(System.IO.Stream,System.String,System.Int32,System.Int32)">
            <summary>  
            正方型裁剪  
            以图片中心为轴心，截取正方型，然后等比缩放  
            用于头像处理  
            </summary>  
            <remarks>吴剑 2010-11-23</remarks>  
            <param name="postedFile">原图HttpPostedFile对象</param>  
            <param name="fileSaveUrl">缩略图存放地址</param>  
            <param name="side">指定的边长（正方型）</param>  
            <param name="quality">质量（范围0-100）</param>  
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.CutForCustom(System.Web.HttpPostedFile,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>  
            指定长宽裁剪  
            按模版比例最大范围的裁剪图片并缩放至模版尺寸  
            </summary>  
            <param name="postedFile">原图HttpPostedFile对象</param>  
            <param name="fileSaveUrl">保存路径</param>  
            <param name="maxWidth">最大宽(单位:px)</param>  
            <param name="maxHeight">最大高(单位:px)</param>  
            <param name="quality">质量（范围0-100）</param>  
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.ZoomAuto(System.Web.HttpPostedFile,System.String,System.Double,System.Double,System.String,System.String)">
            <summary>  
            图片等比缩放  
            </summary>  
            <param name="postedFile">原图HttpPostedFile对象</param>  
            <param name="savePath">缩略图存放地址</param>  
            <param name="targetWidth">指定的最大宽度</param>  
            <param name="targetHeight">指定的最大高度</param>  
            <param name="watermarkText">水印文字(为""表示不使用水印)</param>  
            <param name="watermarkImage">水印图片路径(为""表示不使用水印)</param>  
        </member>
        <member name="M:RDIFramework.Utilities.ImageHelper.IsWebImage(System.String)">
            <summary>  
            判断文件类型是否为WEB格式图片  
            (注：JPG,GIF,BMP,PNG)  
            </summary>  
            <param name="contentType">HttpPostedFile.ContentType</param>  
            <returns></returns>  
        </member>
        <member name="T:RDIFramework.Utilities.ZoomType">
            <summary>
            缩放类型
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.ZoomType.HW">
            <summary>
            指定高宽缩放（可能变形）  
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.ZoomType.H">
            <summary>
            指定高，宽按比例
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.ZoomType.W">
            <summary>
            指定宽，高按比例 
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.ZoomType.Cut">
            <summary>
            指定高宽裁减（不变形）  
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.EmailHelper">
            <summary>
            EmailHelper
            发送邮件类
            
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.EmailHelper.MailSender.Send(System.String,System.String,System.Collections.Generic.List{System.Net.Mail.MailAddress})">
            <summary>
            信件發送函數。
            </summary>
            <param name="Subject">信件標題</param>
            <param name="Content">信件內容</param>
            <param name="Receiver">收件者</param>
        </member>
        <member name="M:RDIFramework.Utilities.EmailHelper.MailSender.Send">
            <summary>
            信件發送函數
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.DosHelper">
            <summary>
            
            DosHelper
            Dos常用操作类
            
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.LunarCalendarHelper">
             <summary>
             LunarCalendarHelper
             农历公共类
             
             
            <example>
            使用方法：
            DateTime dt = mc.SelectionStart;
            c  = new LunarCalendarHelper(dt);
            StringBuilder dayInfo = new StringBuilder();
            dayInfo.Append("阳历：" + c.DateString + "\r/n");//阳历日期
            dayInfo.Append("农历：" + c.ChineseDateString + "\r/n");//农历日期
            dayInfo.Append("星期：" + c.WeekDayStr);//星期
            dayInfo.Append("时辰：" + c.ChineseHour + "\r/n");//时辰
            dayInfo.Append("属相：" + c.AnimalString + "\r/n");//属相
            dayInfo.Append("节气：" + c.ChineseTwentyFourDay + "\r/n");//节气
            dayInfo.Append("前一个节气：" + c.ChineseTwentyFourPrevDay + "\r/n");//前一个节气
            dayInfo.Append("下一个节气：" + c.ChineseTwentyFourNextDay + "\r/n");//下一个节气
            dayInfo.Append("节日：" + c.DateHoliday + "\r/n");//节日
            dayInfo.Append("干支：" + c.GanZhiDateString + "\r/n");//干支
            dayInfo.Append("星宿：" + c.ChineseConstellation + "\r/n");//星宿
            dayInfo.Append("星座：" + c.Constellation + "\r/n");//星座 
             </example>
             </summary>
        </member>
        <member name="F:RDIFramework.Utilities.LunarCalendarHelper.LunarDateArray">
             <summary>
             来源于网上的农历数据
             </summary>
             <remarks>
             数据结构如下，共使用17位数据
             第17位：表示闰月天数，0表示29天   1表示30天
             第16位-第5位（共12位）表示12个月，其中第16位表示第一月，如果该月为30天则为1，29天为0
             第4位-第1位（共4位）表示闰月是哪个月，如果当年没有闰月，则置0
            </remarks>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.#ctor(System.DateTime)">
            <summary>
            用一个标准的公历日期来初使化
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            用农历的日期来初使化
            </summary>
            <param name="cy">农历年</param>
            <param name="cm">农历月</param>
            <param name="cd">农历日</param>
            <param name="LeapFlag">闰月标志</param>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.GetChineseYearDays(System.Int32)">
            <summary>
            取农历年一年的天数
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.GetChineseHour(System.DateTime)">
            <summary>
            获得当前时间的时辰
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.CheckDateLimit(System.DateTime)">
            <summary>
            检查公历日期是否符合要求
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.CheckChineseDateLimit(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检查农历日期是否合理
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="leapMonth"></param>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.ConvertNumToChineseNum(System.Char)">
            <summary>
            将0-9转成汉字形式
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.BitTest32(System.Int32,System.Int32)">
            <summary>
            测试某位是否为真
            </summary>
            <param name="num"></param>
            <param name="bitpostion"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.ConvertDayOfWeek(System.DayOfWeek)">
            <summary>
            将星期几转成数字表示
            </summary>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.CompareWeekDayHoliday(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            比较当天是不是指定的第周几
            </summary>
            <param name="date"></param>
            <param name="month"></param>
            <param name="week"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.NextDay">
            <summary>
            取下一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.LunarCalendarHelper.PervDay">
            <summary>
            取前一天
            </summary>
            <returns></returns>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.newCalendarHoliday">
            <summary>
            计算中国农历节日
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.WeekDayHoliday">
            <summary>
            按某月第几周第几日计算的节日
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.DateHoliday">
            <summary>
            按公历日计算的节日
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.Date">
            <summary>
            取对应的公历日期
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.WeekDay">
            <summary>
            取星期几
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.WeekDayStr">
            <summary>
            周几的字符
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.DateString">
            <summary>
            公历日期中文表示法 如一九九七年七月一日
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.IsLeapYear">
            <summary>
            当前是否公历闰年
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseConstellation">
            <summary>
            28星宿计算
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseHour">
            <summary>
            时辰
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.IsChineseLeapMonth">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.IsChineseLeapYear">
            <summary>
            当年是否有闰月
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseDay">
            <summary>
            农历日
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseDayString">
            <summary>
            农历日中文表示
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseMonth">
            <summary>
            农历的月份
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseMonthString">
            <summary>
            农历月份字符串
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseYear">
            <summary>
            取农历年份
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseYearString">
            <summary>
            取农历年字符串如，一九九七年
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseDateString">
            <summary>
            取农历日期表示法：农历一九九七年正月初五
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.ChineseTwentyFourDay">
            <summary>
            定气法计算二十四节气,二十四节气是按地球公转来计算的，并非是阴历计算的
            </summary>
            <remarks>
            节气的定法有两种。古代历法采用的称为"恒气"，即按时间把一年等分为24份，
            每一节气平均得15天有余，所以又称"平气"。现代农历采用的称为"定气"，即
            按地球在轨道上的位置为标准，一周360°，两节气之间相隔15°。由于冬至时地
            球位于近日点附近，运动速度较快，因而太阳在黄道上移动15°的时间不到15天。
            夏至前后的情况正好相反，太阳在黄道上移动较慢，一个节气达16天之多。采用
            定气时可以保证春、秋两分必然在昼夜平分的那两天。
            </remarks>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.Constellation">
            <summary>
            计算指定日期的星座序号 
            </summary>
            <returns></returns>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.Animal">
            <summary>
            计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的
            鼠年为1,其它类推
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.AnimalString">
            <summary>
            取属相字符串
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.GanZhiYearString">
            <summary>
            取农历年的干支表示法如 乙丑年
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.GanZhiMonthString">
            <summary>
            取干支的月表示字符串，注意农历的闰月不记干支
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.GanZhiDayString">
            <summary>
            取干支日表示法
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.LunarCalendarHelper.GanZhiDateString">
            <summary>
            取当前日期的干支表示法如 甲子年乙丑月丙庚日
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.newCalendarException">
            <summary>
            中国日历异常处理
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.CHS2PinYinHelper">
            <summary>
            汉字转拼音工具
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.CHS2PinYinHelper.pv">
            <summary>
            包含字符 ASC 码的整形数组。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.CHS2PinYinHelper.ps">
            <summary>
            包含汉字拼音的字符串数组。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.CHS2PinYinHelper.bd">
            <summary>
            包含要排除处理的字符的字符串数组。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.CHS2PinYinHelper.Convert(System.String,System.String,System.Boolean)">
            <summary>
            将指定中文字符串转换为拼音形式。
            </summary>
            <param name="chs">要转换的中文字符串。</param>
            <param name="separator">连接拼音之间的分隔符。</param>
            <param name="initialCap">指定是否将首字母大写。</param>
            <returns>包含中文字符串的拼音的字符串。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CHS2PinYinHelper.Convert(System.String,System.String)">
            <summary>
            将指定中文字符串转换为拼音形式。
            </summary>
            <param name="chs">要转换的中文字符串。</param>
            <param name="separator">连接拼音之间的分隔符。</param>
            <returns>包含中文字符串的拼音的字符串。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CHS2PinYinHelper.Convert(System.String,System.Boolean)">
            <summary>
            将指定中文字符串转换为拼音形式。
            </summary>
            <param name="chs">要转换的中文字符串。</param>
            <param name="initialCap">指定是否将首字母大写。</param>
            <returns>包含中文字符串的拼音的字符串。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CHS2PinYinHelper.Convert(System.String)">
            <summary>
            将指定中文字符串转换为拼音形式。
            </summary>
            <param name="chs">要转换的中文字符串。</param>
            <returns>包含中文字符串的拼音的字符串。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.CHS2PinYinHelper.TransCapital(System.String)">
            <summary>
            转换为汉字拼音首字母
            </summary>
            <param name="chs"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.CHS2PinYinHelper.TransCapital(System.Data.DataTable,System.String)">
            <summary>
            将DataTable中的指定列添加中文首字母
            </summary>
            <param name="dt"></param>
            <param name="textField">COLUMN_NAME</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.CHS2PinYinHelper.TransCapital(System.Data.DataTable,System.String,System.String)">
            <summary>
            将DataTable中的指定列添加中文首字母
            </summary>
            <param name="dt"></param>
            <param name="textField">"COLUMN_NAME"</param>
            <param name="separator">连接拼音之间的分隔符。</param>
            <returns></returns>
        </member>
        <member name="P:RDIFramework.Utilities.CHS2PinYinHelper.Phrase">
            <summary>
            设置或获取包含列外词组读音的键/值对的组合。
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.InvokeServiceHelper.Request(System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            根据指定的信息，调用远程WebService方法
            </summary>
            <param name="url">WebService的http形式的地址</param>
            <param name="namespace">欲调用的WebService的命名空间</param>
            <param name="classname">欲调用的WebService的类名（不包括命名空间前缀）</param>
            <param name="methodname">欲调用的WebService的方法名</param>
            <param name="args">参数列表</param>
            <returns>WebService的执行结果</returns>
            <remarks>
            如果调用失败，将会抛出Exception。请调用的时候，适当截获异常。
            异常信息可能会发生在两个地方：
            1、动态构造WebService的时候，CompileAssembly失败。
            2、WebService本身执行失败。
            </remarks>
            <example>
            <code>
            object obj = InvokeWebservice("http://localhost/GSP_WorkflowWebservice/common.asmx","Genersoft.Platform.Service.Workflow","Common","GetToolType",new object[]{"1"});
            </code>
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.Save(System.Object,System.String)">
            <summary>
            文件化XML序列化
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.Load(System.Type,System.String)">
            <summary>
            文件化XML反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.ToXml``1(``0)">
            <summary>
            文本化XML序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.FromXml``1(System.String)">
            <summary>
            文本化XML反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.ToSoap``1(``0)">
            <summary>
            SoapFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.FromSoap``1(System.String)">
            <summary>
            SoapFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.ToBinary``1(``0)">
            <summary>
            BinaryFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.FromBinary``1(System.String)">
            <summary>
            BinaryFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.SerializeToBinary(System.Object)">
            <summary>
            将对象序列化为二进制字节
            </summary>
            <param name="obj">待序列化的对象</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.DeserializeFromBinary(System.Byte[])">
            <summary>
            从二进制字节中反序列化为对象
            </summary>
            <param name="bytes">字节数组</param>
            <returns>反序列化后得到的对象</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.SerializeToBinary(System.Object,System.String,System.IO.FileMode)">
            <summary>
            将文件对象序列化到文件中
            </summary>
            <param name="obj">待序列化的对象</param>
            <param name="path">文件路径</param>
            <param name="fileMode">文件打开模式</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.SerializeToBinary(System.Object,System.String)">
            <summary>
            将文件对象序列化到文件中
            </summary>
            <param name="obj">待序列化的对象</param>
            <param name="path">文件路径</param>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.DeserializeFromBinary(System.String)">
            <summary>
            从二进制文件中反序列化为对象
            </summary>
            <param name="type">对象的类型</param>
            <param name="path">二进制文件路径</param>
            <returns>反序列化后得到的对象</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.GetByteSize(System.Object)">
            <summary>
            获取对象的转换为二进制的字节大小
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.Clone(System.Object)">
            <summary>
            克隆一个对象
            </summary>
            <param name="obj">待克隆的对象</param>
            <returns>克隆的一个新的对象</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SerializeHelper.ReadFile(System.String)">
            <summary>
            从文件中读取文本内容
            </summary>
            <param name="path">文件路径</param>
            <returns>文件的内容</returns>
        </member>
        <member name="T:RDIFramework.Utilities.RegexPatternHelper">
            <summary>
            正则定义
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.UserName">
            <summary>
            用户名 [A-Za-z\d\-\_]+
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.Email">
            <summary>
            EMail地址，如 huacnlee@gmail.com
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.URL">
            <summary>
            URL地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.Chinese">
            <summary>
            中文
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.Integer">
            <summary>
            整型，正数负数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.Float">
            <summary>
            符点数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.Date">
            <summary>
            日期格式 支持1988-01-04 这种格式
            </summary>
        </member>
        <!-- 对于成员“F:RDIFramework.Utilities.RegexPatternHelper.HTMLTag”忽略有格式错误的 XML 注释 -->
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.IDCardNumber18">
            <summary>
            18位身份证
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.IDCardNumber15">
            <summary>
            15位身份证
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegexPatternHelper.IPAddress">
            <summary>
            IPv4的地址
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.RegexValidatorHelper">
            <summary>
            利用正则表达式来验证各种字符串格式
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.RegexValidatorHelper.IsMatch(System.String,RDIFramework.Utilities.Pattern)">
            <summary>
            验证一个字符串格式是否符合某个正则表达式的内容
            </summary>
            <param name="input">待验证的字符串</param>
            <param name="pattern">正则表达式的种类，枚举型，可选择</param>
            <returns>
            验证通过，返回真
            验证未通过，返回假
            </returns>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.ACCOUNT">
            <summary>
            验证账号格式，由数字和26个英文字母组成的字符串
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.PASSWORD">
            <summary>
            验证密码格式,由数字和26个英文字母组成的字符串
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.EMAIL">
            <summary>
            验证Email格式
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.URL">
            <summary>
            验证Url地址格式
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NUM_CHAR_UNDERLINE">
            <summary>
            数字，26个大小写英文字母和下划线
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.CHAR">
            <summary>
            26个大小写英文字母
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.SMALLCHAR">
            <summary>
            26个小写字母
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.BIGCHAR">
            <summary>
            26个大写字母
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.INTEGER">
            <summary>
            整数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.POSITIVE_INTEGER">
            <summary>
            正整数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NEGATIVE_INTEGER">
            <summary>
            负整数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NONPOSITIVE_INTEGER">
            <summary>
            非正整数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NONNEGATIVE_INTEGER">
            <summary>
            非负整数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.FLOAT">
            <summary>
            浮点数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.POSITIVE_FLOAT">
            <summary>
            正浮点数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NEGATIVE_FLOAT">
            <summary>
            负浮点数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NONPOSITIVE_FLOAT">
            <summary>
            非正浮点数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NONNEGATIVE_FLOAT">
            <summary>
            非负浮点数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.CHINESE">
            <summary>
            只允许中文字符
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.DOUBLE_BYTE">
            <summary>
            只允许双字节字符，包含中文
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.RESENDEMAIL">
            <summary>
            重新发送邮件
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.VALIDATECODE">
            <summary>
            验证验证码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NUMBERWITHTOWPOINTS">
            <summary>
            精确到小数点后两位
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.MOBILEPHONE">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.GUDINGPHONE">
            <summary>
            固定电话
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.QQ">
            <summary>
            QQ验证
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.ZIP">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.FILENAME">
            <summary>
            文件名
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.DATETIME">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.NICKNAME">
            <summary>
            昵称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.USERLOVE">
            <summary>
            用户爱好
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.SPACENAME">
            <summary>
            用户的空间名称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.EMAILS">
            <summary>
            多个邮箱
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.HTMLLABLE">
            <summary>
            HTML标签
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.PROJECTTAG">
            <summary>
            计划TAG
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.SHAREID">
            <summary>
            共享时用|分割
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.AREANAME">
            <summary>
            地区
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.TRACKURL">
            <summary>
            引用地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.SIGHT">
            <summary>
            推荐景点
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.OUTDOOR">
            <summary>
            户外活动
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.IDCARDNUMBER18">
            <summary>
            18位中国身份证
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Pattern.IDCARDNUMBER15">
            <summary>
            15位中国身份证
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.QueuedBackgroundWorker">
            <summary>
            A background worker with a work queue.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.QueuedBackgroundWorker"/> class.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.RunWorkerAsync(System.Object,System.Int32)">
            <summary>
            Starts processing a new background operation.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="priority">A value between 0 and <see cref="P:RDIFramework.Utilities.QueuedBackgroundWorker.PriorityQueues"/> indicating the priority of this item.
            An item with a higher priority will be processed before items with lower priority.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.RunWorkerAsync(System.Object)">
            <summary>
            Starts processing a new background operation.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.RunWorkerAsync">
            <summary>
            Starts processing a new background operation.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.IsWorkQueueEmpty">
            <summary>
            Determines if the work queue is empty.
            </summary>
            <returns>true if the work queue is empty; otherwise false.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.AddWork(System.Object,System.Int32)">
            <summary>
            Adds the operation to the work queue.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="priority">A value between 0 and <see cref="P:RDIFramework.Utilities.QueuedBackgroundWorker.PriorityQueues"/> indicating the priority of this item.
            An item with a higher priority will be processed before items with lower priority.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.GetWork">
            <summary>
            Gets a pending operation from the work queue.
            </summary>
            <returns>A 2-tuple whose first component is the the pending operation with
            the highest priority from the qork queue and the second component is the
            priority.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.BuildWorkQueue">
            <summary>
            Rebuilds the work queue.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.ClearWorkQueue">
            <summary>
            Clears the work queue.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.ClearWorkQueue(System.Int32)">
            <summary>
            Clears the work queue with the given priority.
            </summary>
            <param name="priority">A value between 0 and <see cref="P:RDIFramework.Utilities.QueuedBackgroundWorker.PriorityQueues"/>
            indicating the priority queue to cancel.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.CreateThreads">
            <summary>
            Creates the thread array.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.CancelAsync">
            <summary>
            Cancels all pending operations in all queues.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.CancelAsync(System.Int32)">
            <summary>
            Cancels all pending operations in the given queue.
            </summary>
            <param name="priority">A value between 0 and <see cref="P:RDIFramework.Utilities.QueuedBackgroundWorker.PriorityQueues"/>
            indicating the priority queue to cancel.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.CancelAsync(System.Object)">
            <summary>
            Cancels processing the item with the given key.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.RunWorkerCompletedCallback(System.Object)">
            <summary>
            Used to call <see cref="M:RDIFramework.Utilities.QueuedBackgroundWorker.OnRunWorkerCompleted(RDIFramework.Utilities.QueuedWorkerCompletedEventArgs)"/> by the synchronization context.
            </summary>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.OnRunWorkerCompleted(RDIFramework.Utilities.QueuedWorkerCompletedEventArgs)">
            <summary>
            Raises the RunWorkerCompleted event.
            </summary>
            <param name="e">A <see cref="T:RDIFramework.Utilities.QueuedWorkerCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.OnDoWork(RDIFramework.Utilities.QueuedWorkerDoWorkEventArgs)">
            <summary>
            Raises the DoWork event.
            </summary>
            <param name="e">A <see cref="T:RDIFramework.Utilities.QueuedWorkerDoWorkEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.GetApartmentState">
            <summary>
            Gets the apartment state of the worker thread.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.SetApartmentState(System.Threading.ApartmentState)">
            <summary>
            Sets the apartment state of the worker thread. The apartment state
            cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.Run">
            <summary>
            Used by the worker thread to process items.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedBackgroundWorker.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources;
            false to release only unmanaged resources.</param>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedBackgroundWorker.ProcessingMode">
            <summary>
            Represents the mode in which the work items are processed.
            Processing mode cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedBackgroundWorker.PriorityQueues">
            <summary>
            Gets or sets the number of priority queues. Number of queues
            cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedBackgroundWorker.Started">
            <summary>
            Determines whether the <see cref="T:RDIFramework.Utilities.QueuedBackgroundWorker"/> started working.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedBackgroundWorker.IsBackground">
            <summary>
            Gets or sets a value indicating whether or not the worker thread is a background thread.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedBackgroundWorker.Stopping">
            <summary>
            Determines whether the <see cref="T:RDIFramework.Utilities.QueuedBackgroundWorker"/> is being stopped.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedBackgroundWorker.Threads">
            <summary>
            Gets or sets the number of worker threads. Number of threads
            cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="E:RDIFramework.Utilities.QueuedBackgroundWorker.RunWorkerCompleted">
            <summary>
            Occurs when the background operation of an item has completed,
            has been canceled, or has raised an exception.
            </summary>
        </member>
        <member name="E:RDIFramework.Utilities.QueuedBackgroundWorker.DoWork">
            <summary>
            Occurs when <see cref="M:RDIFramework.Utilities.QueuedBackgroundWorker.RunWorkerAsync(System.Object,System.Int32)"/> is called.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.Tuple">
            <summary>
            Represents a factory class for creating tuples.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Tuple.Create``1(``0)">
            <summary>
            Creates a new 1-tuple.
            </summary>
            <typeparam name="T1">The type of the only component of the tuple.</typeparam>
            <param name="item1">The value of the only component of the tuple.</param>
            <returns>A 1-tuple whose value is (<paramref name="item1"/>).</returns>
        </member>
        <member name="M:RDIFramework.Utilities.Tuple.Create``2(``0,``1)">
            <summary>
            Creates a new 2-tuple.
            </summary>
            <typeparam name="T1">The type of the first component of the tuple.</typeparam>
            <typeparam name="T2">The type of the second component of the tuple.</typeparam>
            <param name="item1">The value of the first component of the tuple.</param>
            <param name="item2">The value of the second component of the tuple.</param>
            <returns>A 2-tuple whose value is (<paramref name="item1"/>, <paramref name="item2"/>).</returns>
        </member>
        <member name="T:RDIFramework.Utilities.Tuple`1">
            <summary>
            Represents a tuple with one element.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Tuple`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.Tuple`1"/> class.
            </summary>
            <param name="item1">The value of the first component of the tuple.</param>
        </member>
        <member name="P:RDIFramework.Utilities.Tuple`1.Item1">
            <summary>
            Gets the value of the first component.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.Tuple`2">
            <summary>
            Represents a tuple with two elements.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:RDIFramework.Utilities.Tuple`2"/> class.
            </summary>
            <param name="item1">The value of the first component of the tuple.</param>
            <param name="item2">The value of the second component of the tuple.</param>
        </member>
        <member name="P:RDIFramework.Utilities.Tuple`2.Item2">
            <summary>
            Gets the value of the second component.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.ProcessingMode">
            <summary>
            Represents the mode in which the work items of <see cref="T:RDIFramework.Utilities.QueuedBackgroundWorker"/> are processed.
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.ProcessingMode.FIFO">
            <summary>
            Items are processed in the order they are received.
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.ProcessingMode.LIFO">
            <summary>
            Items are processed in reverse order.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.RunQueuedWorkerCompletedEventHandler">
            <summary>
            Represents the method that will handle the RunWorkerCompleted event.
            </summary>
            <param name="sender">The object that is the source of the event.</param>
            <param name="e">A <see cref="T:RDIFramework.Utilities.QueuedWorkerCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:RDIFramework.Utilities.QueuedWorkerDoWorkEventHandler">
            <summary>
            Represents the method that will handle the DoWork event.
            </summary>
            <param name="sender">The object that is the source of the event.</param>
            <param name="e">An <see cref="T:RDIFramework.Utilities.QueuedWorkerDoWorkEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:RDIFramework.Utilities.QueuedWorkerCompletedEventArgs">
            <summary>
            Represents the event arguments of the RunWorkerCompleted event.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedWorkerCompletedEventArgs.#ctor(System.Object,System.Object,System.Int32,System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the QueuedWorkerCompletedEventArgs class.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="result">The result of an asynchronous operation.</param>
            <param name="priority">A value between 0 and 5 indicating the priority of this item.</param>
            <param name="error">The error that occurred while loading the image.</param>
            <param name="cancelled">A value indicating whether the asynchronous operation was canceled.</param>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedWorkerCompletedEventArgs.Result">
            <summary>
            Gets a value that represents the result of an asynchronous operation.
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedWorkerCompletedEventArgs.Priority">
            <summary>
            Gets the priority of this item.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.QueuedWorkerDoWorkEventArgs">
            <summary>
            Represents the event arguments of the RunWorkerCompleted event.
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.QueuedWorkerDoWorkEventArgs.#ctor(System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the QueuedWorkerDoWorkEventArgs class.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="priority">A value between 0 and 5 indicating the priority of this item.</param>
        </member>
        <member name="P:RDIFramework.Utilities.QueuedWorkerDoWorkEventArgs.Priority">
            <summary>
            Gets the priority of this item.
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.SqlDynBuilder">
            <summary>
            动生成插入与更新SQL语句（暂时只适用于SqlServer）
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.SqlDynBuilder.BuildInsertSql(System.Collections.Specialized.NameValueCollection,System.Int32)">
            <summary>
            生成Insert语句
            </summary>
            <param name="tn"></param>
            <param name="v"></param>
            <param name="type">0=空值以null替代;1=空值转换(字符型为'',数值型为0,日期型为null);2=空值跳过(这时值取决于数据库的默认值设置)</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlDynBuilder.BuildUpdateSql(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Int32)">
            <summary>
            生成update语句
            </summary>
            <param name="tn"></param>
            <param name="v"></param>
            <param name="type">0=空值以null替代;1=空值转换(字符型为'',数值型为0,日期型为null);2=空值跳过</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlDynBuilder.BuildUpdateSql(System.Collections.Specialized.NameValueCollection,System.Int32)">
            <summary>
            生成没有Where条件的Update语句
            </summary>
            <param name="v"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlDynBuilder.BuildUpdateSql(System.Collections.Specialized.NameValueCollection)">
            <summary>
            生成没有Where条件的Update语句
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlDynBuilder.GetColumnsType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.SystemInfo">
            <summary>
            SystemInfo
            系统基础信息部分
            
            修改记录
            	
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2012.02.07</date>
            </author>
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.LogOned">
            <summary>
            是否已经成功登录系统
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.OnLineState">
            <summary>
            用户在线状态
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.CurrentUserName">
            <summary>
            当前用户名
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.CurrentPassword">
            <summary>
            当前密码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RememberPassword">
            <summary>
            登录是否保存密码，默认能记住密码会好用一些
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.AutoLogOn">
            <summary>
            是否自动登录，默认不自动登录会好一些
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EncryptClientPassword">
            <summary>
            客户端加密存储密码，这个应该是要加密才可以
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ServiceUserName">
            <summary>
            远程调用Service用户名（为了提高软件的安全性）
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ServicePassword">
            <summary>
            远程调用Service密码（为了提高软件的安全性）
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.LoadAllUser">
            <summary>
            默认加载所有用户用户量特别大时的优化配置项目，默认是小规模用户
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.OrganizeDynamicLoading">
            <summary>
            动态加载组织机构树，当数据量非常庞大时用的参数，默认是小规模用户
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.MultiLanguage">
            <summary>
            是否采用多语言
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.CurrentLanguage">
            <summary>
            当前客户选择的语言
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.Themes">
            <summary>
            当前语言
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.WebHostUrl">
            <summary>
            即时通信指向的网站地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ShowExceptionDetail">
            <summary>
            显示异常的详细信息?
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ShowSuccessMsg">
            <summary>
            显示操作成功信息？
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.PageSize">
            <summary>
            分页大小(默认为每页显示20条数据)
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.AllowUserToRegister">
            <summary>
            允许新用户注册
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.UseMessage">
            <summary>
            是否启用即时内部消息
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableUserAuthorizationScope">
            <summary>
            是否启用表格数据权限
            启用分级管理范围权限设置，启用逐级授权
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableUserAuthorization">
            <summary>
            启用按用户权限
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableModulePermission">
            <summary>
            启用模块菜单权限
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnablePermissionItem">
            <summary>
            启用操作权限
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableTableConstraintPermission">
            <summary>
            启用数据表的约束条件限制
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableTableFieldPermission">
            <summary>
            启用数据表的列权限
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableOrganizePermission">
            <summary>
            启用按组织机构权限
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableHandWrittenSignature">
            <summary>
            设置手写签名
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableRecordLogOnLog">
            <summary>
            登录历史纪录
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableRecordLog">
            <summary>
            是否进行日志记录
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.UpdateVisit">
            <summary>
            是否更新访问日期信息
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.OnLineLimit">
            <summary>
            同时在线用户数量限制
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableCheckIPAddress">
            <summary>
            是否检查用户IP地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.LogException">
            <summary>
            是否登记异常
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.LogSQL">
            <summary>
            是否登记数据库操作
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EventLog">
            <summary>
            是否登记到 Windows 系统异常中
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.DefaultPassword">
            <summary>
            系统默认密码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EnableEncryptServerPassword">
            <summary>
            服务器端加密存储密码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.PasswordMiniLength">
            <summary>
            密码最小长度
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.NumericCharacters">
            <summary>
            必须字母+数字组合
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.PasswordChangeCycle">
            <summary>
            密码修改周期(月)
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.CheckOnLine">
            <summary>
            禁止用户重复登录
            只允许登录一次
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.AccountMinimumLength">
            <summary>
            用户名最小长度
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.PasswordErrorLockLimit">
            <summary>
            密码错误锁定次数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.PasswordErrorLockCycle">
            <summary>
            密码错误锁定周期(分钟)
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.BusinessDbType">
            <summary>
            业务数据库类别
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RDIFrameworkDbType">
            <summary>
            用户数据库类别
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.WorkFlowDbType">
            <summary>
            工作流数据库类别
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.EncryptDbConnection">
            <summary>
            是否加数据库连接
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RDIFrameworkDbConection">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RDIFrameworkDbConectionString">
            <summary>
            数据库连接的字符串
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.BusinessDbConnection">
            <summary>
            业务数据库
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.BusinessDbConnectionString">
            <summary>
            业务数据库（连接串，可能是加密的）
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.WorkFlowDbConnection">
            <summary>
            工作流数据库
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.WorkFlowDbConnectionString">
            <summary>
            工作流数据库（连接串，可能是加密的）
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.NeedRegister">
            <summary>
            软件是否需要注册
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.OnLineTime0ut">
            <summary>
            检查周期[以秒为单位]2分钟内不在线的，就认为是已经没在线了，心跳方式检查
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.OnLineCheck">
            <summary>
            每过1分钟，检查一次在线状态
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RegisterKey">
            <summary>
            注册码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.StartupPath">
            <summary>
            当前网站的安装地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.MatchCase">
            <summary>
            是否区分大小写
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.TopLimit">
            <summary>
            最多获取数据的行数限制
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.LockNoWaitCount">
            <summary>
            锁不住记录时的循环次数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.LockNoWaitTickMilliSeconds">
            <summary>
            锁不住记录时的等待时间
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ServerCache">
            <summary>
            是否采用服务器端缓存
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.LastUpdate">
            <summary>
            最后更新日期
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.Version">
            <summary>
            当前版本
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ShowInformation">
            <summary>
            每个操作是否进行信息提示。
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.TimeFormat">
            <summary>
            时间格式
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.DateFormat">
            <summary>
            日期短格式
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.DateTimeFormat">
            <summary>
            日期长格式
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.SoftName">
            <summary>
            当前软件Id
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.SoftFullName">
            <summary>
            软件的名称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RootMenuCode">
            <summary>
            根菜单编号
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ClientCache">
            <summary>
            是否采用客户端缓存
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.CustomerCompanyName">
            <summary>
            当前客户公司名称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.AppIco">
            <summary>
            系统图标文件
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.AddInDirectory">
            <summary>
            插件所在的目录
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ConfigurationFrom">
            <summary>
            RegistryKey、Configuration、UserConfig 注册表或者配置文件读取参数
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.MainAssembly">
            <summary>
            主应用程序集名
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.CurrentStyle">
            <summary>
            当前主题样式
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.CurrentThemeColor">
            <summary>
            当前主题颜色
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ErrorReportFrom">
            <summary>
            发送给谁，用,;符号隔开
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ErrorReportMailServer">
            <summary>
            邮件服务器地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ErrorReportMailUserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.ErrorReportMailPassword">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RDIFrameworkBlog">
            <summary>
            平台博客
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.RDIFrameworkWeibo">
            <summary>
            平台微博（腾讯）
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SystemInfo.NodeTimeout">
            <summary>
            工作流节点超时时间设置（以小时为单位）
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.SystemInfo.LogOn(RDIFramework.Utilities.UserInfo)">
            <summary>
            C/S程序保存登录信息部分
            </summary>
            <param name="userInfo">用户</param>
        </member>
        <member name="M:RDIFramework.Utilities.SystemInfo.IsAuthorized(RDIFramework.Utilities.UserInfo)">
            <summary>
            验证用户是否是授权的用户
            不是任何人都可以调用服务的，将来这里还可以进行扩展的
            例如用IP地址限制等等
            </summary>
            <param name="userInfo">用户</param>
            <returns>验证成功</returns>
        </member>
        <member name="P:RDIFramework.Utilities.SystemInfo.LockWaitMinute">
            <summary>
            锁定等待时间分钟
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.SystemInfo.UserInfo">
            <summary>
            当前用户信息
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.ConnectStrings">
            <summary>
            得到指定名称的链接字符串
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ConnectString.LinkName">
            <summary>
            连接名称
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ConnectString.DbLink">
            <summary>
            数据库连接字符串(加密的)
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.ConnectString.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.UserInfo">
             <summary>
             UserInfo
             用户类
             
             修改纪录
             
            		2011.09.12 EricHu 版本：2.1 公司名称、部门名称、工作组名称进行重构。
            		2011.05.11 EricHu 版本：2.0 增加安全通讯用户名、密码。
            		2008.08.26 EricHu 版本：1.2 整理主键。
            		2006.05.03 EricHu 版本：1.1 添加到工程项目中。
            		2006.01.21 EricHu 版本：1.0 远程传递参数用属性才可以。
            		
             版本：2.1
            
             <author>
            		<name>EricHu</name>
            		<date>2011.09.12</date>
             </author> 
             </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.serviceUserName">
            <summary>
            远程调用Service用户名（为了提高软件的安全性）
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.servicePassword">
            <summary>
            远程调用Service密码（为了提高软件的安全性）
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.openId">
            <summary>
            单点登录唯一识别标识
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.targetUserId">
            <summary>
            目标用户
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.id">
            <summary>
            用户主键
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.staffId">
            <summary>
            员工主键
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.userName">
            <summary>
            用户用户名
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.realName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.code">
            <summary>
            编号
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.companyId">
            <summary>
            当前的组织结构公司主键
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.companyCode">
            <summary>
            当前的组织结构公司编号
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.companyName">
            <summary>
            当前的组织结构公司名称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.departmentId">
            <summary>
            当前的组织结构部门主键
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.departmentCode">
            <summary>
            当前的组织结构部门编号
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.departmentName">
            <summary>
            当前的组织结构部门名称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.workgroupId">
            <summary>
            当前的组织结构工作组主键
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.workgroupCode">
            <summary>
            当前的组织结构工作组编号
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.workgroupName">
            <summary>
            当前的组织结构工作组名称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.roleId">
            <summary>
            默认角色
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.securityLevel">
            <summary>
            安全级别
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.roleName">
            <summary>
            默认角色名称
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.isAdministrator">
            <summary>
            是否超级管理员
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.password">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.ipAddress">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.macAddress">
            <summary>
            MAC地址
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.currentLanguage">
            <summary>
            当前语言选择
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.UserInfo.themes">
            <summary>
            当前布局风格选择
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.UserInfo.GetUserInfo">
            <summary>
            获取信息
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.UserInfo.ProcessName">
            <summary>
            进程名称
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.UserInfo.ProcessId">
            <summary>
            进程ID
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.UserInfo.LastVisit">
            <summary>
            最后一次访问时间
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.BaseConfiguration">
            <summary>
            BaseConfiguration
            连接配置。
            
            修改纪录
            
                2011.09.29 版本：3.8 EricHu 删除一些多余的变量定义。
                2011.07.06 版本：3.7 EricHu      增加 EnableCheckIPAddress。
            	2011.01.21 版本：3.6 EricHu 自动登录、加密数据库连接功能完善。
            	2008.06.08 版本：3.6 EricHu 将读取配置文件进行分离。
            	2008.05.08 版本：3.4 EricHu 获得不同的数据库连接字符串 OracleConnection、SqlConnection、OleDbConnection。
            	2007.11.28 版本：3.2 EricHu 获得数据连接字符串，减少配置文件的读的次序，提高性能。
            	2007.05.23 版本：3.1 EricHu 增加 public const string 定义部分。
            	2007.04.14 版本：3.0 EricHu 检查程序格式通过，不再进行修改主键操作。
            	2006.11.17 版本：2.4 EricHu GetFromRegistryKey() 方法主键进行整理，删除多余的引用。
            	2006.05.02 版本：2.3 EricHu GetFromConfig 增加从配置文件读取数据库联接的方法。
            	2006.04.18 版本：2.2 EricHu 重新调整主键的规范化。
            	2006.02.02 版本：2.0 EricHu 删除数据库连接池的想法，修改了命名，更规范化，贴切了。 
            	2005.12.29 版本：1.0 EricHu 从配置文件读取数据库连接。
            
            版本：3.8
            
            <author>
            	<name>EricHu</name>
            	<date>2011.09.29</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseConfiguration.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BaseConfiguration.#ctor(System.String)">
            <summary>
            设定当前软件Id
            </summary>
            <param name="softName">当前软件Id</param>
        </member>
        <member name="M:RDIFramework.Utilities.BaseConfiguration.GetDbType(System.String)">
            <summary>
            数据库连接的类型判断
            </summary>
            <param name="dbType">数据库类型</param>
            <returns>数据库类型</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseConfiguration.GetConfiguration(System.String)">
            <summary>
            配置信息的类型判断
            </summary>
            <param name="configuration">配置信息类型</param>
            <returns>配置信息类型</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BaseConfiguration.GetSetting">
            <summary>
            读取配置信息
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.ConfigurationCategory">
            <summary>
            ConfigurationCategory
            系统配置信息读取。
            
            修改纪录
            
            	2009.06.08 版本：3.1 EricHu 将命名修改为 ConfigurationCategory。 
            	2009.04.14 版本：3.0 EricHu 检查程序格式通过，不再进行修改主键操作。 
            	2008.11.17 版本：2.0 EricHu 变量命规范化。
            	2008.09.11 版本：1.0 EricHu 重新调整主键的规范化。
            	
            版本：2.0
            
            <author>
            	<name>EricHu</name>
            	<date>2008.06.08</date>
            </author> 
            </summary>  
        </member>
        <member name="T:RDIFramework.Utilities.ConfigurationHelper">
            <summary>
            ConfigurationHelper
            连接配置。
            
            修改纪录
                2011.07.05 版本：1.1 EricHu 增加  SystemInfo.EnableCheckIPAddress 
            	2008.06.08 版本：1.0 EricHu 将程序从 BaseConfiguration 进行了分离。
            
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2008.06.08</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ConfigurationHelper.GetConfig">
            <summary>
            从配置信息获取配置信息
            </summary>
            <param name="configuration">配置</param>
        </member>
        <member name="T:RDIFramework.Utilities.IConfiguration">
             <summary>
             IConfiguration
             读取配置文件接口定义
             
             修改纪录
             
            		2009.07.08 版本：1.0 EricHu 创建代码。
            		
             版本：1.0
            
             <author>
            		<name>EricHu</name>
            		<date>2009.07.08</date>
             </author> 
             </summary>
        </member>
        <member name="T:RDIFramework.Utilities.RegistryHelper">
             <summary>
             RegistryHelper
             访问注册表的类。
             
             修改纪录
            
            		2011.06.08 版本：3.2 EricHu 命名修改为 RegistryHelper。 
            		2010.07.30 版本：3.1 EricHu Exists 函数名规范化。 
            		2010.04.14 版本：3.0 EricHu 检查程序格式通过，不再进行修改主键操作。 
                 2009.11.17 版本：2.2 EricHu 添加方法CheckExistSubKey()。
                 2009.09.08 版本：2.1 EricHu 变量命名规范化。
                 2009.04.18 版本：2.0 EricHu 重新调整主键的规范化。
            		2008.08.08 版本：1.0 EricHu 专门读取注册表的类，主键书写格式改进。
            		
            	版本：3.0
             
             <author>
            		<name>EricHu</name>
            		<date>2008.08.08</date>
             </author> 
             </summary>
        </member>
        <member name="F:RDIFramework.Utilities.RegistryHelper.SubKey">
            <summary>
            注册表中的位置
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.RegistryHelper.GetValue(System.String)">
            <summary>
            读取注册表
            </summary>
            <param name="subKey">注册表子项</param>
            <param name="registryKey">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.RegistryHelper.SetValue(System.String,System.String)">
            <summary>
            设置注册表
            </summary>
            <param name="subKey">注册表子项</param>
            <param name="registryKey">键</param>
            <param name="keyValue">值</param>
        </member>
        <member name="M:RDIFramework.Utilities.RegistryHelper.Exists(System.String)">
            <summary>
            判断一个注册表项是否存在
            </summary>
            <param name="key">键</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:RDIFramework.Utilities.RegistryHelper.Exists(System.String,System.String)">
            <summary>
            判断一个注册表项是否存在
            </summary>
            <param name="subKey">注册表子项</param>
            <param name="key">键</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:RDIFramework.Utilities.RegistryHelper.GetValues">
            <summary>
            获取注册表的值
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.RegistryHelper.SetValues">
            <summary>
            设置注册表的值
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.RegistryHelper.GetConfig">
            <summary>
            读取注册表信息
            获取系统配置信息，在系统的原头解决问题，呵呵不错
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.TableConfigHelper">
             <summary>
             ConfigHelper
             访问用户配置文件的类。
             
             修改纪录
            
            		2008.06.08 版本：1.0 EricHu 创建。
            		
            	版本：1.0
             
             <author>
            		<name>EricHu</name>
            		<date>2008.06.08</date>
             </author> 
             </summary>
        </member>
        <member name="M:RDIFramework.Utilities.TableConfigHelper.GetValue(System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.TableConfigHelper.GetValue(System.String,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="fileName">配置文件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.TableConfigHelper.GetValue(System.String,System.String,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="fileName">配置文件</param>
            <param name="selectPath">查询条件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.TableConfigHelper.GetValue(System.Xml.XmlDocument,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="XmlDocument">配置文件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.TableConfigHelper.GetValue(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="XmlDocument">配置文件</param>
            <param name="selectPath">查询条件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.TableConfigHelper.GetConfig(System.String,System.Object)">
            <summary>
            从指定的文件读取文件结构配置
            </summary>
            <param name="fileName">配置文件</param>
            <param name="table">文件结构配置</param>
        </member>
        <member name="T:RDIFramework.Utilities.UserConfigHelper">
            <summary>
            UserConfigHelper
            访问用户配置文件的类
            
            修改纪录
                2012.02.06 版本: 2.0 EricHu 新增平台博客、微博地址。
                2011.07.06 版本：1.4 EricHu 增加对 EnableCheckIPAddress 的操作
            	2010.06.08 版本：1.3 EricHu 命名修改为 ConfigHelper。
            	2010.04.22 版本：1.2 EricHu 从指定的文件读取配置项。
            	2009.07.31 版本：1.1 EricHu 规范化 FielName 变量。
            	2009.04.14 版本：1.0 EricHu 专门读取注册表的类，主键书写格式改进。
            	
            版本：2.0
            
            <author>
            	<name>EricHu</name>
            	<date>2009.04.14</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetLogOnTo">
            <summary>
            获取配置文件选项
            </summary>
            <returns>配置文件设置</returns>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetOption(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="xmlDocument">配置文件</param>
            <param name="selectPath">查询条件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetValue(System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetValue(System.String,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="fileName">配置文件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetValue(System.String,System.String,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="fileName">配置文件</param>
            <param name="selectPath">查询条件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetValue(System.Xml.XmlDocument,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="xmlDocument">配置文件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetValue(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            读取配置项
            </summary>
            <param name="xmlDocument">配置文件</param>
            <param name="selectPath">查询条件</param>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetConfig">
            <summary>
            读取配置文件
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.GetConfig(System.String)">
            <summary>
            从指定的文件读取配置项
            </summary>
            <param name="fileName">配置文件</param>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.SaveConfig">
            <summary>
            保存配置文件
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.UserConfigHelper.SaveConfig(System.String)">
            <summary>
            保存到指定的文件
            </summary>
            <param name="fileName">配置文件</param>
        </member>
        <member name="T:RDIFramework.Utilities.CurrentDbType">
            <summary>
            CurrentDbType
            有关数据库连接类型定义。
            
            修改纪录
            
            	2011.04.14 版本：3.0 EricHu 检查程序格式通过，不再进行修改主键操作。
            	2010.11.17 版本：2.1 EricHu 变量命规范化。
            	2010.04.18 版本：2.0 EricHu 重新调整主键的规范化。
            	
            版本：3.0
            
            <author>
            	<name>EricHu</name>
            	<date>2010.04.14</date>
            </author> 
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.DBProvider">
            <summary>
            DBProvider
            有关数据库连接的方法。
            
            修改纪录
            
            	2011.09.18 版本：2.0 EricHu 采用默认参数技术,把一些方法进行简化。
            	2010.09.03 版本：1.0 EricHu 创建。
            
            版本：2.0
            
            <author>
            	<name>EricHu</name>
            	<date>2010.09.03</date>
            </author> 
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DBProvider.DbConnection">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DBProvider.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DBProvider.factory">
            <summary> 
            DbProviderFactory实例
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.#ctor">
            <summary> 
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.GetDBNow">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.SqlSafe(System.String)">
            <summary>
            检查参数的安全性
            </summary>
            <param name="value">参数</param>
            <returns>安全的参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.PlusSign">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.MakeParameters(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="parameterName">参数名称</param>
            <param name="parameterValue">值</param>
            <param name="dbType">数据类型</param>
            <param name="parameterSize">大小</param>
            <param name="parameterDirection">输出方向</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.ExecuteNonQuery(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询返回受影响的行数
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.ExecuteScalar(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询返回受首行首列
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>object</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.ExecuteReader(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            执行查询返回DataReader
            </summary>
            <param name="commandType">命令分类</param>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <returns>结果集流</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DBProvider.Fill(System.String,System.Data.IDbDataParameter[],System.Data.CommandType)">
            <summary>
            填充数据表
            </summary>
            <param name="commandText">sql查询</param>
            <param name="dbParameters">参数集</param>
            <param name="commandType">命令分类</param>
            <returns>数据表</returns>
        </member>
        <member name="P:RDIFramework.Utilities.DBProvider.Factory">
            <summary> 
            DbProviderFactory实例
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.DBProvider.CurrentDbType">
            <summary> 
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.DbFactoryProvider">
            <summary>
            DbProviderFactory
            数据库服务工厂。
            
            修改纪录
            
            	2011.10.09 版本：2.1 EricHu 改进直接用数据库连接就可以打开连接的方法。
            	2011.10.08 版本：2.0 EricHu 支持多类型的多种数据库。
            	2011.09.18 版本：1.4 EricHu 整理代码注释。
            	2011.07.23 版本：1.2 EricHu 每次都获取一个新的数据库连接，解决并发错误问题。
            	2010.09.23 版本：1.1 EricHu 优化改进为单实例模式。
            	2010.08.26 版本：1.0 EricHu 创建数据库服务工厂。
            
            版本：2.1
            
            <author>
            	<name>EricHu</name>
            	<date>2011.10.09</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DbFactoryProvider.GetProvider(System.String)">
            <summary>
            获取指定的数据库连接
            </summary>
            <param name="connectionString">数据库连接串</param>
            <returns>数据库访问类</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DbFactoryProvider.GetProvider(RDIFramework.Utilities.CurrentDbType,System.String)">
            <summary>
            获取指定的数据库连接
            </summary>
            <param name="dataBaseType">数据库类型</param>
            <param name="connectionString">数据库连接串</param>
            <returns>数据库访问类</returns>
        </member>
        <member name="T:RDIFramework.Utilities.DbOperation">
            <summary>
            DbOperation
            有关数据库操作的定义。
            
            修改纪录
            
            	2012.03.19 版本：3.2 EricHu 增加 ExecProcedure方法，用于执行存储过程。
            	2012.02.04 版本：3.2 EricHu 修改为 DbOperation。
            	2011.07.30 版本：3.1 EricHu 增加 Truncate 方法。
            	2011.04.14 版本：3.0 EricHu 检查程序格式通过，不再进行修改主键操作。
            	2011.04.18 版本：2.0 EricHu 重新调整主键的规范化。
            	
            版本：3.0
            
            <author>
            	<name>EricHu</name>
            	<date>2010.04.14</date>
            </author> 
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.DB2Provider">
            <summary>
            DB2Provider
            有关数据库连接的方法。
            
            修改纪录
            
            	2011.07.19 版本：1.0 EricHu 创建。
            
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2011.07.19</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.#ctor(System.String)">
            <summary>
            构造函数,设置数据库连接
            </summary>
            <param name="connectionString">数据连接</param>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.GetDBNow">
            <summary>
            获得数据库当前日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.PlusSign">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.MakeInParam(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.MakeOutParam(System.String,System.Data.DbType,System.Int32)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">参数</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.MakeInParam(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            获取输入参数
            </summary>
            <param name="paramName">参数</param>
            <param name="dbType">数据类型</param>
            <param name="Size">长度</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.DB2Provider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="paramName">参数名</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <param name="direction">参数类型</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="P:RDIFramework.Utilities.DB2Provider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.MySqlProvider">
             <summary>
             MySqlProvider
             有关数据库连接的方法。
             
             修改纪录
            
            		2010.09.24 版本：1.0 EricHu 创建。
             
             版本：1.0
             
             <author>
            		<name>EricHu</name>
            		<date>2010.09.24</date>
             </author> 
             </summary>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="connectionString">数据连接</param>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.GetDBNow">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.MakeInParam(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.MakeOutParam(System.String,System.Data.DbType,System.Int32)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="DbType">数据类型</param>
            <param name="Size">长度</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.MakeInParam(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            获取输入参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <param name="value">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="parameterName">参数名称</param>
            <param name="parameterValue">值</param>
            <param name="dbType">数据类型</param>
            <param name="parameterSize">大小</param>
            <param name="parameterDirection">输出方向</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MySqlProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="P:RDIFramework.Utilities.MySqlProvider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.OleDbProvider">
             <summary>
             OleDbProvider
             有关数据库连接的方法。
             
             修改纪录
            
            		2011.01.22 版本：5.6 EricHu 参数首字母大小写规范化。
            		2008.08.26 版本：5.5 EricHu 修改 Open 时的错误反馈。
            		2008.06.01 版本：5.4 EricHu 数据库连接获得方式进行改进，构造函数获得调通。
            		2008.05.31 版本：5.3 EricHu 参数命名 param 前缀替换为小写字母开始。
            		2008.05.09 版本：5.2 EricHu InTransaction 命名改进。
            		2008.05.07 版本：5.1 EricHu AddParameter 方法改进。
            		2008.03.27 版本：5.1 EricHu 完善写日志功能。
             版本：2.0
             
             <author>
            		<name>EricHu</name>
            		<date>2008.03.27</date>
             </author> 
             </summary>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="connectionString">数据连接</param>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.GetDBNow">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.MakeInParam(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.MakeOutParam(System.String,System.Data.DbType,System.Int32)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">参数</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.MakeInParam(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            获取输入参数
            </summary>
            <param name="paramName">参数名</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="parameterName">参数</param>
            <param name="parameterValue">值</param>
            <param name="dbType">数据类型</param>
            <param name="parameterSize">长度</param>
            <param name="parameterDirection">参数类型</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.OleDbProvider.PlusSign">
            <summary>
            字符串相加符号
            </summary>
            <returns>字符加</returns>
        </member>
        <member name="P:RDIFramework.Utilities.OleDbProvider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.SqLiteProvider">
            <summary>
            SQLite 数据库操作
            有关数据库连接的方法。
            
            修改纪录
            
            	2011.07.06 版本：1.1 Pcsky 修改获得参数Sql表达式的BUG，?改成@
            	2011.07.06 版本：1.1 Pcsky 修改获得数据库日期时间的表达式，从UTC+0时区改成当前时区:UTC+8。
            	2010.10.18 版本：1.0 EricHu 创建。
            
            版本：1.1
            
            <author>
            	<name>EricHu</name>
            	<date>2010.10.18</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.#ctor(System.String)">
            <summary>
            数据库连接
            </summary>
            <param name="connectionString">数据连接</param>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.GetInstance">
            <summary>
            当前数据库实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.GetDBNow">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.MakeInParam(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.MakeOutParam(System.String,System.Data.DbType,System.Int32)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.MakeInParam(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">目标字段</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <param name="value">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="parameterName">目标字段</param>
            <param name="parameterValue">值</param>
            <param name="dbType">数据类型</param>
            <param name="parameterSize">长度</param>
            <param name="parameterDirection">参数类型</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqLiteProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="P:RDIFramework.Utilities.SqLiteProvider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.SqlProvider">
            <summary>
            SqlProvider
            有关数据库连接的方法。
            
            修改纪录
            
            	2011.08.26 版本：1.2 EricHu 修改Open时的错误反馈。
            	2010.06.01 版本：1.1 EricHu 数据库连接获得方式进行改进，构造函数获得调通。
            	2010.05.07 版本：1.0 EricHu 创建。
            
            版本：1.2
            
            <author>
            	<name>EricHu</name>
            	<date>2010.05.11</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.#ctor(System.String)">
            <summary>
            构造函数,设置数据库连接
            </summary>
            <param name="connectionString">数据连接</param>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.GetDBNow">
            <summary>
            获得数据库当前日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.GetDBDateTime">
            <summary>
            获得数据库日期时间
            </summary>
            <returns>日期时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.PlusSign(System.String[])">
            <summary>
             获得Sql字符串相加符号
            </summary>
            <param name="values">参数值</param>
            <returns>字符加</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.GetParameter(System.String)">
            <summary>
            获得参数Sql表达式
            </summary>
            <param name="parameter">参数名称</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.MakeInParam(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.MakeParameter(System.String,System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.MakeParameters(System.String[],System.Object[])">
            <summary>
            获取参数
            </summary>
            <param name="targetFiled">目标字段</param>
            <param name="targetValue">值</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.MakeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            获取参数泛型列表
            </summary>
            <param name="parameters">参数</param>
            <returns>参数集</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.MakeOutParam(System.String,System.Data.DbType,System.Int32)">
            <summary>
            获取输出参数
            </summary>
            <param name="paramName">参数</param>
            <param name="dbType">数据类型</param>
            <param name="size">长度</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.MakeInParam(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            获取输入参数
            </summary>
            <param name="paramName">参数</param>
            <param name="dbType">数据类型</param>
            <param name="Size">长度</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.MakeParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            获取参数
            </summary>
            <param name="parameterName">参数名</param>
            <param name="parameterValue">值</param>
            <param name="dbType">数据类型</param>
            <param name="parameterSize">长度</param>
            <param name="parameterDirection">参数类型</param>
            <returns>参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SqlProvider.SqlBulkCopyData(System.Data.DataTable)">
            <summary>
            利用Net SqlBulkCopy 批量导入数据库,速度超快
            </summary>
            <param name="dataTable">源内存数据表</param>
        </member>
        <member name="P:RDIFramework.Utilities.SqlProvider.CurrentDbType">
            <summary>
            当前数据库类型
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.ResourceManager">
            <summary>
            ResourceManager
            资源管理器
            
            修改纪录
            	2007.05.16 版本：1.0 EricHu	重新调整主键的规范化。
            
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2007.05.16</date>
            </author> 
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.ResourceManagerWrapper">
            <summary>
            ResourceManagerWrapper
            资源管理器
            
            修改纪录
            	2010.05.16 版本：1.0 EricHu	重新调整主键的规范化。
            
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2010.05.16</date>
            </author> 
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.Resources">
            <summary>
            BUResourceManager
            资源管理器
            
            修改纪录
            	2007.05.16 版本：1.0 EricHu	重新调整主键的规范化。
            
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2007.05.16</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.Resources.Set(System.String,System.String)">
            <summary>
            EricHu 2007.05.02
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.AuditStatus">
            <summary>
            AuditStatus
            审核状态。
            
            修改纪录
            
                2013.10.13 版本：1.0 EricHu 改进枚举类型的说明。
            	2012.09.04 版本：1.0 EricHu 重新调整主键的规范化。
            	
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2009.09.04</date>
            </author> 
            </summary>    
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.Draft">
            <summary>
            00 草稿状态
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.StartAudit">
            <summary>
            01 开始审核
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.AuditPass">
            <summary>
            02 审核通过
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.WaitForAudit">
            <summary>
            03 待审核
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.Transmit">
            <summary>
            04 转发
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.AuditReject">
            <summary>
            05 已退回
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.AuditComplete">
            <summary>
            06 审核结束
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AuditStatus.AuditQuash">
            <summary>
            07 撤销,废弃
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.BusinessLogic">
             <summary>
            	BusinessLogic
             通用基类
             
             这个类可是修改了很多次啊，已经比较经典了，随着专业的提升，人也会不断提高，技术也会越来越精湛。
             
             修改纪录
             
            	
             版本：1.0
            
             <author>
            		<name>EricHu</name>
            		<date>2011.08.01</date>
             </author> 
             </summary>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.SqlSafe(System.String)">
            <summary>
            检查参数的安全性
            </summary>
            <param name="value">参数</param>
            <returns>安全的参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.NewGuid">
            <summary>
            获得 Guid
            </summary>
            <returns>主键</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetDbProviderClass(RDIFramework.Utilities.CurrentDbType)">
            <summary>
            按数据类型获取数据库访问实现类
            </summary>
            <param name="dbType">数据库类型</param>
            <returns>数据库访问实现类</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.IsKeywords(System.String)">
            <summary>
            判断是否关键字
            </summary>
            <param name="field">字段</param>
            <returns>是关键字</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.SetColumnsFilter(System.Data.DataTable,System.String[])">
            <summary>
            过滤表中的字段
            </summary>
            <param name="dataTable">数据表</param>
            <param name="columns">过滤字段</param>
            <returns>过滤后的结果</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.Exists(System.Data.DataTable,System.String,System.String)">
            <summary>
            判断数据表中指定字段的指定值是否存在
            </summary>
            <param name="dataTable">数据表</param>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <returns>存在:true；不存在：false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.IsAuthorized(System.Data.DataTable,System.String)">
            <summary>
            是否有相应的权限
            </summary>
            <param name="dataTable">数据表</param>
            <param name="permissionItemCode">权限编号</param>
            <returns>是否有权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetPermissionScope(System.String[])">
            <summary>
            获取权限范围的设置
            </summary>
            <param name="organizeIds">有权限的组织机构</param>
            <returns>权限范围</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetBinaryFormatData(System.Data.DataTable)">
            <summary>
            从服务器取数据,转换DataTable为二进制格式
            </summary>
            <param name="dataTable">数据表</param>
            <returns>二进制格式</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.RetrieveDataTable(System.Byte[])">
            <summary>
            客户端接收到byte[]格式的数据,对其进行反序列化,得到数据表,进行客户端操作.
            </summary>
            <param name="ArrayResult">二进制格式</param>
            <returns>数据表</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.RepeatString(System.String,System.Int32)">
            <summary>
            重复字符串
            </summary>
            <param name="targetString">目标字符串</param>
            <param name="repeatCount">重复次数</param>
            <returns>结果字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.FieldToList(System.Data.DataTable)">
            <summary>
            表格字段转换为字符串列表
            </summary>
            <param name="dataTable">数据表</param>
            <returns>字段值字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.FieldToList(System.Data.DataTable,System.String)">
            <summary>
            表格字段转换为字符串列表
            </summary>
            <param name="dataTable">数据表</param>
            <param name="name">列名</param>
            <returns>字段值字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.FieldToArray(System.Data.DataTable,System.String)">
            <summary>
            表格字段转换为字符串数组
            </summary>
            <param name="dataTable">数据表</param>
            <param name="name">列名</param>
            <returns>字段值数组</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ObjectsToList(System.Object[])">
            <summary>
            字段值数组转换为字符串列表
            </summary>
            <param name="ids">字段值</param>
            <returns>字段值字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.SetFilter(System.Data.DataTable,System.String,System.String,System.Boolean)">
            <summary>
            对数据表进行过滤
            </summary>
            <param name="dataTable">数据表</param>
            <param name="fieldName">字段名</param>
            <param name="fieldValue">字段值</param>
            <param name="equals">相等</param>
            <returns>数据权限</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetProperty(System.Data.DataTable,System.String,System.String)">
            <summary>
            读取一个属性
            </summary>
            <param name="dataTable">数据表</param>
            <param name="id">主键</param>
            <param name="targetField">目标字段</param>
            <returns>目标值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetProperty(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            读取一个属性
            </summary>
            <param name="dataTable">数据表</param>
            <param name="fieldName">字段</param>
            <param name="fieldValue">值</param>
            <param name="targetField">目标字段</param>
            <returns>目标值</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.SetProperty(System.Data.DataTable,System.String,System.String,System.Object)">
            <summary>
            设置一个属性
            </summary>
            <param name="dataTable">数据表</param>
            <param name="id">主键</param>
            <param name="targetField">更新字段</param>
            <param name="targetValue">目标值</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.SetProperty(System.Data.DataTable,System.String,System.String,System.String,System.Object)">
            <summary>
            设置一个属性
            </summary>        
            <param name="dataTable">数据表</param>
            <param name="fieldName">字段</param>
            <param name="fieldValue">值</param>
            <param name="targetField">更新字段</param>
            <param name="targetValue">目标值</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.Delete(System.Data.DataTable,System.String)">
            <summary>
            删除一条记录
            </summary>        
            <param name="dataTable">数据表名</param>
            <param name="id">主键</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.Delete(System.Data.DataTable,System.String,System.String)">
            <summary>
            删除一条记录
            </summary>        
            <param name="dataTable">数据表名</param>
            <param name="fieldName">字段</param>
            <param name="fieldValue">值</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetDataRow(System.Data.DataTable,System.String)">
            <summary>
            从数据权限读取一行数据
            </summary>        
            <param name="dataTable">数据表</param>
            <param name="id">主键</param>
            <returns>数据行</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetDataRow(System.Data.DataTable,System.String,System.String)">
            <summary>
            从数据权限读取一行数据
            </summary>        
            <param name="dataTable">数据表</param>
            <param name="fieldName">字段</param>
            <param name="fieldValue">值</param>
            <returns>数据行</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.SetClassValue(System.Object,System.String,System.Object)">
            <summary>
            设置对象的属性
            </summary>
            <param name="sourceObject">目标对象</param>
            <param name="field">属性名称</param>
            <param name="targetValue">目标值</param>
            <returns>影响的属性个数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.CopyObjectValue(System.Object,System.Object)">
            <summary>
            复制类对象的对应的值
            </summary>
            <param name="sourceObject">当前对象</param>
            <param name="targetObject">目标对象</param>
            <returns>对象</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.CopyObjectProperties(System.Object,System.Object)">
            <summary>
            复制属性
            </summary>
            <param name="sourceObject">类</param>
            <param name="targetObject">目标类</param>
            <returns>类</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetSearchString(System.String)">
            <summary>
            获取查询字符串
            </summary>
            <param name="search">查询字符</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.Exists(System.String[],System.String)">
            <summary>
            判断是否包含的方法
            </summary>
            <param name="ids">数组</param>
            <param name="targetString">目标值</param>
            <returns>包含</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.Concat(System.String[],System.String)">
            <summary>
            合并数组
            </summary>
            <param name="ids">数组</param>
            <param name="id">新值</param>
            <returns>数组</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.Concat(System.String[][])">
            <summary>
            合并数组
            </summary>
            <param name="ids">数组</param>
            <returns>数组</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.Remove(System.String[],System.String)">
            <summary>
            从目标数组中去除某个值
            </summary>
            <param name="ids">数组</param>
            <param name="id">目标值</param>
            <returns>数组</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToString(System.Object)">
            <summary>
            将指定对象的值转换为其等效的字符串表示形式。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的字符串表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToInt(System.Object)">
            <summary>
            将指定对象的值转换为其等效的整型表示形式。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的整型表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToInt32(System.Object)">
            <summary>
            将指定对象的值转换为其等效的 32 位有符号整数。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的32 位有符号整数表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToInt64(System.Object)">
            <summary>
            将指定对象的值转换为其等效的 64 位有符号整数。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的64 位有符号整数表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToLong(System.Object)">
            <summary>
            将指定对象的值转换为其等效的64位有符号整数。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的64 位有符号整数表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToDouble(System.Object)">
            <summary>
            将指定对象的值转换为其等效的等效双精度浮点数。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的等效双精度浮点数表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToFloat(System.Object)">
            <summary>
            将指定对象的值转换为其等效的等效单精度浮点数字。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的等效单精度浮点数字表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToDecimal(System.Object)">
            <summary>
            将指定对象的值转换为其等效的等效 Decimal 表示形式。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的等效 Decimal 表示形式，如果 targetValue 为 null，则为 null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertIntToBoolean(System.Object)">
            <summary>
            将指定对象（整型）的值转换为其等效的Boolean表示形式。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的等效 Boolean 表示形式，如果 targetValue 为 null，则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToBoolean(System.Object)">
            <summary>
            将指定对象的值转换为其等效的Boolean表示形式。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的等效 Boolean 表示形式，如果 targetValue 为 null，则为 false。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToDateTime(System.Object)">
            <summary>
            将指定对象的值转换为 DateTime 值。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的值的日期和时间等效项，如果 targetValue 为 null，则返回null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToDateToString(System.Object)">
            <summary>
            将指定对象的值转换为 DateTime 值字符串表示形式。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的值的日期和时间等效项的字符串表示形式，如果 targetValue 为 null，则返回null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ConvertToByte(System.Object)">
            <summary>
            将指定对象的值转换为 Byte表示形式。
            </summary>
            <param name="targetValue">一个对象，用于提供要转换的值，或 null。</param>
            <returns>targetValue 的值的Byte表示形式，如果 targetValue 为 null，则返回null。</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.StartDebug(System.Reflection.MethodBase)">
            <summary>
            写入开始调试信息
            </summary>
            <param name="methodBase">提供有关方法和构造函数的信息</param>
            <returns>启动经过的毫秒数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.StartDebug(RDIFramework.Utilities.UserInfo,System.Reflection.MethodBase)">
            <summary>
            写入开始调试信息
            </summary>
            <param name="userInfo">用户</param>
            <param name="methodBase">提供有关方法和构造函数的信息</param>
            <returns>启动经过的毫秒数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.EndDebug(System.Reflection.MethodBase,System.Int32,System.ConsoleColor)">
            <summary>
            写入结束调试信息
            </summary>
            <param name="methodBase">提供有关方法和构造函数的信息</param>
            <param name="milliStart">开始启动时的毫秒数</param>
            <param name="consoleColor">定义控制台前/背景色</param>
            <returns>执行所耗的毫秒数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.EndDebug(System.Reflection.MethodBase,System.Int32)">
            <summary>
            写入结束调试信息
            </summary>
            <param name="methodBase">提供有关方法和构造函数的信息</param>
            <param name="milliStart">开始启动时的毫秒数</param>
            <returns>执行所耗的毫秒数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.WriteDebug(RDIFramework.Utilities.UserInfo,System.Reflection.MethodBase)">
            <summary>
            写入调试信息
            </summary>
            <param name="userInfo">用户</param>
            <param name="methodBase">提供有关方法和构造函数的信息</param>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetFriendlyFileSize(System.Double)">
            <summary>
            有善的文件大小现实方式
            </summary>
            <param name="fileSize">文件大小</param>
            <returns>现实方式</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.GetLanguageResource(System.Object)">
            <summary>
            从当前指定的语言包读取信息
            </summary>
            <returns>设置多语言的属性个数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.ImageToBytes(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            将图片Image转换成Byte[]
            </summary>
            <param name="Image">image对象</param>
            <param name="imageFormat">后缀名</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.byteArrayToImage(System.Byte[])">
            <summary>
            byte[]转换成Image
            </summary>
            <param name="byteArrayIn">二进制图片流</param>
            <returns>Image</returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.BytesToBitmap(System.Byte[])">
            <summary>
            byte[] 转换 Bitmap
            </summary>
            <param name="Bytes"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.BusinessLogic.BitmapToBytes(System.Drawing.Bitmap)">
            <summary>
            Bitmap转byte[] 
            </summary>
            <param name="Bitmap"></param>
            <returns></returns> 
        </member>
        <member name="T:RDIFramework.Utilities.BusinessLogic.CheckMoveEventHandler">
            <summary>
            检查转移
            </summary>
            <param name="selectedId">选择的主键</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:RDIFramework.Utilities.BusinessLogic.SelectedIndexChangedEventHandler">
            <summary>
            选择主键发生变化
            </summary>
            <param name="selectedId">选择的主键</param>
        </member>
        <member name="T:RDIFramework.Utilities.ExportCSVHelper">
             <summary>
             ExportCSV
             导出CSV格式数据
             
             修改纪录
             
                 2009.07.08 版本：3.0 EricHu	更新完善程序，将方法修改为静态方法。
                 2007.08.11 版本：2.0 EricHu	更新完善程序。
                 2006.12.01 版本：1.0 EricHu	新创建。
             
             版本：3.0
            
             <author>
            		<name>EricHu</name>
            		<date>2009.07.08</date>
             </author> 
             </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ExportCSVHelper.GetCSVFormatData(System.Data.DataTable)">
            <summary>
            通过DataTable获得CSV格式数据
            </summary>
            <param name="dataTable">数据表</param>
            <returns>CSV字符串数据</returns>
        </member>
        <member name="M:RDIFramework.Utilities.ExportCSVHelper.GetCSVFormatData(System.Data.DataSet)">
            <summary>
            通过DataSet获得CSV格式数据
            </summary>
            <param name="dataSet">数据权限</param>
            <returns>CSV字符串数据</returns>
        </member>
        <member name="M:RDIFramework.Utilities.ExportCSVHelper.ExportCSV(System.Data.DataTable,System.String)">
            <summary>
            导出CSV格式文件
            </summary>
            <param name="dataTable">数据表</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.ExportCSVHelper.ExportCSV(System.Data.DataSet,System.String)">
            <summary>
            导出CSV格式文件
            </summary>
            <param name="dataSet">数据权限</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.ExportCSVHelper.GetResponseCSV(System.Data.DataTable,System.String)">
            <summary>
            在浏览器中获得CSV格式文件
            </summary>
            <param name="dataTable">数据表</param>
            <param name="fileName">输出文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.ExportCSVHelper.GetResponseCSV(System.Data.DataSet,System.String)">
            <summary>
            在浏览器中获得CSV格式文件
            </summary>
            <param name="dataSet">数据权限</param>
            <param name="fileName">输出文件名</param>
        </member>
        <member name="T:RDIFramework.Utilities.RandomHelper">
            <summary>
            BaseRandom
            产生随机数
            
            随机数管理，最大值、最小值可以自己进行设定。
            
            修改纪录
            
                2009.07.08 版本：3.0 EricHu	更新完善程序，将方法修改为静态方法。
            	2007.06.30 版本：3.2 EricHu   产生随机字符。
            	2006.02.05 版本：3.1 EricHu   重新调整主键的规范化。
            	2004.11.12 版本：3.0 EricHu   最后修改，改进成以后可以扩展到多种数据库的结构形式。
                2004.11.12 版本：3.0 EricHu   一些方法改进，主键格式优化，基本上看上去还过得去了。
                2005.03.07 版本：2.0 EricHu   2005.03.07 更新程序排版。
                2005.08.13 版本：1.0 EricHu   参数格式标准化。
                
            版本：3.2
            <author>
            	<name>EricHu</name>
            	<date>2007.06.30</date>
            </author> 
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.RandomHelper.GetRandomString">
            <summary>
            产生随机字符
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.RandomHelper.GetRandom">
            <summary>
            产生随机数
            </summary>
            <returns>随机数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.RandomHelper.GetRandom(System.Int32,System.Int32)">
            <summary>
            产生随机数
            </summary>
            <param name="minimum">最小值</param>
            <param name="maximal">最大值</param>
            <returns>随机数</returns>
        </member>
        <member name="T:RDIFramework.Utilities.SortLogic">
             <summary>
            	BaseSortLogic
             通用排序逻辑基类（程序OK）
             
             修改纪录
             
            		2011.10.09 版本：   1.4 EricHu 更新函数名为*Id。
            		2010.12.10 版本：   1.3 EricHu 改进 序列产生码的长度问题。
            		2010.11.01 版本：   1.2 EricHu 改进 BUOperatorInfo 去掉这个变量，可以提高性能，提高速度，基类的又一次飞跃。
            		2010.03.01 版本：   1.0 EricHu 将主键从 BUBusinessLogic 类分离出来。
            	
             版本：1.3
            
             <author>
            		<name>EricHu</name>
            		<date>2010.12.10</date>
             </author> 
             </summary>
        </member>
        <member name="M:RDIFramework.Utilities.SortLogic.GetNextId(System.Data.DataTable,System.String)">
            <summary>
            获取下一条记录主键
            </summary>
            <param name="dataTable">数据表</param>
            <param name="tableName">当前表</param>
            <param name="id">当前主键</param>
            <returns>主键</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SortLogic.GetPreviousId(System.Data.DataTable,System.String)">
            <summary>
            获取上一条记录主键
            </summary>
            <param name="dataTable">数据表</param>
            <param name="tableName">当前表</param>
            <param name="id">当前主键</param>
            <returns>主键</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SortLogic.Swap(System.Data.DataTable,System.String,System.String)">
            <summary>
            两条记录交换排序顺序
            </summary>
            <param name="dataTable">数据表</param>
            <param name="id">要移动的记录主键</param>
            <param name="targetId">目标记录主键</param>
            <returns>影响行数</returns>
        </member>
        <member name="T:RDIFramework.Utilities.ClsImeHelper">
            <summary>
            RDIFramework窗体全角与半角漏洞处理(主要针对在光标移动到下一控件时，输入法全角与半角会自动切换)
            
            修改纪录(此ClsImeHelper经过多次修改，已趋于完美，可放心使用。)
                2009-11-05 EricHu 对代码做了相应优化
                2009-08-12 EricHu 创建ClsImeHelper
                
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.ClsImeHelper.SetIme(System.Windows.Forms.Form)">
            <summary>
            重载SetIme，传入Form
            </summary>
            <param name="frm">窗体</param>
        </member>
        <member name="M:RDIFramework.Utilities.ClsImeHelper.SetIme(System.Windows.Forms.Control)">
            <summary>
            重载SetIme，传入Control
            </summary>
            <param name="ctl">控件</param>
        </member>
        <member name="M:RDIFramework.Utilities.ClsImeHelper.SetIme(System.IntPtr)">
            <summary>
            重载SetIme，传入对象句柄
            </summary>
            <param name="Handel">对象句柄</param>
        </member>
        <member name="M:RDIFramework.Utilities.ClsImeHelper.ctl_Enter(System.Object,System.EventArgs)">
            <summary>
            控件的Enter处理程序
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RDIFramework.Utilities.ClsImeHelper.ChangeControlIme(System.IntPtr)">
            <summary>
            下面这个函数才是真正检查输入法的全角半角状态
            </summary>
            <param name="h"></param>
        </member>
        <member name="T:RDIFramework.Utilities.DateTimeHelper">
            <summary>
            日期时间公共处理类
            
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetDate(System.DateTime)">
            <summary>
            返回默认格式化的日期(格式化字符串:yyyy-MM-dd)
            </summary>
            <param name="dt">要格式化的时间</param>
            <returns>格式化后的时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetTime(System.DateTime)">
            <summary>
            返回默认格式化的时间(格式化字符串:HH:mm:ss)
            </summary>
            <param name="dt">要格式化的时间</param>
            <returns>格式化后的时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetDateTime(System.DateTime)">
            <summary>
            返回默认格式化的日期和时间(格式化字符串:yyyy-MM-dd HH:mm:ss)
            </summary>
            <param name="dt">要格式化的时间</param>
            <returns>格式化后的时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetFormatTime(System.DateTime,System.String)">
            <summary>
            返回使用指定格式化串的日期/时间
            </summary>
            <param name="dt">要格式化的时间</param>
            <param name="format">格式化时间使用的字符串</param>
            <returns>格式化后的时间</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.IsDate(System.String)">
            <summary>
            判断输入是否为日期类型
            </summary>
            <param name="strValue">待检查数据</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.ToDataTime(System.String)">
            <summary>
            将输入的字符串转换成日期时间型数据
            </summary>
            <param name="strValue">待转换数据</param>
            <returns>成功，返回日期时间型数据；失败，返回null</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.ToDate(System.String)">
            <summary>
            将输入的字符串转换成指定格式（"yyyy-MM-dd")日期型数据
            </summary>
            <param name="strValue">待转换数据</param>
            <returns>成功，返回日期型数据；失败，返回null</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.FormatDate(System.String)">
            <summary>
            将输入的日期字符串转换成指定格式（"yyyy-MM-dd")字符型日期数据
            </summary>
            <param name="s">待转换数据</param>
            <returns>成功，返回字符型日期数据；失败，返回""</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetNumberOfDays(System.String,System.String)">
            <summary>
            得到指定月份的天数
            </summary>
            <param name="strYear">年份</param>
            <param name="strMonth">月份</param>
            <returns>返回该年度下的该月份的天数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetWeekNameOfDay(System.DateTime)">
            <summary>当前日期的星期名称</summary>
            <param name="dt">日期</param>
            <returns>星期名称</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetWeekNumberOfDay(System.DateTime)">
            <summary>返回当前日期的星期编号</summary>
            <param name="dt">日期</param>
            <returns>星期数字编号</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetWeekAmount(System.Int32)">
            <summary>
            获取某一年有多少周
            </summary>
            <param name="year">年份</param>
            <returns>该年周数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetWeekOfYear(System.DateTime)">
            <summary>
            获取某一日期是该年中的第几周
            </summary>
            <param name="dt">日期</param>
            <returns>该日期在该年中的周数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.WeekRange(System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            根据某年的第几周获取这周的起止日期
            </summary>
            <param name="year"></param>
            <param name="weekOrder"></param>
            <param name="firstDate"></param>
            <param name="lastDate"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.DiffDays(System.DateTime,System.DateTime)">
            <summary>
            返回两个日期之间相差的天数
            </summary>
            <param name="dtfrm">两个日期参数</param>
            <param name="dtto">两个日期参数</param>
            <returns>天数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.ToString(System.DateTime,System.String)">
            <summary>
            将日期对象转化为格式字符串
            </summary>
            <param name="oDateTime">日期对象</param>
            <param name="strFormat">
            格式：
            	"SHORTDATE"===短日期
            	"LONGDATE"==长日期
            	其它====自定义格式
            </param>
            <returns>日期字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetDaysOfYear(System.Int32)">
            <summary>返回本年有多少天</summary>
            <param name="iYear">年份</param>
            <returns>本年的天数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetDaysOfYear(System.DateTime)">
            <summary>本年有多少天</summary>
            <param name="dt">日期</param>
            <returns>本天在当年的天数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetDaysOfMonth(System.Int32,System.Int32)">
            <summary>本月有多少天</summary>
            <param name="iYear">年</param>
            <param name="Month">月</param>
            <returns>天数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetDaysOfMonth(System.DateTime)">
            <summary>本月有多少天</summary>
            <param name="dt">日期</param>
            <returns>天数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.IsDateTime(System.String)">
            <summary>
            判断是否为合法日期，必须大于1800年1月1日
            </summary>
            <param name="dateTime">输入日期字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.IsRuYear(System.Int32)">
            <summary>判断当前年份是否是闰年，私有函数</summary>
            <param name="iYear">年份</param>
            <returns>是闰年：True ，不是闰年：False</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetAnimalSign(System.DateTime)">
            <summary>
            获取某个指定日期的生肖
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.GetConstellation(System.DateTime)">
            <summary>
            根据输入的日期返回对应的星座
            </summary>
            <param name="dt">要查询的日期</param>
            <returns>查询的日期对应的星座</returns>
        </member>
        <member name="M:RDIFramework.Utilities.DateTimeHelper.IsLunisolarSupported(System.Int32)">
            <summary>
            检查农历是否支持给定的年份
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.Constellation">
            <summary>
            星座列表
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.水瓶座">
            <summary>
            水瓶座01月20日~02月18日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.双鱼座">
            <summary>
            双鱼座02月19日~03月20日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.白羊座">
            <summary>
            白羊座03月21日~04月19日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.金牛座">
            <summary>
            金牛座04月20日~05月20日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.双子座">
            <summary>
            双子座05月21日~06月21日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.巨蟹座">
            <summary>
            巨蟹座06月22日~07月22日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.狮子座">
            <summary>
            狮子座07月23日~08月22日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.处女座">
            <summary>
            处女座08月23日~09月22日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.天秤座">
            <summary>
            天秤座09月23日~10月23日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.天蝎座">
            <summary>
            天蝎座10月24日~11月22日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.射手座">
            <summary>
            射手座11月23日~12月21日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.Constellation.摩羯座">
            <summary>
            魔羯座12月22日~01月19日
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.AnimalSign">
            <summary>
            12生肖
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.鼠">
            <summary>
            鼠
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.牛">
            <summary>
            牛
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.虎">
            <summary>
            虎
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.兔">
            <summary>
            兔
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.龙">
            <summary>
            龙
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.蛇">
            <summary>
            蛇
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.马">
            <summary>
            马
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.羊">
            <summary>
            羊
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.猴">
            <summary>
            猴
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.鸡">
            <summary>
            鸡
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.狗">
            <summary>
            狗
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.AnimalSign.猪">
            <summary>
            猪
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.EarthlyBranch">
            <summary>
            12地支
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.子">
            <summary>
            子
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.丑">
            <summary>
            丑
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.寅">
            <summary>
            寅
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.卯">
            <summary>
            卯
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.辰">
            <summary>
            辰
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.巳">
            <summary>
            巳
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.午">
            <summary>
            午
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.未">
            <summary>
            未
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.申">
            <summary>
            申
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.酉">
            <summary>
            酉
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.戌">
            <summary>
            戌
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.EarthlyBranch.亥">
            <summary>
            亥
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.HeavenlyStem">
            <summary>
            天干
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.甲">
            <summary>
            甲
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.乙">
            <summary>
            乙
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.丙">
            <summary>
            丙
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.丁">
            <summary>
            丁
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.戊">
            <summary>
            戊
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.己">
            <summary>
            己
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.庚">
            <summary>
            庚
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.辛">
            <summary>
            辛
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.壬">
            <summary>
            壬
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.HeavenlyStem.癸">
            <summary>
            癸
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.SolarTerms">
            <summary>
            24个节气
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.立春">
            <summary>
            立春
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.雨水">
            <summary>
            雨水
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.惊蛰">
            <summary>
            惊蛰
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.春分">
            <summary>
            春分
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.清明">
            <summary>
            清明
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.谷雨">
            <summary>
            谷雨
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.立夏">
            <summary>
            立夏
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.小满">
            <summary>
            小满
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.芒种">
            <summary>
            芒种
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.夏至">
            <summary>
            夏至
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.小暑">
            <summary>
            小暑
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.大暑">
            <summary>
            大暑
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.立秋">
            <summary>
            立秋
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.处暑">
            <summary>
            处暑
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.白露">
            <summary>
            白露
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.秋分">
            <summary>
            秋分
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.寒露">
            <summary>
            寒露
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.霜降">
            <summary>
            霜降
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.立冬">
            <summary>
            立冬
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.小雪">
            <summary>
            小雪
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.大雪">
            <summary>
            大雪
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.冬至">
            <summary>
            冬至
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.小寒">
            <summary>
            小寒
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.SolarTerms.大寒">
            <summary>
            大寒
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.DayOfWeekCn">
            <summary>
            中文的星期列表
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DayOfWeekCn.星期日">
            <summary>
            星期日
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DayOfWeekCn.星期一">
            <summary>
            星期一
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DayOfWeekCn.星期二">
            <summary>
            星期二
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DayOfWeekCn.星期三">
            <summary>
            
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DayOfWeekCn.星期四">
            <summary>
            星期四
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DayOfWeekCn.星期五">
            <summary>
            星期五
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DayOfWeekCn.星期六">
            <summary>
            星期六
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.DefaultRole">
             <summary>
             DefaultRole
             默认角色。
             
             这个应该是角色类别才对，不应该是用户类别
             
             修改纪录
            
             版本：1.1
             
             <author>
            		<name>EricHu</name>
            		<date>2010.09.18</date>
             </author> 
             </summary>
        </member>
        <member name="T:RDIFramework.Utilities.DialogHelper">
            <summary>
            通用对话框显示类
            
            修改纪录
                2008-08-05 EricHu 增加"得到用户选择的结果:DialogResult ShowDlgReturnResult(string strMsg)"
                2008-05-20 EricHu 创建通用对话框显示类
                
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="F:RDIFramework.Utilities.DialogHelper.DATA_ISNULL">
            <summary>
            数据为空
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.DialogHelper.ShowErrorMsg(System.String)">
            <summary>
            显示错误信息
            </summary>
            <param name="strMsg">显示内容</param>
        </member>
        <member name="M:RDIFramework.Utilities.DialogHelper.ShowSuccessMsg(System.String)">
            <summary>
            显示成功信息
            </summary>
            <param name="strMsg">显示内容</param>
        </member>
        <member name="M:RDIFramework.Utilities.DialogHelper.ShowWarningMsg(System.String)">
            <summary>
            显示警告信息
            </summary>
            <param name="strMsg">显示内容</param>
        </member>
        <member name="M:RDIFramework.Utilities.DialogHelper.ShowQuestionMsg(System.String)">
            <summary>
            显示询问信息
            </summary>
            <param name="strMsg">显示内容</param>
        </member>
        <member name="M:RDIFramework.Utilities.DialogHelper.ShowDlgReturnResult(System.String)">
            <summary>
            显示询问信息并返回DialogResult的结果
            </summary>
            <param name="strMsg">显示内容，如：你确定要删除吗？（是/否）</param>
            <returns>DialogResult</returns>
        </member>
        <member name="T:RDIFramework.Utilities.EnumDescription">
            <summary>
            EnumDescription
            枚举状态的说明。
            
            修改纪录
            
            	2012.02.04 版本：1.1 EricHu 重新排版。
            	2011.10.13 版本：1.0 EricHu 创建。
            	
            版本：1.1
            
            <author>
            	<name>EricHu</name>
            	<date>2012.02.04</date>
            </author> 
            </summary>    
        </member>
        <member name="T:RDIFramework.Utilities.EnumExtensions">
            <summary>
            EnumDescription
            枚举状态的说明。
            
            修改纪录
            
            	2011.10.13 版本：1.0 EricHu 创建。
            	
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2011.10.13</date>
            </author> 
            </summary>    
        </member>
        <member name="T:RDIFramework.Utilities.FileHelper">
            <summary>
            通用文件处理类
            
            修改纪录
                2011-10-12 EricHu 对命名进行规范，对代码进行规范
                2009-02-07 EricHu 增加"得到指定路径下全部文件:
                        GetFile(string fileAllName, out string filePath, out string fileName, out string fileType)"
                2008-05-27 EricHu 创建通用文件处理类
                2013-06-03 EricHu 修改CopyDir函数的批量容易卡的情况。
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="fileName">文件名</param>
            <returns>字节</returns>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.SaveFile(System.Byte[],System.String)">
            <summary>
            保存文件
            </summary>
            <param name="File">文件</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.CreateDirectory(System.String)">
            <summary>
            递归创建文件夹
            采用了递归的方式，可以把不存在的父文件夹都创建好，然后再创建好指定的文件夹。
            </summary>
            <example>
            CreateDirectory(@"c:\test1\test2\test3\test4");
            </example>
            <param name="directoryName">文件夹的路径</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.Exists(System.String)">
            <summary>
            判断指定文件是否存在
            </summary>
            <param name="filePath">文件所在的路径</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetPostfixStr(System.String)">
            <summary>
            取得文件后缀名
            </summary>
            <param name="filename">文件名称</param>
            <returns>.gif|.html格式</returns>
            <example>
            string filename = "aaa.aspx";
            string s = FileHelper.GetPostfixStr(filename); 
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.WriteException(RDIFramework.Utilities.UserInfo,System.Exception)">
            <summary>
            写入异常情况
            </summary>
            <param name="userInfo">用户信息</param>
            <param name="Exception">异常</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.WriteException(System.Exception,System.String)">
            <summary>
            写入异常情况
            </summary>
            <param name="fileName">文件名</param>
            <param name="Exception">异常</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetFileSize(System.String)">
            <summary>
            得到当前文件的大小(以字节为单位)
            </summary>
            <param name="fileName">文件的完全限定名或相对限定名</param>
            <returns>当前文件的大小(以字节为单位)</returns>
            <example>
            string filename = "C:\\a.jpg"; 
            long lSize = GetFileSize(filename);
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.WriteFile(System.String,System.String)">
            <summary>
            写文件,会覆盖掉以前的内容
            </summary>
            <param name="Path">文件路径</param>
            <param name="Strings">文件内容</param>
            <example>
            string Path = Server.MapPath("Default2.aspx"); 
            string Strings = "没是测试内容。";
            FileHelper.WriteFile(Path,Strings);
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.ReadFile(System.String)">
            <summary>
            读取文本内容
            </summary>
            <param name="Path">文件路径</param>
            <returns>返回读取的文本内容</returns>
            <example>
            string Path = Server.MapPath("Default2.aspx");
            string content = FileHelper.ReadFile(Path);
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.FileAdd(System.String,System.String)">
            <summary>
            追加文件内容
            </summary>
            <param name="Path">文件路径</param>
            <param name="strings">内容</param>
            <example>
            string Path = Server.MapPath("Default2.aspx");
            string Strings = "新追加内容";
            FileHelper.FileAdd(Path, Strings);
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.FileCoppy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="OrignFile">原始文件</param>
            <param name="NewFile">新文件路径</param>
            <example>
            string orignFile = Server.MapPath("Default2.aspx");     
            string NewFile = Server.MapPath("Default3.aspx");
            FileHelper.FileCoppy(OrignFile, NewFile);
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="Path">路径</param>
            <example>
             string Path = Server.MapPath("Default3.aspx"); 
            FileHelper.FileDel(Path);
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="OrignFile">原始路径</param>
            <param name="NewFile">新路径</param>
            <example>
            string orignFile = Server.MapPath("../说明.txt");   
            string NewFile = Server.MapPath("../../说明.txt");
            FileHelper.FileMove(OrignFile, NewFile);
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="OrignFolder">当前目录</param>
            <param name="NewFloder">新目录</param>
            <example>
            string orignFolder = Server.MapPath("test/");  
            string NewFloder = "new";
            FileHelper.FolderCreate(OrignFolder, NewFloder); 
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir">文件夹路径</param>
            <example>
            string dir = Server.MapPath("test/");  
             FileHelper.DeleteFolder(dir);  
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.CopyDir(System.String,System.String)">
            <summary>
            将指定文件夹下面的所有内容copy到目标文件夹下面 果目标文件夹为只读属性就会报错。
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
            <example>
            string srcPath = Server.MapPath("test/");  
            string aimPath = Server.MapPath("test1/");
            FileHelper.CopyDir(srcPath,aimPath);   
            </example>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetFile(System.String,System.String@,System.String@,System.String@)">
            <summary>
            得到全部
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <param name="filePath">返回文件路径</param>
            <param name="fileName">返回不带反缀名的文件名</param>
            <param name="fileType">返回带.的后缀名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetName(System.String,System.String@)">
            <summary>
            得到文件名
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <param name="fileName">返回不带反缀名的文件名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetName(System.String)">
            <summary>
            得到文件名
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <returns>文件名</returns>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetType(System.String,System.String@)">
            <summary>
            得到文件类型
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <param name="fileType">返回带.的后缀名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetType(System.String)">
            <summary>
            得到文件类型
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetPath(System.String,System.String@)">
            <summary>
            得到文件路径
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <param name="filePath">返回文件路径</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetPath(System.String)">
            <summary>
            得到文件路径
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <returns>文件路径</returns>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetNameAndType(System.String,System.String@,System.String@)">
            <summary>
            得到文件名和类型
            </summary>
            <param name="fileAllName">带文件名和后缀的全路径</param>
            <param name="fileName">返回不带反缀名的文件名</param>
            <param name="fileType">返回带.的后缀名</param>
        </member>
        <member name="M:RDIFramework.Utilities.FileHelper.GetDirectoryName(System.String)">
            <summary>
            得到目录名
            </summary>
            <param name="directory">目录总路径</param>
            <returns>返回目录名</returns>
        </member>
        <member name="T:RDIFramework.Utilities.OnGetPostReady">
            <summary>
            准备POST
            </summary>
            <param name="httpRequest"></param>
        </member>
        <member name="T:RDIFramework.Utilities.OnGetResponseReady">
            <summary>
            准备取回应
            </summary>
            <param name="httpRequest"></param>
        </member>
        <member name="T:RDIFramework.Utilities.HttpWebHelper">
            <summary>
            HttpWebHelper
            
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.#ctor">
            <summary>
            默认构造器
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.#ctor(System.Net.WebProxy)">
            <summary>
            代理参数构造器
            </summary>
            <param name="wp"></param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.#ctor(System.Boolean)">
            <summary>
            需要基本认证的构造器
            </summary>
            <param name="cred"></param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.#ctor(System.Boolean,System.String)">
            <summary>
            基本认证和证书,refer页面
            </summary>
            <param name="cred"></param>
            <param name="certFilepath"></param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            提供批量用户名和密码的构造器
            </summary>
            <param name="uri"></param>
            <param name="method"></param>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            安全询问回调函数,直接同意
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.SetHttpRequestOptions(System.String,System.String,System.Net.CookieCollection,System.String,System.Boolean,System.Net.DecompressionMethods)">
            <summary>
            设置HttpWebRequest对象
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="cc"></param>
            <param name="referUrl"></param>
            <param name="nocache"></param>
            <param name="dm"></param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.ManualResetMember">
            <summary>
            重新设置某些成员
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.SimpleDoPostWrapper(System.String,System.String,System.Text.Encoding,System.Net.CookieCollection,System.String)">
            <summary>
            仅仅发送请求,返回所有的输出文本
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="coding"></param>
            <param name="cc"></param>
            <param name="referUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.GetMemoryStream(System.String,System.String,System.String,System.Text.Encoding,System.Net.CookieCollection,System.String)">
            <summary>
            上送数据,返回输出流
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="method"></param>
            <param name="coding"></param>
            <param name="cc"></param>
            <param name="referUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.DoPostWrapper(System.String,System.String,System.String,System.Text.Encoding,System.Net.CookieCollection,System.String)">
            <summary>
            上送,返回所有的输出文本
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="method"></param>
            <param name="coding"></param>
            <param name="referUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.DoPostWrapper(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Text.Encoding,System.Net.CookieCollection,System.String)">
            <summary>
            上送,返回所有的输出文本,参数是字典
            </summary>
            <param name="url"></param>
            <param name="dicArguments"></param>
            <param name="method"></param>
            <param name="coding"></param>
            <param name="referUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.DownloadStream(System.String,System.String)">
            <summary>
            下载验证码,只返回内存流,调用函数要负责关闭该Stream
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.BuildRequestArguments(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            从字典中生成上传参数.提供编码定制支持
            </summary>
            <param name="dicArguments"></param>
            <param name="coding"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.BuildRequestArguments(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            从字典中生成上传的默认参数,不提供编码定制支持
            </summary>
            <param name="dicArguments"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.GetCookieValue(System.String,System.String)">
            <summary>
            查询cookie中的某个项的值
            </summary>
            <param name="key"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.SetCookieContainer(System.Net.CookieContainer)">
            <summary>
            设置cookies容器
            </summary>
            <param name="cc"></param>
        </member>
        <member name="M:RDIFramework.Utilities.HttpWebHelper.AbortHttpRequest">
            <summary>
            放棄請求
            </summary>
        </member>
        <member name="P:RDIFramework.Utilities.HttpWebHelper.CurrentUrl">
            <summary>
            当前自动转向后的url
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.IniFileHelper">
            <summary>
            操作INI文件公共类
            
            
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.#ctor(System.String)">
            <summary>
            IniFile的构造函数
            </summary>
            <param name="fileName">ini文件的路径和名称</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.LoadValues">
            <summary>
            装载Ini文件的内容
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.AddSection(System.String)">
            <summary>
            添加一个ini文件的Section
            </summary>
            <param name="item">section的名字</param>
            <returns>添加的section</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.SetStrings(System.IO.StreamReader)">
            <summary>
            将ini文件的内容读取到内存当中
            </summary>
            <param name="sr">读取文件的流</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.UpdateFile">
            <summary>
            将内容写回到Ini文件当中
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.ReadSections">
            <summary>
            读取Ini文件所有的section
            </summary>
            <returns>以ArrayList形式返回以字符串表示的section</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.ReadKeys(System.String)">
            <summary>
            读取Ini文件的一个section中的所有key
            </summary>
            <param name="sectionName">要读取的section</param>
            <returns>以ArrayList形式返回以字符串表示的kry</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.SectionExists(System.String)">
            <summary>
            判断一个section是否存在
            </summary>
            <param name="sectionName">要检查的section的名字</param>
            <returns>如果section存在,则返回true,否则返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.KeyExists(System.String,System.String)">
            <summary>
            判断一个key在一个section中是否存在
            </summary>
            <param name="sectionName">所指定的section</param>
            <param name="keyName">所要检查的key的名字</param>
            <returns>如果此key在这个section中存在,则返回true,否则返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.EraseSection(System.String)">
            <summary>
            删除一个section
            </summary>
            <param name="sectionName">所要删除的section的名字</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.DeleteKey(System.String,System.String)">
             <summary>
            在一个sectionk中删除一个key
             </summary>
             <param name="sectionName">所指定的section</param>
             <param name="keyName">所要删除的key的名字</param>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.ReadString(System.String,System.String,System.String)">
            <summary>
            读取键的值. 
            </summary>
            <param name="sectionName">节点名</param>
            <param name="keyName">键名</param>
            <param name="defaultValue">默认的值,这个值是用户给的.</param>
            <returns>在ini文件中没有找到节点名或键值则返回 默认值,找到了则返回ini文件中的值.</returns>
        </member>
        <member name="M:RDIFramework.Utilities.IniFileHelper.WriteString(System.String,System.String,System.String)">
            <summary>
            添加sectionName 和键值
            </summary>
            <param name="sectionName">ini文件的节点</param>
            <param name="keyName">ini文件的键名</param>
            <param name="stringValue">ini文件的值</param>
        </member>
        <member name="T:RDIFramework.Utilities.LogHelper">
            <summary>
            写日志文件公共类
            
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.LogHelper.WriteLog(System.Exception)">
            <summary>
            在本地写入错误日志
            </summary>
            <param name="exception"></param> 错误信息
        </member>
        <member name="T:RDIFramework.Utilities.MachineInfoHelper">
             <summary>
             MachineInfo
             获取机器信息公共类（MAC地址、IP地址等）
             
             修改记录
            
            		2011.07.15 版本：1.0 EricHu	主键创建。
            		
             版本：1.0
             
             <author>
            		<name>EricHu</name>
            		<date>2011.07.15</date>
             </author>
             </summary>
        </member>
        <member name="M:RDIFramework.Utilities.MachineInfoHelper.GetIPAddress">
            <summary>
            获取当前使用的IPV4地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.MachineInfoHelper.GetIPAddressList">
            <summary>
            获取IPv4地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.MachineInfoHelper.GetWirelessIPAddressList">
            <summary>
            GetWirelessIPList 获得无线网络接口的IpV4 地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.MachineInfoHelper.GetMacAddress">
            <summary>
            获取MAC地址
            </summary>
            <returns>地址</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MachineInfoHelper.GetMacAddressList">
            <summary>
            获取MAC地址列表，注意优先级高的放在了后面
            </summary>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.MachineInfoHelper.GetWirelessMacAddressList">
            <summary>
            GetWirelessMacList 获得无线网络接口的MAC地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.MathHelper">
            <summary>
            数字通用操作类
            
            修改纪录
                2008-07-01 EricHu 数字通用操作类
                
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.MathHelper.IsDecimal(System.String)">
            <summary>
            检测是否浮点型数据
            </summary>
            <param name="s">待检查数据</param>
            <returns>True:是浮点型，False:不是浮点型</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MathHelper.IsInteger(System.String)">
            <summary>
            检测是否整数型数据
            </summary>
            <param name="Num">待检查数据</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.MathHelper.ToInteger(System.String)">
            <summary>
            将输入的字符串转换成整数型数据
            </summary>
            <param name="strValue">待转换数据</param>
            <returns>成功，返回整数型数据；失败，返回null</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MathHelper.ToDecimal(System.String)">
            <summary>
            将输入的字符串转换成浮点型数据
            </summary>
            <param name="strValue">待转换数据</param>
            <returns>成功，返回浮点型数据；失败，返回null</returns>
        </member>
        <member name="M:RDIFramework.Utilities.MathHelper.IsInteger(System.String,System.Boolean)">
            <summary>
            是否全是正整数
            </summary>
            <param name="Input"></param>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.MessageCategory">
            <summary>
            消息功能分类
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.MessageFunction">
            <summary>
            消息功能分类
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.MessageStateCode">
            <summary>
            状态枚举类型
            </summary>
        </member>
        <!-- 对于成员“T:RDIFramework.Utilities.OperationCode”忽略有格式错误的 XML 注释 -->
        <member name="T:RDIFramework.Utilities.OrganizeCategory">
             <summary>
             OrganizeCategory
             组织机构类别。
             
             修改纪录
            
                 2008.03.16 版本：1.0 EricHu 结构优化整理。
            		
             版本：1.1
             
             <author>
            		<name>EricHu</name>
            		<date>2008.03.16</date>
             </author> 
             </summary>
        </member>
        <member name="T:RDIFramework.Utilities.PermissionScope">
             <summary>
             PermissionScope
             常用权限范围。
             
             修改纪录
            
                 2009.09.01 版本：1.0 EricHu 创建。
            		
             版本：1.1
             
             <author>
            		<name>EricHu</name>
            		<date>2009.09.01</date>
             </author> 
             </summary>
        </member>
        <member name="T:RDIFramework.Utilities.RMBHelper">
            <summary>
            人民币通用操作类
            
            修改纪录
                2008-07-25 EricHu 创建人民币通用操作类
                
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.RMBHelper.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.RMBHelper.CmycurD(System.String)">
            <summary> 
            转换人民币大小金额  (一个重载，将字符串先转换成数字在调用CmycurD)
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="T:RDIFramework.Utilities.SecretHelper">
            <summary>
            加解密公共类
            
            <author>
            	<name>EricHu</name>
            	<date>2011.07.15</date>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.SecretHelper.CheckRegister">
            <summary>
            检查注册码是否正确
            </summary>
            <returns>是否进行了注册</returns>
        </member>
        <member name="M:RDIFramework.Utilities.SecretHelper.AESEncrypt(System.String)">
            <summary>
            256位AES加密
            </summary>
            <param name="toEncrypt"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.SecretHelper.AESDecrypt(System.String)">
            <summary>
            256位AES解密
            </summary>
            <param name="toDecrypt"></param>
            <returns></returns>
        </member>
        <member name="T:RDIFramework.Utilities.StatusCode">
            <summary>
            StateCode
            程序运行状态。
            
            修改纪录
            
            	2007.12.09 版本：1.1 EricHu 重新命名为 StatusCode。
            	2007.12.04 版本：1.0 EricHu 重新调整主键的规范化。
            	
            版本：1.0
            
            <author>
            	<name>EricHu</name>
            	<date>2007.05.18</date>
            </author> 
            </summary>    
        </member>
        <member name="F:RDIFramework.Utilities.StatusCode.DbError">
            <summary>
            00 数据库连接错误。
            </summary>
        </member>
        <member name="T:RDIFramework.Utilities.StringHelper">
            <summary>
            字符串通用操作类
            
            修改纪录
                2008-08-08 EricHu 创建字符串通用操作类
                
            <author>
                <name>EricHu</name>
                <QQ>80368704</QQ>
                <Email>80368704@qq.com</Email>
            </author>
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.GetSubString(System.String,System.Int32)">
            <summary>
            截取字符串函数
            </summary>
            <param name="Str">所要截取的字符串</param>
            <param name="Num">截取字符串的长度</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            截取字符串函数
            </summary>
            <param name="Str">所要截取的字符串</param>
            <param name="Num">截取字符串的长度</param>
            <param name="Num">截取字符串后省略部分的字符串</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.IsImgString(System.String)">
            <summary>
            验证字符串是否是图片路径
            </summary>
            <param name="Input">待检测的字符串</param>
            <returns>返回true 或 false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.NumChar(System.String)">
            <summary>
            检测含中文字符串实际长度
            </summary>
            <param name="str">待检测的字符串</param>
            <returns>返回正整数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.HasDangerousWord(System.String)">
            <summary>
            判断是否有危险字符
            </summary>
            <param name="word">输入字符串</param>
            <returns>True:存在危险字符;False：无危险字符</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.RemoveFinalChar(System.String)">
            <summary>
            移除最后的字符
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.RemoveFinalComma(System.String)">
            <summary>
            移除最后的逗号
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.RemoveSpaces(System.String)">
            <summary>
            移除字符中的空格
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.IsNullOrEmpty(System.String)">
            <summary>
            判断字符是否NULL或者为空
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.Lost(System.String)">
            <summary>
            去除字符串最后一个','号
            </summary>
            <param name="chr">:要做处理的字符串</param>
            <returns>返回已处理的字符串</returns>
            /// CreateTime:2007-03-26 Code By DengXi
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.GetPYString(System.String)">
            <summary> 
            汉字转拼音缩写 
            
            </summary> 
            <param name="Input">要转换的汉字字符串</param> 
            <returns>拼音缩写</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.GetPYChar(System.String)">
             <summary> 
             取单个字符的拼音声母 
            
             </summary> 
             <param name="c">要转换的单个汉字</param> 
             <returns>拼音声母</returns> 
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.ConvertNumberToChinese(System.String)">
             <summary>
            思路非常简单,且没有任何位数限制! 
            例如: 401,0103,1013 
            读作: 肆佰零壹[亿]零壹佰零叁[万]壹仟零壹拾叁 
            咱们先按每四位一组 从左到右,高位到低位分别"大声朗读"一下: 
            "肆佰零壹" 单位是: "[亿]" 
            "壹佰零叁" 单位是: "[万]" 
            "壹仟零壹拾叁" 单位是 "" (相当于没有单位) 
            很容易发现,每四位: 只有 千位,百位,十位,个位 这四种情况! 
            我们把 [万],[亿] 当作单位就可以了! 
            这就是规律了!简单吧! 
            依据该思路,只用区区不到 50 行代码就可以搞定: 
            只要你能够提供足够多的"单位" 
            任何天文数字都可以正确转换! 
             </summary>
             <param name="num">阿拉伯数字</param>
             <returns>返回格式化好的字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.ConvertNumberToChinese(System.String,System.String[],System.String[],System.String[])">
            <summary>
            数字转中文
            </summary>
            <param name="num">数字</param>
            <param name="cnNum">中文或其它语言的数组（如：one,two,three,four。。。）</param>
            <param name="cnSBQ">十百千数组（原理同上）</param>
            <param name="cnWY">万、亿数组（这样就支持任何语言了。例：萬、億）</param>
            <returns>返回格式化好的字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.DeleteUnVisibleChar(System.String)">
            <summary>
            删除不可见字符
            </summary>
            <param name="sourceString"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.GetLike(System.String,System.String)">
            <summary>
            获取子查询条件，这需要处理多个模糊匹配的字符
            </summary>
            <param name="field">字段</param>
            <param name="search">模糊查询</param>
            <returns>表达式</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.GetEqual(System.String,System.String)">
            <summary>
            获取子查询条件，这里为精确查询
            </summary>
            <param name="field">字段</param>
            <param name="search">精确查询</param>
            <returns>表达式</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.SqlSafe(System.String)">
            <summary>
            检查参数的安全性
            </summary>
            <param name="value">参数</param>
            <returns>安全的参数</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.GetSearchString(System.String,System.Boolean)">
            <summary>
            获取查询字符串
            </summary>
            <param name="search">查询字符</param>
            <param name="allLike">是否所有的匹配都查询，建议传递"%"字符</param>
            <returns>字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.Exists(System.String[],System.String)">
            <summary>
            判断是否包含的方法
            </summary>
            <param name="ids">数组</param>
            <param name="targetString">目标值</param>
            <returns>包含</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.Concat(System.String[][])">
            <summary>
            合并数组
            </summary>
            <param name="ids">数组</param>
            <returns>数组</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.Remove(System.String[],System.String)">
            <summary>
            从目标数组中去除某个值
            </summary>
            <param name="ids">数组</param>
            <param name="id">目标值</param>
            <returns>数组</returns>
        </member>
        <member name="M:RDIFramework.Utilities.StringHelper.RepeatString(System.String,System.Int32)">
            <summary>
            重复字符串
            </summary>
            <param name="targetString">目标字符串</param>
            <param name="repeatCount">重复次数</param>
            <returns>结果字符串</returns>
        </member>
        <member name="M:RDIFramework.Utilities.ValidateUtil.EnableCheckPasswordStrength(System.String)">
            <summary>
            密码强度检查
            </summary>
            <param name="password">密码</param>
            <returns>检查通过</returns>
        </member>
        <member name="M:RDIFramework.Utilities.ValidateUtil.IsBlank(System.String)">
            <summary>是否空</summary>
            <param name="strInput">输入字符串</param>
            <returns>true/false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.ValidateUtil.IsNumeric(System.String)">
            <summary>是否数字</summary>
            <param name="strInput">输入字符串</param>
            <returns>true/false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.ValidateUtil.IsDateTime(System.String)">
            <summary>
            是不是时间类型数据
            </summary>
            <param name="strDate"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.ValidateUtil.IsEmail(System.String)">
            <summary>
            检查邮件是否何法 add by wxg 20090531
            </summary>
            <param name="inputEmail"></param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.VerifyCodeImage.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片（Edit By 51aspx.com）
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.VerifyCodeImage.CreateImageOnPage(System.String,System.Double,System.Web.HttpContext)">
            <summary>
            将创建好的图片输出到页面
            </summary>
            <param name="code">验证码</param>
            <param name="multValue">扭曲度(越大越扭曲)</param>
            <param name="httpContext">上下文</param>
        </member>
        <member name="T:RDIFramework.Utilities.XMLHelper">
            <summary>
            XmlHelper
            </summary>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.GetXmlNodeByXpath(System.String,System.String)">
            <summary>
            选择匹配XPath表达式的第一个节点XmlNode.
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名")</param>
            <returns>返回XmlNode</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.GetXmlNodeListByXpath(System.String,System.String)">
            <summary>
            选择匹配XPath表达式的节点列表XmlNodeList.
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名")</param>
            <returns>返回XmlNodeList</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.GetXmlAttribute(System.String,System.String,System.String)">
            <summary>
            选择匹配XPath表达式的第一个节点的匹配xmlAttributeName的属性XmlAttribute.
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlAttributeName">要匹配xmlAttributeName的属性名称</param>
            <returns>返回xmlAttributeName</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.CreateXmlDocument(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建一个XML文档
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="rootNodeName">XML文档根节点名称(须指定一个根节点名称)</param>
            <param name="version">XML文档版本号(必须为:"1.0")</param>
            <param name="encoding">XML文档编码方式</param>
            <param name="standalone">该值必须是"yes"或"no",如果为null,Save方法不在XML声明上写出独立属性</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.CreateXmlNodeByXPath(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            依据匹配XPath表达式的第一个节点来创建它的子节点(如果此节点已存在则追加一个新的同名节点
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlNodeName">要匹配xmlNodeName的节点名称</param>
            <param name="innerText">节点文本值</param>
            <param name="xmlAttributeName">要匹配xmlAttributeName的属性名称</param>
            <param name="value">属性值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.CreateOrUpdateXmlNodeByXPath(System.String,System.String,System.String,System.String)">
            <summary>
            依据匹配XPath表达式的第一个节点来创建或更新它的子节点(如果节点存在则更新,不存在则创建)
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlNodeName">要匹配xmlNodeName的节点名称</param>
            <param name="innerText">节点文本值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.CreateOrUpdateXmlAttributeByXPath(System.String,System.String,System.String,System.String)">
            <summary>
            依据匹配XPath表达式的第一个节点来创建或更新它的属性(如果属性存在则更新,不存在则创建)
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlAttributeName">要匹配xmlAttributeName的属性名称</param>
            <param name="value">属性值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.DeleteXmlNodeByXPath(System.String,System.String)">
            <summary>
            删除匹配XPath表达式的第一个节点(节点中的子元素同时会被删除)
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.DeleteXmlAttributeByXPath(System.String,System.String,System.String)">
            <summary>
            删除匹配XPath表达式的第一个节点中的匹配参数xmlAttributeName的属性
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlAttributeName">要删除的xmlAttributeName的属性名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.DeleteAllXmlAttributeByXPath(System.String,System.String)">
            <summary>
            删除匹配XPath表达式的第一个节点中的所有属性
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.Read(System.String,System.String,System.String)">
            <summary>
             读取数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            <returns>string</returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.Update(System.String,System.String,System.String,System.String)">
            <summary>
             修改数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:RDIFramework.Utilities.XMLHelper.Delete(System.String,System.String,System.String)">
            <summary>
             删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
    </members>
</doc>
