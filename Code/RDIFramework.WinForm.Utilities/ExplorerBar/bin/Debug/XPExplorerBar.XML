<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XPExplorerBar</name>
    </assembly>
    <members>
        <member name="T:XPExplorerBar.ExplorerBarInfo">
            <summary>
            A class that contains system defined settings for an XPExplorerBar
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.taskPane">
            <summary>
            System defined settings for a TaskPane
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.taskItem">
            <summary>
            System defined settings for a TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.expando">
            <summary>
            System defined settings for an Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.header">
            <summary>
            System defined settings for an Expando's header
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.officialTheme">
            <summary>
            Specifies whether the ExplorerBarInfo represents an 
            official Windows XP theme
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.classicTheme">
            <summary>
            Specifies whether the ExplorerBarInfo represents the 
            Windows XP "classic" theme
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.shellStylePath">
            <summary>
            A string that contains the full path to the ShellStyle.dll 
            that the ExplorerBarInfo was loaded from
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.#ctor">
            <summary>
            Initializes a new instance of the ExplorerBarInfo class with 
            default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.SetUnthemedArrowImages">
            <summary>
            Sets the arrow images for use when theming is not supported
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.UseClassicTheme">
            <summary>
            Force use of default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.Dispose">
            <summary>
            Releases all resources used by the ExplorerBarInfo
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.SetOfficialTheme(System.Boolean)">
            <summary>
            Sets whether the ExplorerBarInfo contains settings for 
            an official Windows XP Visual Style
            </summary>
            <param name="officialTheme">true if the ExplorerBarInfo 
            contains settings for an official Windows XP Visual Style, 
            otherwise false</param>
        </member>
        <member name="P:XPExplorerBar.ExplorerBarInfo.TaskPane">
            <summary>
            Gets the ExplorerPane settings
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExplorerBarInfo.TaskItem">
            <summary>
            Gets the TaskLink settings
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExplorerBarInfo.Expando">
            <summary>
            Gets the Group settings
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExplorerBarInfo.Header">
            <summary>
            Gets the Header settings
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExplorerBarInfo.OfficialTheme">
            <summary>
            Gets whether the ExplorerBarInfo contains settings for 
            an official Windows XP Visual Style
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExplorerBarInfo.ClassicTheme">
            <summary>
            Gets whether the ExplorerBarInfo contains settings for 
            the Windows XP "classic" Visual Style
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExplorerBarInfo.ShellStylePath">
            <summary>
            Gets or sets a string that specifies the full path to the 
            ShellStyle.dll that the ExplorerBarInfo was loaded from
            </summary>
        </member>
        <member name="T:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate">
            <summary>
            A class that is serialized instead of an ExplorerBarInfo (as 
            ExplorerBarInfos contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.TaskPaneInfoSurrogate">
            <summary>
            This member is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.TaskItemInfoSurrogate">
            <summary>
            This member is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.ExpandoInfoSurrogate">
            <summary>
            This member is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.HeaderInfoSurrogate">
            <summary>
            This member is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.#ctor">
            <summary>
            Initializes a new instance of the ExplorerBarInfoSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.Load(XPExplorerBar.ExplorerBarInfo)">
            <summary>
            Populates the ExplorerBarInfoSurrogate with data that is to be 
            serialized from the specified ExplorerBarInfo
            </summary>
            <param name="explorerBarInfo">The ExplorerBarInfo that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.Save">
            <summary>
            Returns an ExplorerBarInfo that contains the deserialized ExplorerBarInfoSurrogate data
            </summary>
            <returns>An ExplorerBarInfo that contains the deserialized ExplorerBarInfoSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the ExplorerBarInfoSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.ExplorerBarInfo.ExplorerBarInfoSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExplorerBarInfoSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the ExplorerBarInfoSurrogate</param>
            <param name="context">The source from which the ExplorerBarInfoSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.TaskPaneInfo">
            <summary>
            A class that contains system defined settings for TaskPanes
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.gradientStartColor">
            <summary>
            The starting Color for the TaskPane's background gradient
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.gradientEndColor">
            <summary>
            The ending Color for the TaskPane's background gradient
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.direction">
            <summary>
            The direction of the TaskPane's gradient background
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.padding">
            <summary>
            The amount of space between the Border and Expandos along 
            each edge of the TaskPane
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.backImage">
            <summary>
            The Image that is used as the TaskPane's background
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.stretchMode">
            <summary>
            Specified how the TaskPane's background Image is drawn
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.watermark">
            <summary>
            The Image that is used as a watermark
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.watermarkAlignment">
            <summary>
            The alignment of the Image used as a watermark
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.owner">
            <summary>
            The TaskPane that owns the TaskPaneInfo
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.#ctor">
            <summary>
            Initializes a new instance of the TaskPaneInfo class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.SetDefaultValues">
            <summary>
            Forces the use of default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.SetDefaultEmptyValues">
            <summary>
            Forces the use of default empty values
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.Dispose">
            <summary>
            Releases all resources used by the TaskPaneInfo
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.ShouldSerializeGradientStartColor">
            <summary>
            Specifies whether the GradientStartColor property should be 
            serialized at design time
            </summary>
            <returns>true if the GradientStartColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.ShouldSerializeGradientEndColor">
            <summary>
            Specifies whether the GradientEndColor property should be 
            serialized at design time
            </summary>
            <returns>true if the GradientEndColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.ShouldSerializePadding">
            <summary>
            Specifies whether the Padding property should be 
            serialized at design time
            </summary>
            <returns>true if the Padding property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.GradientStartColor">
            <summary>
            Gets or sets the TaskPane's first gradient background color
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.GradientEndColor">
            <summary>
            Gets or sets the TaskPane's second gradient background color
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.GradientDirection">
            <summary>
            Gets or sets the direction of the TaskPane's gradient
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.BackImage">
            <summary>
            Gets or sets the Image that is used as the TaskPane's background
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.StretchMode">
            <summary>
            Gets or sets how the TaskPane's background Image is drawn
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.Watermark">
            <summary>
            Gets or sets the Image that is used as the TaskPane's watermark
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.WatermarkAlignment">
            <summary>
            Gets or sets the alignment of the Image that is used as the 
            TaskPane's watermark
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.Padding">
            <summary>
            Gets or sets the TaskPane's padding between the border and any items
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPaneInfo.TaskPane">
            <summary>
            Gets or sets the TaskPane the TaskPaneInfo belongs to
            </summary>
        </member>
        <member name="T:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate">
            <summary>
            A class that is serialized instead of a TaskPaneInfo (as 
            TaskPaneInfos contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.GradientStartColor">
            <summary>
            See TaskPaneInfo.GradientStartColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.GradientEndColor">
            <summary>
            See TaskPaneInfo.GradientEndColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.GradientDirection">
            <summary>
            See TaskPaneInfo.GradientDirection.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.Padding">
            <summary>
            See TaskPaneInfo.Padding.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.BackImage">
            <summary>
            See TaskPaneInfo.BackImage.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.StretchMode">
            <summary>
            See TaskPaneInfo.StretchMode.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.Watermark">
            <summary>
            See TaskPaneInfo.Watermark.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.WatermarkAlignment">
            <summary>
            See TaskPaneInfo.WatermarkAlignment.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.#ctor">
            <summary>
            Initializes a new instance of the TaskPaneInfoSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.Load(XPExplorerBar.TaskPaneInfo)">
            <summary>
            Populates the TaskPaneInfoSurrogate with data that is to be 
            serialized from the specified TaskPaneInfo
            </summary>
            <param name="taskPaneInfo">The TaskPaneInfo that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.Save">
            <summary>
            Returns a TaskPaneInfo that contains the deserialized TaskPaneInfoSurrogate data
            </summary>
            <returns>A TaskPaneInfo that contains the deserialized TaskPaneInfoSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the TaskPaneInfoSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfo.TaskPaneInfoSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TaskPaneInfoSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the TaskPaneInfoSurrogate</param>
            <param name="context">The source from which the TaskPaneInfoSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.TaskPaneInfoConverter">
            <summary>
            A custom TypeConverter used to help convert TaskPaneInfo from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="T:XPExplorerBar.TaskItemInfo">
            <summary>
            A class that contains system defined settings for TaskItems
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.padding">
            <summary>
            The amount of space around the text along each side of 
            the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.margin">
            <summary>
            The amount of space between individual TaskItems 
            along each side of the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.linkNormal">
            <summary>
            The Color of the text displayed in the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.linkHot">
            <summary>
            The Color of the text displayed in the TaskItem when 
            highlighted
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.fontDecoration">
            <summary>
            The decoration to be used on the text while in a highlighted state
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.owner">
            <summary>
            The TaskItem that owns this TaskItemInfo
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.#ctor">
            <summary>
            Initializes a new instance of the TaskLinkInfo class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.SetDefaultValues">
            <summary>
            Forces the use of default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.SetDefaultEmptyValues">
            <summary>
            Forces the use of default empty values
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.ShouldSerializeMargin">
            <summary>
            Specifies whether the Margin property should be 
            serialized at design time
            </summary>
            <returns>true if the Margin property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.ShouldSerializePadding">
            <summary>
            Specifies whether the Padding property should be 
            serialized at design time
            </summary>
            <returns>true if the Padding property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.ShouldSerializeLinkColor">
            <summary>
            Specifies whether the LinkColor property should be 
            serialized at design time
            </summary>
            <returns>true if the LinkColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.ShouldSerializeHotLinkColor">
            <summary>
            Specifies whether the HotLinkColor property should be 
            serialized at design time
            </summary>
            <returns>true if the HotLinkColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="P:XPExplorerBar.TaskItemInfo.Margin">
            <summary>
            Gets or sets the amount of space between individual TaskItems 
            along each side of the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItemInfo.Padding">
            <summary>
            Gets or sets the amount of space around the text along each 
            side of the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItemInfo.LinkColor">
            <summary>
            Gets or sets the foreground color of a normal link
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItemInfo.HotLinkColor">
            <summary>
            Gets or sets the foreground color of a highlighted link
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItemInfo.FontDecoration">
            <summary>
            Gets or sets the font decoration of a link
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItemInfo.TaskItem">
            <summary>
            Gets or sets the TaskItem the TaskItemInfo belongs to
            </summary>
        </member>
        <member name="T:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate">
            <summary>
            A class that is serialized instead of a TaskItemInfo (as 
            TaskItemInfos contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.Padding">
            <summary>
            See TaskItemInfo.Padding.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.Margin">
            <summary>
            See TaskItemInfo.Margin.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.LinkNormal">
            <summary>
            See TaskItemInfo.LinkColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.LinkHot">
            <summary>
            See TaskItemInfo.HotLinkColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.FontDecoration">
            <summary>
            See TaskItemInfo.FontDecoration.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.#ctor">
            <summary>
            Initializes a new instance of the TaskItemInfoSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.Load(XPExplorerBar.TaskItemInfo)">
            <summary>
            Populates the TaskItemInfoSurrogate with data that is to be 
            serialized from the specified TaskItemInfo
            </summary>
            <param name="taskItemInfo">The TaskItemInfo that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.Save">
            <summary>
            Returns a TaskItemInfo that contains the deserialized TaskItemInfoSurrogate data
            </summary>
            <returns>A TaskItemInfo that contains the deserialized TaskItemInfoSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the TaskItemInfoSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfo.TaskItemInfoSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TaskItemInfoSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the TaskItemInfoSurrogate</param>
            <param name="context">The source from which the TaskItemInfoSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.TaskItemInfoConverter">
            <summary>
            A custom TypeConverter used to help convert TaskItemInfo from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="T:XPExplorerBar.ExpandoInfo">
            <summary>
            A class that contains system defined settings for Expandos
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.specialBackColor">
            <summary>
            The background Color of an Expando that is a special group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.normalBackColor">
            <summary>
            The background Color of an Expando that is a normal group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.specialBorder">
            <summary>
            The width of the Border along each edge of an Expando that 
            is a special group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.normalBorder">
            <summary>
            The width of the Border along each edge of an Expando that 
            is a normal group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.specialBorderColor">
            <summary>
            The Color of the Border an Expando that is a special group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.normalBorderColor">
            <summary>
            The Color of the Border an Expando that is a normal group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.specialPadding">
            <summary>
            The amount of space between the Border and items along 
            each edge of an Expando that is a special group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.normalPadding">
            <summary>
            The amount of space between the Border and items along 
            each edge of an Expando that is a normal group
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.watermarkAlignment">
            <summary>
            The alignment of the Image that is to be used as a watermark
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.specialBackImage">
            <summary>
            The background image used for the content area of a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.normalBackImage">
            <summary>
            The background image used for the content area of a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.owner">
            <summary>
            The Expando that the ExpandoInfo belongs to
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.#ctor">
            <summary>
            Initializes a new instance of the ExpandoInfo class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.SetDefaultValues">
            <summary>
            Forces the use of default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.SetDefaultEmptyValues">
            <summary>
            Forces the use of default empty values
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.Dispose">
            <summary>
            Releases all resources used by the ExpandoInfo
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeSpecialBackColor">
            <summary>
            Specifies whether the SpecialBackColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialBackColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeNormalBackColor">
            <summary>
            Specifies whether the NormalBackColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalBackColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeSpecialBorder">
            <summary>
            Specifies whether the SpecialBorder property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialBorder property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeNormalBorder">
            <summary>
            Specifies whether the NormalBorder property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalBorder property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeSpecialBorderColor">
            <summary>
            Specifies whether the SpecialBorderColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialBorderColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeNormalBorderColor">
            <summary>
            Specifies whether the NormalBorderColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalBorderColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeSpecialPadding">
            <summary>
            Specifies whether the SpecialPadding property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialPadding property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ShouldSerializeNormalPadding">
            <summary>
            Specifies whether the NormalPadding property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalPadding property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.SpecialBackColor">
            <summary>
            Gets or sets the background color of a special expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.NormalBackColor">
            <summary>
            Gets or sets the background color of a normal expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.WatermarkAlignment">
            <summary>
            Gets or sets the alignment for the expando's background image
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.SpecialBackImage">
            <summary>
            Gets or sets a special expando's background image
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.NormalBackImage">
            <summary>
            Gets or sets a normal expando's background image
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.SpecialBorder">
            <summary>
            Gets or sets the border for a special expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.NormalBorder">
            <summary>
            Gets or sets the border for a normal expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.SpecialBorderColor">
            <summary>
            Gets or sets the border color for a special expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.NormalBorderColor">
            <summary>
            Gets or sets the border color for a normal expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.SpecialPadding">
            <summary>
            Gets or sets the padding value for a special expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.NormalPadding">
            <summary>
            Gets or sets the padding value for a normal expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoInfo.Expando">
            <summary>
            Gets or sets the Expando that the ExpandoInfo belongs to
            </summary>
        </member>
        <member name="T:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate">
            <summary>
            A class that is serialized instead of an ExpandoInfo (as 
            ExpandoInfos contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.SpecialBackColor">
            <summary>
            See ExpandoInfo.SpecialBackColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.NormalBackColor">
            <summary>
            See ExpandoInfo.NormalBackColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.SpecialBorder">
            <summary>
            See ExpandoInfo.SpecialBorder.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.NormalBorder">
            <summary>
            See ExpandoInfo.NormalBorder.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.SpecialBorderColor">
            <summary>
            See ExpandoInfo.SpecialBorderColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.NormalBorderColor">
            <summary>
            See ExpandoInfo.NormalBorderColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.SpecialPadding">
            <summary>
            See ExpandoInfo.SpecialPadding.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.NormalPadding">
            <summary>
            See ExpandoInfo.NormalPadding.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.SpecialBackImage">
            <summary>
            See ExpandoInfo.SpecialBackImage.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.NormalBackImage">
            <summary>
            See ExpandoInfo.NormalBackImage.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.WatermarkAlignment">
            <summary>
            See ExpandoInfo.WatermarkAlignment.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.#ctor">
            <summary>
            Initializes a new instance of the ExpandoInfoSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.Load(XPExplorerBar.ExpandoInfo)">
            <summary>
            Populates the ExpandoInfoSurrogate with data that is to be 
            serialized from the specified ExpandoInfo
            </summary>
            <param name="expandoInfo">The ExpandoInfo that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.Save">
            <summary>
            Returns an ExpandoInfo that contains the deserialized ExpandoInfoSurrogate data
            </summary>
            <returns>An ExpandoInfo that contains the deserialized ExpandoInfoSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the ExpandoInfoSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfo.ExpandoInfoSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExpandoInfoSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the ExpandoInfoSurrogate</param>
            <param name="context">The source from which the ExpandoInfoSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.ExpandoInfoConverter">
            <summary>
            A custom TypeConverter used to help convert ExpandoInfos from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoInfoConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified 
            by the value parameter, using the specified context and attributes
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="value">An Object that specifies the type of array for 
            which to get properties</param>
            <param name="attributes">An array of type Attribute that is used as 
            a filter</param>
            <returns>A PropertyDescriptorCollection with the properties that are 
            exposed for this data type, or a null reference if there are no 
            properties</returns>
        </member>
        <member name="T:XPExplorerBar.HeaderInfo">
            <summary>
            A class that contains system defined settings for an Expando's 
            header section
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.titleFont">
            <summary>
            The Font used to draw the text on the title bar
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.margin">
            <summary>
            The Margin around the header
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialBackImage">
            <summary>
            The Image used as the title bar's background for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalBackImage">
            <summary>
            The Image used as the title bar's background for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.backImageWidth">
            <summary>
             The width of the Image used as the title bar's background
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.backImageHeight">
            <summary>
            The height of the Image used as the title bar's background
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialTitle">
            <summary>
            The Color of the text on the title bar for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalTitle">
            <summary>
            The Color of the text on the title bar for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialTitleHot">
            <summary>
            The Color of the text on the title bar for a special Expando 
            when highlighted
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalTitleHot">
            <summary>
            The Color of the text on the title bar for a normal Expando 
            when highlighted
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialAlignment">
            <summary>
            The alignment of the text on the title bar for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalAlignment">
            <summary>
            The alignment of the text on the title bar for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialPadding">
            <summary>
            The amount of space between the border and items along 
            each edge of the title bar for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalPadding">
            <summary>
            The amount of space between the border and items along 
            each edge of the title bar for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialBorder">
            <summary>
            The width of the Border along each edge of the title bar 
            for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalBorder">
            <summary>
            The width of the Border along each edge of the title bar 
            for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialBorderColor">
            <summary>
            The Color of the title bar's Border for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalBorderColor">
            <summary>
            The Color of the title bar's Border for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialBackColor">
            <summary>
            The Color of the title bar's background for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalBackColor">
            <summary>
            The Color of the title bar's background for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialArrowUp">
            <summary>
            The Image that is used as a collapse arrow on the title bar 
            for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialArrowUpHot">
            <summary>
            The Image that is used as a collapse arrow on the title bar 
            for a special Expando when highlighted
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialArrowDown">
            <summary>
            The Image that is used as an expand arrow on the title bar 
            for a special Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialArrowDownHot">
            <summary>
            The Image that is used as an expand arrow on the title bar 
            for a special Expando when highlighted
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalArrowUp">
            <summary>
            The Image that is used as a collapse arrow on the title bar 
            for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalArrowUpHot">
            <summary>
            The Image that is used as a collapse arrow on the title bar 
            for a normal Expando when highlighted
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalArrowDown">
            <summary>
            The Image that is used as an expand arrow on the title bar 
            for a normal Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalArrowDownHot">
            <summary>
            The Image that is used as an expand arrow on the title bar 
            for a normal Expando when highlighted
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.useTitleGradient">
            <summary>
            Specifies whether the title bar should use a gradient fill
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialGradientStartColor">
            <summary>
            The start Color of a title bar's gradient fill for a special 
            Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.specialGradientEndColor">
            <summary>
            The end Color of a title bar's gradient fill for a special 
            Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalGradientStartColor">
            <summary>
            The start Color of a title bar's gradient fill for a normal 
            Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.normalGradientEndColor">
            <summary>
            The end Color of a title bar's gradient fill for a normal 
            Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.gradientOffset">
            <summary>
            How far along the title bar the gradient starts
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.titleRadius">
            <summary>
            The radius of the corners on the title bar
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.owner">
            <summary>
            The Expando that the HeaderInfo belongs to
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.rightToLeft">
            <summary>
            
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.#ctor">
            <summary>
            Initializes a new instance of the HeaderInfo class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.SetDefaultValues">
            <summary>
            Forces the use of default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.SetDefaultEmptyValues">
            <summary>
            Forces the use of default empty values
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.Dispose">
            <summary>
            Releases all resources used by the HeaderInfo
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialBorder">
            <summary>
            Specifies whether the SpecialBorder property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialBorder property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialBorderColor">
            <summary>
            Specifies whether the SpecialBorderColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialBorderColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialBackColor">
            <summary>
            Specifies whether the SpecialBackColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialBackColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalBorder">
            <summary>
            Specifies whether the NormalBorder property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalBorder property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalBorderColor">
            <summary>
            Specifies whether the NormalBorderColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalBorderColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalBackColor">
            <summary>
            Specifies whether the NormalBackColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalBackColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.SetUnthemedArrowImages">
            <summary>
            Sets the arrow images for use when theming is not supported
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialPadding">
            <summary>
            Specifies whether the SpecialPadding property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialPadding property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalPadding">
            <summary>
            Specifies whether the NormalPadding property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalPadding property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialTitleColor">
            <summary>
            Specifies whether the SpecialTitleColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialTitleColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialTitleHotColor">
            <summary>
            Specifies whether the SpecialTitleHotColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialTitleHotColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalTitleColor">
            <summary>
            Specifies whether the NormalTitleColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalTitleColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalTitleHotColor">
            <summary>
            Specifies whether the NormalTitleHotColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalTitleHotColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialGradientStartColor">
            <summary>
            Specifies whether the SpecialGradientStartColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialGradientStartColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeSpecialGradientEndColor">
            <summary>
            Specifies whether the SpecialGradientEndColor property should be 
            serialized at design time
            </summary>
            <returns>true if the SpecialGradientEndColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalGradientStartColor">
            <summary>
            Specifies whether the NormalGradientStartColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalGradientStartColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.ShouldSerializeNormalGradientEndColor">
            <summary>
            Specifies whether the NormalGradientEndColor property should be 
            serialized at design time
            </summary>
            <returns>true if the NormalGradientEndColor property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialBorder">
            <summary>
            Gets or sets the border value for a special header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialBorderColor">
            <summary>
            Gets or sets the border color for a special header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialBackColor">
            <summary>
            Gets or sets the background Color for a special header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalBorder">
            <summary>
            Gets or sets the border value for a normal header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalBorderColor">
            <summary>
            Gets or sets the border color for a normal header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalBackColor">
            <summary>
            Gets or sets the background Color for a normal header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.TitleFont">
            <summary>
            Gets the Font used to render the header's text
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.FontName">
            <summary>
            Gets or sets the name of the font used to render the header's text. 
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.FontSize">
            <summary>
            Gets or sets the size of the font used to render the header's text. 
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.FontWeight">
            <summary>
            Gets or sets the weight of the font used to render the header's text. 
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.FontStyle">
            <summary>
            Gets or sets the style of the Font used to render the header's text. 
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialBackImage">
            <summary>
            Gets or sets the background image for a special header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalBackImage">
            <summary>
            Gets or sets the background image for a normal header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.BackImageWidth">
            <summary>
            Gets or sets the width of the header's background image
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.BackImageHeight">
            <summary>
            Gets or sets the height of the header's background image
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialArrowUp">
            <summary>
            Gets or sets a special header's collapse arrow image in it's normal state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialArrowUpHot">
            <summary>
            Gets or sets a special header's collapse arrow image in it's highlighted state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialArrowDown">
            <summary>
            Gets or sets a special header's expand arrow image in it's normal state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialArrowDownHot">
            <summary>
            Gets or sets a special header's expend arrow image in it's highlighted state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalArrowUp">
            <summary>
            Gets or sets a normal header's collapse arrow image in it's normal state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalArrowUpHot">
            <summary>
            Gets or sets a normal header's collapse arrow image in it's highlighted state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalArrowDown">
            <summary>
            Gets or sets a normal header's expand arrow image in it's normal state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalArrowDownHot">
            <summary>
            Gets or sets a normal header's expand arrow image in it's highlighted state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.Margin">
            <summary>
            Gets or sets the margin around the header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialPadding">
            <summary>
            Gets or sets the padding for a special header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalPadding">
            <summary>
            Gets or sets the padding for a normal header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialTitleColor">
            <summary>
            Gets or sets the color of the text displayed in a special 
            header in it's normal state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialTitleHotColor">
            <summary>
            Gets or sets the color of the text displayed in a special 
            header in it's highlighted state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalTitleColor">
            <summary>
            Gets or sets the color of the text displayed in a normal 
            header in it's normal state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalTitleHotColor">
            <summary>
            Gets or sets the color of the text displayed in a normal 
            header in it's highlighted state
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialAlignment">
            <summary>
            Gets or sets the alignment of the text displayed in a special header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalAlignment">
            <summary>
            Gets or sets the alignment of the text displayed in a normal header
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.TitleGradient">
            <summary>
            Gets or sets whether the header's background should use a gradient fill
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialGradientStartColor">
            <summary>
            Gets or sets the start Color of a header's gradient fill for a special 
            Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.SpecialGradientEndColor">
            <summary>
            Gets or sets the end Color of a header's gradient fill for a special 
            Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalGradientStartColor">
            <summary>
            Gets or sets the start Color of a header's gradient fill for a normal 
            Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.NormalGradientEndColor">
            <summary>
            Gets or sets the end Color of a header's gradient fill for a normal 
            Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.GradientOffset">
            <summary>
            Gets or sets how far along the header the gradient starts
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.TitleRadius">
             <summary>
            Gets or sets the radius of the corners on the header
             </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.Expando">
            <summary>
            Gets or sets the Expando the HeaderInfo belongs to
            </summary>
        </member>
        <member name="P:XPExplorerBar.HeaderInfo.RightToLeft">
            <summary>
            
            </summary>
        </member>
        <member name="T:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate">
            <summary>
            A class that is serialized instead of a HeaderInfo (as 
            HeaderInfos contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.FontName">
            <summary>
            See Font.Name.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.FontSize">
            <summary>
            See Font.Size.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.FontStyle">
            <summary>
            See Font.Style.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.Margin">
            <summary>
            See HeaderInfo.Margin.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialBackImage">
            <summary>
            See HeaderInfo.SpecialBackImage.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalBackImage">
            <summary>
            See HeaderInfo.NormalBackImage.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialTitle">
            <summary>
            See HeaderInfo.SpecialTitle.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalTitle">
            <summary>
            See HeaderInfo.NormalTitle.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialTitleHot">
            <summary>
            See HeaderInfo.SpecialTitleHot.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalTitleHot">
            <summary>
            See HeaderInfo.NormalTitleHot.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialAlignment">
            <summary>
            See HeaderInfo.SpecialAlignment.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalAlignment">
            <summary>
            See HeaderInfo.NormalAlignment.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialPadding">
            <summary>
            See HeaderInfo.SpecialPadding.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalPadding">
            <summary>
            See HeaderInfo.NormalPadding.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialBorder">
            <summary>
            See HeaderInfo.SpecialBorder.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalBorder">
            <summary>
            See HeaderInfo.NormalBorder.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialBorderColor">
            <summary>
            See HeaderInfo.SpecialBorderColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalBorderColor">
            <summary>
            See HeaderInfo.NormalBorderColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialBackColor">
            <summary>
            See HeaderInfo.SpecialBackColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalBackColor">
            <summary>
            See HeaderInfo.NormalBackColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialArrowUp">
            <summary>
            See HeaderInfo.SpecialArrowUp.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialArrowUpHot">
            <summary>
            See HeaderInfo.SpecialArrowUpHot.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialArrowDown">
            <summary>
            See HeaderInfo.SpecialArrowDown.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialArrowDownHot">
            <summary>
            See HeaderInfo.SpecialArrowDownHot.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalArrowUp">
            <summary>
            See HeaderInfo.NormalArrowUp.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalArrowUpHot">
            <summary>
            See HeaderInfo.NormalArrowUpHot.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalArrowDown">
            <summary>
            See HeaderInfo.NormalArrowDown.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalArrowDownHot">
            <summary>
            See HeaderInfo.NormalArrowDownHot.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.TitleGradient">
            <summary>
            See HeaderInfo.TitleGradient.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialGradientStartColor">
            <summary>
            See HeaderInfo.SpecialGradientStartColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.SpecialGradientEndColor">
            <summary>
            See HeaderInfo.SpecialGradientEndColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalGradientStartColor">
            <summary>
            See HeaderInfo.NormalGradientStartColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.NormalGradientEndColor">
            <summary>
            See HeaderInfo.NormalGradientEndColor.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.GradientOffset">
            <summary>
            See HeaderInfo.GradientOffset.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.TitleRadius">
            <summary>
            See HeaderInfo.TitleRadius.  This member is not 
            intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.#ctor">
            <summary>
            Initializes a new instance of the HeaderInfoSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.Load(XPExplorerBar.HeaderInfo)">
            <summary>
            Populates the HeaderInfoSurrogate with data that is to be 
            serialized from the specified HeaderInfo
            </summary>
            <param name="headerInfo">The HeaderInfo that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.Save">
            <summary>
            Returns a HeaderInfo that contains the deserialized HeaderInfoSurrogate data
            </summary>
            <returns>A HeaderInfo that contains the deserialized HeaderInfoSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the HeaderInfoSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.HeaderInfo.HeaderInfoSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the HeaderInfoSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the HeaderInfoSurrogate</param>
            <param name="context">The source from which the HeaderInfoSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.HeaderInfoConverter">
            <summary>
            A custom TypeConverter used to help convert HeaderInfos from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.HeaderInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.HeaderInfoConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified 
            by the value parameter, using the specified context and attributes
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="value">An Object that specifies the type of array for 
            which to get properties</param>
            <param name="attributes">An array of type Attribute that is used as 
            a filter</param>
            <returns>A PropertyDescriptorCollection with the properties that are 
            exposed for this data type, or a null reference if there are no 
            properties</returns>
        </member>
        <member name="T:XPExplorerBar.Border">
            <summary>
            Specifies the width of the border along each edge of an object
            </summary>
        </member>
        <member name="F:XPExplorerBar.Border.Empty">
            <summary>
            Represents a Border structure with its properties 
            left uninitialized
            </summary>
        </member>
        <member name="F:XPExplorerBar.Border.left">
            <summary>
            The width of the left border
            </summary>
        </member>
        <member name="F:XPExplorerBar.Border.right">
            <summary>
            The width of the right border
            </summary>
        </member>
        <member name="F:XPExplorerBar.Border.top">
            <summary>
            The width of the top border
            </summary>
        </member>
        <member name="F:XPExplorerBar.Border.bottom">
            <summary>
            The width of the bottom border
            </summary>
        </member>
        <member name="M:XPExplorerBar.Border.#ctor">
            <summary>
            Initializes a new instance of the Border class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.Border.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Border class
            </summary>
            <param name="left">The width of the left border</param>
            <param name="top">The Height of the top border</param>
            <param name="right">The width of the right border</param>
            <param name="bottom">The Height of the bottom border</param>
        </member>
        <member name="M:XPExplorerBar.Border.Equals(System.Object)">
            <summary>
            Tests whether obj is a Border structure with the same values as 
            this Border structure
            </summary>
            <param name="obj">The Object to test</param>
            <returns>This method returns true if obj is a Border structure 
            and its Left, Top, Right, and Bottom properties are equal to 
            the corresponding properties of this Border structure; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.Border.GetHashCode">
            <summary>
            Returns the hash code for this Border structure
            </summary>
            <returns>An integer that represents the hashcode for this 
            border</returns>
        </member>
        <member name="M:XPExplorerBar.Border.op_Equality(XPExplorerBar.Border,XPExplorerBar.Border)">
            <summary>
            Tests whether two Border structures have equal Left, Top, 
            Right, and Bottom properties
            </summary>
            <param name="left">The Border structure that is to the left 
            of the equality operator</param>
            <param name="right">The Border structure that is to the right 
            of the equality operator</param>
            <returns>This operator returns true if the two Border structures 
            have equal Left, Top, Right, and Bottom properties</returns>
        </member>
        <member name="M:XPExplorerBar.Border.op_Inequality(XPExplorerBar.Border,XPExplorerBar.Border)">
            <summary>
            Tests whether two Border structures differ in their Left, Top, 
            Right, and Bottom properties
            </summary>
            <param name="left">The Border structure that is to the left 
            of the equality operator</param>
            <param name="right">The Border structure that is to the right 
            of the equality operator</param>
            <returns>This operator returns true if any of the Left, Top, Right, 
            and Bottom properties of the two Border structures are unequal; 
            otherwise false</returns>
        </member>
        <member name="P:XPExplorerBar.Border.Left">
            <summary>
            Gets or sets the value of the left border
            </summary>
        </member>
        <member name="P:XPExplorerBar.Border.Right">
            <summary>
            Gets or sets the value of the right border
            </summary>
        </member>
        <member name="P:XPExplorerBar.Border.Top">
            <summary>
            Gets or sets the value of the top border
            </summary>
        </member>
        <member name="P:XPExplorerBar.Border.Bottom">
            <summary>
            Gets or sets the value of the bottom border
            </summary>
        </member>
        <member name="P:XPExplorerBar.Border.IsEmpty">
            <summary>
            Tests whether all numeric properties of this Border have 
            values of zero
            </summary>
        </member>
        <member name="T:XPExplorerBar.BorderConverter">
            <summary>
            A custom TypeConverter used to help convert Borders from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the 
            specified type, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="sourceType">A Type that represents the type you 
            want to convert from</param>
            <returns>true if this converter can perform the conversion; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the 
            specified type, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <param name="destinationType">A Type that represents the type you 
            want to convert to</param>
            <returns>true if this converter can perform the conversion; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <param name="culture">The CultureInfo to use as the current culture</param>
            <param name="value">The Object to convert</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated 
            with, using the specified context, given a set of property values for 
            the object
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="propertyValues">An IDictionary of new property values</param>
            <returns>An Object representing the given IDictionary, or a null 
            reference if the object cannot be created</returns>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to 
            CreateInstance to create a new value, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <returns>true if changing a property on this object requires a call 
            to CreateInstance to create a new value; otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified 
            by the value parameter, using the specified context and attributes
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="value">An Object that specifies the type of array for 
            which to get properties</param>
            <param name="attributes">An array of type Attribute that is used as 
            a filter</param>
            <returns>A PropertyDescriptorCollection with the properties that are 
            exposed for this data type, or a null reference if there are no 
            properties</returns>
        </member>
        <member name="M:XPExplorerBar.BorderConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <returns>true if GetProperties should be called to find the properties of this 
            object; otherwise, false</returns>
        </member>
        <member name="T:XPExplorerBar.Padding">
            <summary>
            Specifies the amount of space between the border and any contained 
            items along each edge of an object
            </summary>
        </member>
        <member name="F:XPExplorerBar.Padding.Empty">
            <summary>
            Represents a Padding structure with its properties 
            left uninitialized
            </summary>
        </member>
        <member name="F:XPExplorerBar.Padding.left">
            <summary>
            The width of the left padding
            </summary>
        </member>
        <member name="F:XPExplorerBar.Padding.right">
            <summary>
            The width of the right padding
            </summary>
        </member>
        <member name="F:XPExplorerBar.Padding.top">
            <summary>
            The width of the top padding
            </summary>
        </member>
        <member name="F:XPExplorerBar.Padding.bottom">
            <summary>
            The width of the bottom padding
            </summary>
        </member>
        <member name="M:XPExplorerBar.Padding.#ctor">
            <summary>
            Initializes a new instance of the Padding class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.Padding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Padding class
            </summary>
            <param name="left">The width of the left padding value</param>
            <param name="top">The height of top padding value</param>
            <param name="right">The width of the right padding value</param>
            <param name="bottom">The height of bottom padding value</param>
        </member>
        <member name="M:XPExplorerBar.Padding.Equals(System.Object)">
            <summary>
            Tests whether obj is a Padding structure with the same values as 
            this Padding structure
            </summary>
            <param name="obj">The Object to test</param>
            <returns>This method returns true if obj is a Padding structure 
            and its Left, Top, Right, and Bottom properties are equal to 
            the corresponding properties of this Padding structure; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.Padding.GetHashCode">
            <summary>
            Returns the hash code for this Padding structure
            </summary>
            <returns>An integer that represents the hashcode for this 
            padding</returns>
        </member>
        <member name="M:XPExplorerBar.Padding.op_Equality(XPExplorerBar.Padding,XPExplorerBar.Padding)">
            <summary>
            Tests whether two Padding structures have equal Left, Top, 
            Right, and Bottom properties
            </summary>
            <param name="left">The Padding structure that is to the left 
            of the equality operator</param>
            <param name="right">The Padding structure that is to the right 
            of the equality operator</param>
            <returns>This operator returns true if the two Padding structures 
            have equal Left, Top, Right, and Bottom properties</returns>
        </member>
        <member name="M:XPExplorerBar.Padding.op_Inequality(XPExplorerBar.Padding,XPExplorerBar.Padding)">
            <summary>
            Tests whether two Padding structures differ in their Left, Top, 
            Right, and Bottom properties
            </summary>
            <param name="left">The Padding structure that is to the left 
            of the equality operator</param>
            <param name="right">The Padding structure that is to the right 
            of the equality operator</param>
            <returns>This operator returns true if any of the Left, Top, Right, 
            and Bottom properties of the two Padding structures are unequal; 
            otherwise false</returns>
        </member>
        <member name="P:XPExplorerBar.Padding.Left">
            <summary>
            Gets or sets the width of the left padding value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Padding.Right">
            <summary>
            Gets or sets the width of the right padding value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Padding.Top">
            <summary>
            Gets or sets the height of the top padding value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Padding.Bottom">
            <summary>
            Gets or sets the height of the bottom padding value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Padding.IsEmpty">
            <summary>
            Tests whether all numeric properties of this Padding have 
            values of zero
            </summary>
        </member>
        <member name="T:XPExplorerBar.PaddingConverter">
            <summary>
            A custom TypeConverter used to help convert Padding objects from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the 
            given type to the type of this converter, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="sourceType">A Type that represents the type you 
            want to convert from</param>
            <returns>true if this converter can perform the conversion; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the 
            specified type, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <param name="destinationType">A Type that represents the type you 
            want to convert to</param>
            <returns>true if this converter can perform the conversion; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <param name="culture">The CultureInfo to use as the current culture</param>
            <param name="value">The Object to convert</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated 
            with, using the specified context, given a set of property values for 
            the object
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="propertyValues">An IDictionary of new property values</param>
            <returns>An Object representing the given IDictionary, or a null 
            reference if the object cannot be created</returns>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to 
            CreateInstance to create a new value, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <returns>true if changing a property on this object requires a call 
            to CreateInstance to create a new value; otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified 
            by the value parameter, using the specified context and attributes
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="value">An Object that specifies the type of array for 
            which to get properties</param>
            <param name="attributes">An array of type Attribute that is used as 
            a filter</param>
            <returns>A PropertyDescriptorCollection with the properties that are 
            exposed for this data type, or a null reference if there are no 
            properties</returns>
        </member>
        <member name="M:XPExplorerBar.PaddingConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <returns>true if GetProperties should be called to find the properties of this 
            object; otherwise, false</returns>
        </member>
        <member name="T:XPExplorerBar.Margin">
            <summary>
            Specifies the amount of space arouund an object along each side
            </summary>
        </member>
        <member name="F:XPExplorerBar.Margin.Empty">
            <summary>
            Represents a Margin structure with its properties 
            left uninitialized
            </summary>
        </member>
        <member name="F:XPExplorerBar.Margin.left">
            <summary>
            The width of the left margin
            </summary>
        </member>
        <member name="F:XPExplorerBar.Margin.right">
            <summary>
            The width of the right margin
            </summary>
        </member>
        <member name="F:XPExplorerBar.Margin.top">
            <summary>
            The width of the top margin
            </summary>
        </member>
        <member name="F:XPExplorerBar.Margin.bottom">
            <summary>
            The width of the bottom margin
            </summary>
        </member>
        <member name="M:XPExplorerBar.Margin.#ctor">
            <summary>
            Initializes a new instance of the Margin class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.Margin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Margin class
            </summary>
            <param name="left">The width of the left margin value</param>
            <param name="top">The height of the top margin value</param>
            <param name="right">The width of the right margin value</param>
            <param name="bottom">The height of the bottom margin value</param>
        </member>
        <member name="M:XPExplorerBar.Margin.Equals(System.Object)">
            <summary>
            Tests whether obj is a Margin structure with the same values as 
            this Border structure
            </summary>
            <param name="obj">The Object to test</param>
            <returns>This method returns true if obj is a Margin structure 
            and its Left, Top, Right, and Bottom properties are equal to 
            the corresponding properties of this Margin structure; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.Margin.GetHashCode">
            <summary>
            Returns the hash code for this Margin structure
            </summary>
            <returns>An integer that represents the hashcode for this 
            margin</returns>
        </member>
        <member name="M:XPExplorerBar.Margin.op_Equality(XPExplorerBar.Margin,XPExplorerBar.Margin)">
            <summary>
            Tests whether two Margin structures have equal Left, Top, 
            Right, and Bottom properties
            </summary>
            <param name="left">The Margin structure that is to the left 
            of the equality operator</param>
            <param name="right">The Margin structure that is to the right 
            of the equality operator</param>
            <returns>This operator returns true if the two Margin structures 
            have equal Left, Top, Right, and Bottom properties</returns>
        </member>
        <member name="M:XPExplorerBar.Margin.op_Inequality(XPExplorerBar.Margin,XPExplorerBar.Margin)">
            <summary>
            Tests whether two Margin structures differ in their Left, Top, 
            Right, and Bottom properties
            </summary>
            <param name="left">The Margin structure that is to the left 
            of the equality operator</param>
            <param name="right">The Margin structure that is to the right 
            of the equality operator</param>
            <returns>This operator returns true if any of the Left, Top, Right, 
            and Bottom properties of the two Margin structures are unequal; 
            otherwise false</returns>
        </member>
        <member name="P:XPExplorerBar.Margin.Left">
            <summary>
            Gets or sets the left margin value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Margin.Right">
            <summary>
            Gets or sets the right margin value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Margin.Top">
            <summary>
            Gets or sets the top margin value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Margin.Bottom">
            <summary>
            Gets or sets the bottom margin value
            </summary>
        </member>
        <member name="P:XPExplorerBar.Margin.IsEmpty">
            <summary>
            Tests whether all numeric properties of this Margin have 
            values of zero
            </summary>
        </member>
        <member name="T:XPExplorerBar.MarginConverter">
            <summary>
            A custom TypeConverter used to help convert Margins from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the 
            given type to the type of this converter, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="sourceType">A Type that represents the type you 
            want to convert from</param>
            <returns>true if this converter can perform the conversion; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the 
            specified type, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <param name="destinationType">A Type that represents the type you 
            want to convert to</param>
            <returns>true if this converter can perform the conversion; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <param name="culture">The CultureInfo to use as the current culture</param>
            <param name="value">The Object to convert</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated 
            with, using the specified context, given a set of property values for 
            the object
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="propertyValues">An IDictionary of new property values</param>
            <returns>An Object representing the given IDictionary, or a null 
            reference if the object cannot be created</returns>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to 
            CreateInstance to create a new value, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <returns>true if changing a property on this object requires a call 
            to CreateInstance to create a new value; otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified 
            by the value parameter, using the specified context and attributes
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format 
            context</param>
            <param name="value">An Object that specifies the type of array for 
            which to get properties</param>
            <param name="attributes">An array of type Attribute that is used as 
            a filter</param>
            <returns>A PropertyDescriptorCollection with the properties that are 
            exposed for this data type, or a null reference if there are no 
            properties</returns>
        </member>
        <member name="M:XPExplorerBar.MarginConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <returns>true if GetProperties should be called to find the properties of this 
            object; otherwise, false</returns>
        </member>
        <member name="T:XPExplorerBar.ImageStretchMode">
            <summary>
            Specifies how images should fill objects
            </summary>
        </member>
        <member name="F:XPExplorerBar.ImageStretchMode.Normal">
            <summary>
            Use default settings
            </summary>
        </member>
        <member name="F:XPExplorerBar.ImageStretchMode.Transparent">
            <summary>
            The image is transparent
            </summary>
        </member>
        <member name="F:XPExplorerBar.ImageStretchMode.Tile">
            <summary>
            The image should be tiled
            </summary>
        </member>
        <member name="F:XPExplorerBar.ImageStretchMode.Horizontal">
            <summary>
            The image should be stretched to fit the objects width 
            </summary>
        </member>
        <member name="F:XPExplorerBar.ImageStretchMode.Stretch">
            <summary>
            The image should be stretched to fill the object
            </summary>
        </member>
        <member name="F:XPExplorerBar.ImageStretchMode.ARGBImage">
            <summary>
            The image is stored in ARGB format
            </summary>
        </member>
        <member name="T:XPExplorerBar.ThemeManager">
            <summary>
            A class that extracts theme settings from Windows XP shellstyle dlls
            </summary>
        </member>
        <member name="F:XPExplorerBar.ThemeManager.hModule">
            <summary>
            pointer to a shellstyle dll
            </summary>
        </member>
        <member name="F:XPExplorerBar.ThemeManager.currentShellStyle">
            <summary>
            cached version of the current shellstyle in use
            </summary>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetSystemExplorerBarSettings">
            <summary>
            Gets the System defined settings for the ExplorerBar according
            to the current System theme
            </summary>
            <returns>An ExplorerBarInfo object that contains the System defined 
            settings for the ExplorerBar according to the current System theme</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetSystemExplorerBarSettings(System.Boolean)">
            <summary>
            Gets the System defined settings for the ExplorerBar according
            to the current System theme
            </summary>
            <param name="useClassicTheme">Specifies whether the current system theme 
            should be ignored and return unthemed settings</param>
            <returns>An ExplorerBarInfo object that contains the System defined 
            settings for the ExplorerBar according to the current System theme</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetSystemExplorerBarSettings(System.String)">
            <summary>
            Gets the System defined settings for the ExplorerBar specified
            by the shellstyle.dll at the specified path
            </summary>
            <param name="stylePath">The path to the shellstyle.dll</param>
            <returns>An ExplorerBarInfo object that contains the settings for 
            the ExplorerBar specified by the shellstyle.dll at the specified path</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.LoadShellStyleDll">
            <summary>
            Loads the ShellStyle.dll into memory as determined by the current
            system theme
            </summary>
            <returns>If the function succeeds, the return value is true. If the 
            function fails, the return value is false</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.LoadShellStyleDll(System.String)">
            <summary>
            Loads the specified ShellStyle.dll into memory
            </summary>
            <returns>If the function succeeds, the return value is true. If the 
            function fails, the return value is false</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.FreeShellStyleDll">
            <summary>
            Removes the ShellStyle.dll from memory.  Assumes that
            LoadShellStyleDll() was successful
            </summary>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetShellStylePath">
            <summary>
            Returns a string that specifies the path to the shellstyle.dll 
            accordingto the current theme
            </summary>
            <returns>a string that specifies the path to the shellstyle.dll 
            accordingto the current theme</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetResourceUIFile">
            <summary>
            Extracts the UIFILE from the currently loaded ShellStyle.dll
            </summary>
            <returns>A string that contains the UIFILE</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetResourceBMP(System.String)">
            <summary>
            Returns a Bitmap from the currently loaded ShellStyle.dll
            </summary>
            <param name="resourceName">The name of the Bitmap to load</param>
            <returns>The Bitmap specified by the resourceName</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetResourcePNG(System.String)">
            <summary>
            Returns a Png Bitmap from the currently loaded ShellStyle.dll
            </summary>
            <param name="resourceName">The name of the Png to load</param>
            <returns>The Bitmap specified by the resourceName</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.GetResourceString(System.Int32)">
            <summary>
            Returns a string from the currently loaded ShellStyle.dll
            </summary>
            <param name="id">The integer identifier of the string to be loaded</param>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.IconToBitmap(System.Drawing.Icon)">
            <summary>
            Converts an Icon to a Bitmap
            </summary>
            <param name="icon">The Icon to be converted</param>
            <returns>A Bitmap that contains the converted Icon</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.ConvertToBitmap(System.Drawing.Icon)">
            <summary>
            Converts an Icon to a Bitmap
            </summary>
            <param name="icon">The Icon to be converted</param>
            <returns>A Bitmap that contains the converted Icon</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.ConvertImageToByteArray(System.Drawing.Image)">
            <summary>
            Converts an Image to a byte array
            </summary>
            <param name="image">The image to be converted</param>
            <returns>A byte array that contains the converted image</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.ConvertByteArrayToImage(System.Byte[])">
            <summary>
            Converts a byte array to an Image
            </summary>
            <param name="bytes">The array of bytes to be converted</param>
            <returns>An Image that represents the byte array</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.ConvertColorToString(System.Drawing.Color)">
            <summary>
            Converts a Color to a string representation
            </summary>
            <param name="color">The Color to be converted</param>
            <returns>A string that represents the specified color</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.ConvertStringToColor(System.String)">
            <summary>
            Converts a string to a color
            </summary>
            <param name="col">The string to be converted</param>
            <returns>The converted Color</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.ConvertObjectToByteArray(System.Object)">
            <summary>
            Converts an object to a byte array
            </summary>
            <param name="obj">The object to be converted</param>
            <returns>A byte array that contains the converted object</returns>
        </member>
        <member name="M:XPExplorerBar.ThemeManager.ConvertByteArrayToObject(System.Byte[])">
            <summary>
            Converts a byte array to an object
            </summary>
            <param name="bytes">The array of bytes to be converted</param>
            <returns>An object that represents the byte array</returns>
        </member>
        <member name="T:XPExplorerBar.UxTheme">
            <summary>
            A class that wraps Windows XPs UxTheme.dll
            </summary>
        </member>
        <member name="M:XPExplorerBar.UxTheme.#ctor">
            <summary>
            Private constructor
            </summary>
        </member>
        <member name="M:XPExplorerBar.UxTheme.OpenThemeData(System.IntPtr,System.String)">
            <summary>
            Opens the theme data for a window and its associated class
            </summary>
            <param name="hwnd">Handle of the window for which theme data 
            is required</param>
            <param name="pszClassList">Pointer to a string that contains 
            a semicolon-separated list of classes</param>
            <returns>OpenThemeData tries to match each class, one at a 
            time, to a class data section in the active theme. If a match 
            is found, an associated HTHEME handle is returned. If no match 
            is found NULL is returned</returns>
        </member>
        <member name="M:XPExplorerBar.UxTheme.CloseThemeData(System.IntPtr)">
            <summary>
            Closes the theme data handle
            </summary>
            <param name="hTheme">Handle to a window's specified theme data. 
            Use OpenThemeData to create an HTHEME</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.UxTheme.DrawThemeBackground(System.IntPtr,System.IntPtr,System.Int32,System.Int32,XPExplorerBar.RECT@,XPExplorerBar.RECT@)">
            <summary>
            Draws the background image defined by the visual style for the 
            specified control part
            </summary>
            <param name="hTheme">Handle to a window's specified theme data. 
            Use OpenThemeData to create an HTHEME</param>
            <param name="hdc">Handle to a device context (HDC) used for 
            drawing the theme-defined background image</param>
            <param name="iPartId">Value of type int that specifies the part 
            to draw</param>
            <param name="iStateId">Value of type int that specifies the state 
            of the part to draw</param>
            <param name="pRect">Pointer to a RECT structure that contains the 
            rectangle, in logical coordinates, in which the background image 
            is drawn</param>
            <param name="pClipRect">Pointer to a RECT structure that contains 
            a clipping rectangle. This parameter may be set to NULL</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.UxTheme.IsThemeActive">
            <summary>
            Tests if a visual style for the current application is active
            </summary>
            <returns>TRUE if a visual style is enabled, and windows with 
            visual styles applied should call OpenThemeData to start using 
            theme drawing services, FALSE otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.UxTheme.IsAppThemed">
            <summary>
            Reports whether the current application's user interface 
            displays using visual styles
            </summary>
            <returns>TRUE if the application has a visual style applied,
            FALSE otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.UxTheme.GetCurrentThemeName(System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves the name of the current visual style, and optionally retrieves the 
            color scheme name and size name
            </summary>
            <param name="pszThemeFileName">Pointer to a string that receives the theme 
            path and file name</param>
            <param name="dwMaxNameChars">Value of type int that contains the maximum 
            number of characters allowed in the theme file name</param>
            <param name="pszColorBuff">Pointer to a string that receives the color scheme 
            name. This parameter may be set to NULL</param>
            <param name="cchMaxColorChars">Value of type int that contains the maximum 
            number of characters allowed in the color scheme name</param>
            <param name="pszSizeBuff">Pointer to a string that receives the size name. 
            This parameter may be set to NULL</param>
            <param name="cchMaxSizeChars">Value of type int that contains the maximum 
            number of characters allowed in the size name</param>
            <returns>Returns S_OK if successful, otherwise an error code</returns>
        </member>
        <member name="M:XPExplorerBar.UxTheme.DrawThemeParentBackground(System.IntPtr,System.IntPtr,XPExplorerBar.RECT@)">
            <summary>
            Draws the part of a parent control that is covered by a 
            partially-transparent or alpha-blended child control
            </summary>
            <param name="hwnd">Handle of the child control</param>
            <param name="hdc">Handle to the child control's device context </param>
            <param name="prc">Pointer to a RECT structure that defines the 
            area to be drawn. The rectangle is in the child window's coordinates. 
            This parameter may be set to NULL</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:XPExplorerBar.UxTheme.AppThemed">
            <summary>
            Reports whether the current application's user interface 
            displays using visual styles
            </summary>
        </member>
        <member name="P:XPExplorerBar.UxTheme.ThemeName">
            <summary>
            Retrieves the name of the current visual style
            </summary>
        </member>
        <member name="P:XPExplorerBar.UxTheme.ColorName">
            <summary>
            Retrieves the color scheme name of the current visual style
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.WindowClasses">
            <summary>
            Window class IDs used by UxTheme.dll to draw controls
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.WindowClasses.Edit">
            <summary>
            TextBox class
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.WindowClasses.ListView">
            <summary>
            ListView class
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.WindowClasses.TreeView">
            <summary>
            TreeView class
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.Parts">
            <summary>
            Window parts IDs used by UxTheme.dll to draw controls
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.Parts.Edit">
            <summary>
            TextBox parts
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.Parts.Edit.EditText">
            <summary>
            TextBox
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.Parts.ListView">
            <summary>
            ListView parts
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.Parts.ListView.ListItem">
            <summary>
            ListView
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.Parts.TreeView">
            <summary>
            TreeView parts
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.Parts.TreeView.TreeItem">
            <summary>
            TreeView
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.PartStates">
            <summary>
            Window part state IDs used by UxTheme.dll to draw controls
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.PartStates.EditText">
            <summary>
            TextBox part states
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.EditText.Normal">
            <summary>
            The TextBox is in its normal state
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.EditText.Hot">
            <summary>
            The mouse is over the TextBox
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.EditText.Selected">
            <summary>
            The TextBox is selected
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.EditText.Disabled">
            <summary>
            The TextBox is disabled
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.EditText.Focused">
            <summary>
            The TextBox currently has focus
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.EditText.Readonly">
            <summary>
            The TextBox is readonly
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.PartStates.ListItem">
            <summary>
            ListView part states
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.ListItem.Normal">
            <summary>
            The ListView is in its normal state
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.ListItem.Hot">
            <summary>
            The mouse is over the ListView
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.ListItem.Selected">
            <summary>
            The ListView is selected
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.ListItem.Disabled">
            <summary>
            The ListView is disabled
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.ListItem.SelectedNotFocused">
            <summary>
            The ListView is selected but currently does not have focus
            </summary>
        </member>
        <member name="T:XPExplorerBar.UxTheme.PartStates.TreeItem">
            <summary>
            TreeView part states
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.TreeItem.Normal">
            <summary>
            The TreeView is in its normal state
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.TreeItem.Hot">
            <summary>
            The mouse is over the TreeView
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.TreeItem.Selected">
            <summary>
            The TreeView is selected
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.TreeItem.Disabled">
            <summary>
            The TreeView is disabled
            </summary>
        </member>
        <member name="F:XPExplorerBar.UxTheme.PartStates.TreeItem.SelectedNotFocused">
            <summary>
            The TreeView is selected but currently does not have focus
            </summary>
        </member>
        <member name="T:XPExplorerBar.Parser">
            <summary>
            A class that parses a UIFILE
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.#ctor(System.String)">
            <summary>
            Creates a new Parser
            </summary>
            <param name="uifile">The text from the UIFILE that is to be parsed</param>
        </member>
        <member name="M:XPExplorerBar.Parser.Parse">
            <summary>
            Parses the UIFILE
            </summary>
            <returns>An ExplorerBarInfo object that contains the system 
            settings defined in the UIFILE</returns>
        </member>
        <member name="M:XPExplorerBar.Parser.GetStyle(System.String)">
            <summary>
            Returns the style name for the current style token
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.IsSection(System.String)">
            <summary>
            Returns whether the token is a property section that we are interested in
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.GetSection(System.String)">
            <summary>
            Returns the name of the property section for the current token
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.IsProperty(System.String)">
            <summary>
            Returns whether the token is a property that we are interested in
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.GetPropertyType(System.String)">
            <summary>
            Returns the property type for the current proprty token
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractProperty">
            <summary>
            Extracts a property from the current property token
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractContent">
            <summary>
            Extracts a Bitmap from a "content" property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractContentAlignment">
            <summary>
            Extracts a ContentAlignment from a "contentalign" property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.GetContentAlignment(System.String)">
            <summary>
            Returns the ContentAlignment value contained in the specified string
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractFontFace">
            <summary>
            Gets the FontFace property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractFontSize">
            <summary>
            Gets the FontFace property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractFontWeight">
            <summary>
            Gets the FontWeight property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractFontStyle">
            <summary>
            Gets the FontStyle property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractBackground">
            <summary>
            Gets the Background property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractBitmap">
            <summary>
            Extracts bitmap specified by the current token from
            the ShellStyle.dll
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractForeground">
            <summary>
            Gets the Foreground color property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractPadding">
            <summary>
            Gets the Padding property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractMargin">
            <summary>
            Gets the Margin property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractBorder">
            <summary>
            Gets the Border property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractBorderColor">
            <summary>
            Gets the Border color property
            </summary>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractColor">
            <summary>
            Extracts a color from the current token
            </summary>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractRGBColor">
            <summary>
            Extracts a RGB color from the current token
            </summary>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractARGBColor">
            <summary>
            Extracts an ARGB color from the current token
            </summary>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.ExtractHexColor(System.String)">
            <summary>
            Extracts a color from a hexadecimal string
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.GetBytes(System.String)">
            <summary>
            
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.IsHexDigit(System.Char)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.Parser.HexToByte(System.String)">
            <summary>
            
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="T:XPExplorerBar.StringTokenizer">
            <summary>
            A class that breaks a string into tokens
            </summary>
        </member>
        <member name="F:XPExplorerBar.StringTokenizer.currentIndex">
            <summary>
            The index of the current token
            </summary>
        </member>
        <member name="F:XPExplorerBar.StringTokenizer.numberOfTokens">
            <summary>
            The number of tokens
            </summary>
        </member>
        <member name="F:XPExplorerBar.StringTokenizer.tokens">
            <summary>
            Internal list of tokens
            </summary>
        </member>
        <member name="F:XPExplorerBar.StringTokenizer.source">
            <summary>
            The string to be parsed
            </summary>
        </member>
        <member name="F:XPExplorerBar.StringTokenizer.delimiter">
            <summary>
            The delimiters
            </summary>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the StringTokenizer class with the 
            specified source string and delimiters
            </summary>
            <param name="source">The String to be parsed</param>
            <param name="delimiter">A String containing the delimiters</param>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Initializes a new instance of the StringTokenizer class with the 
            specified source string and delimiters
            </summary>
            <param name="source">The String to be parsed</param>
            <param name="delimiter">A char array containing the delimiters</param>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StringTokenizer class with the 
            specified source string
            </summary>
            <param name="source">The String to be parsed</param>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.Tokenize">
            <summary>
            Parses the source string
            </summary>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.CountTokens">
            <summary>
            Returns the number of tokens in the string
            </summary>
            <returns>The number of tokens in the string</returns>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.HasMoreTokens">
            <summary>
            Checks if there are more tokens available from this tokenizer's 
            string
            </summary>
            <returns>true if more tokens are available, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.NextToken">
            <summary>
            Returns the current token and moves to the next token
            </summary>
            <returns>The current token</returns>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.SkipToken">
            <summary>
            Moves to the next token without returning the current token
            </summary>
        </member>
        <member name="M:XPExplorerBar.StringTokenizer.PeekToken">
            <summary>
            Returns the current token but does not move to the next token
            </summary>
            <returns></returns>
        </member>
        <member name="P:XPExplorerBar.StringTokenizer.Source">
            <summary>
            Returns the source string
            </summary>
        </member>
        <member name="P:XPExplorerBar.StringTokenizer.Delimiter">
            <summary>
            Returns a string that contains the delimiters used to 
            parse the source string
            </summary>
        </member>
        <member name="T:XPExplorerBar.TaskItem">
            <summary>
            A Label-like Control used to display text and/or an 
            Image in an Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.systemSettings">
            <summary>
            System defined settings for the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.expando">
            <summary>
            The Expando the TaskItem belongs to
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.preferredWidth">
            <summary>
            The cached preferred width of the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.preferredHeight">
            <summary>
            The cached preferred height of the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.focusState">
            <summary>
            The focus state of the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.textRect">
            <summary>
            The rectangle where the TaskItems text is drawn
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.showFocusCues">
            <summary>
            Specifies whether the TaskItem should draw a focus rectangle 
            when it has focus
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.customSettings">
            <summary>
            Specifies the custom settings for the TaskItem
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.useGdiText">
            <summary>
            Specifies whether the TaskItem's text should be drawn and measured 
            using GDI instead of GDI+
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.stringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.drawTextFlags">
            <summary>
            
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItem.#ctor">
            <summary>
            Initializes a new instance of the TaskItem class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItem.CalcGdiPlusPreferredWidth(System.Drawing.Graphics)">
            <summary>
            Calculates the preferred width of the TaskItem using GDI+
            </summary>
            <param name="g">The Graphics used to measure the TaskItem</param>
            <returns>The preferred width of the TaskItem</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItem.CalcGdiPreferredWidth(System.Drawing.Graphics)">
            <summary>
            Calculates the preferred width of the TaskItem using GDI
            </summary>
            <param name="g">The Graphics used to measure the TaskItem</param>
            <returns>The preferred width of the TaskItem</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItem.CalcGdiPlusPreferredHeight(System.Drawing.Graphics)">
            <summary>
            Calculates the preferred height of the TaskItem using GDI+
            </summary>
            <param name="g">The Graphics used to measure the TaskItem</param>
            <returns>The preferred height of the TaskItem</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItem.CalcGdiPreferredHeight(System.Drawing.Graphics)">
            <summary>
            Calculates the preferred height of the TaskItem using GDI
            </summary>
            <param name="g">The Graphics used to measure the TaskItem</param>
            <returns>The preferred height of the TaskItem</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItem.ResetCustomSettings">
            <summary>
            Resets the custom settings to their default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItem.InitStringFormat">
            <summary>
            Initializes the TaskItem's StringFormat object
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItem.InitDrawTextFlags">
            <summary>
            Initializes the TaskItem's DrawTextFlags object
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItem.FireCustomSettingsChanged(System.EventArgs)">
            <summary>
            Raises the CustomSettingsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnCustomSettingsChanged(System.EventArgs)">
            <summary>
            Raises the CustomSettingsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the VisibleChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event
            </summary>
            <param name="e">A PaintEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event
            </summary>
            <param name="e">A PaintEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.DrawText(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.DrawGdiText(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="E:XPExplorerBar.TaskItem.CustomSettingsChanged">
            <summary>
            Occurs when a value in the CustomSettings proterty changes
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.LinkColor">
            <summary>
            Gets the color of the TaskItem's text
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.LinkHotColor">
            <summary>
            Gets the color of the TaskItem's text when highlighted.
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.FocusLinkColor">
            <summary>
            Gets the current color of the TaskItem's text
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.Expando">
            <summary>
            Gets or sets the Expando the TaskItem belongs to
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.FlatStyle">
            <summary>
            Overrides Button.FlatStyle
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.ShowFocusCues">
            <summary>
            Gets or sets a value indicating whether the TaskItem should
            display focus rectangles
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.FontDecoration">
            <summary>
            Gets the decoration to be used on the text when the TaskItem is 
            in a highlighted state 
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.Font">
            <summary>
            Gets or sets the font of the text displayed by the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.Image">
            <summary>
            Gets or sets the Image displayed by the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.ImageList">
            <summary>
            Gets or sets the ImageList that contains the images to 
            display in the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.ImageIndex">
            <summary>
            Gets or sets the index value of the image displayed on the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.Margin">
            <summary>
            Gets the amount of space between individual TaskItems 
            along each side of the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.Padding">
            <summary>
            Gets the amount of space around the text along each 
            side of the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.PreferredWidth">
            <summary>
            Gets the preferred width of the TaskItem.
            Assumes that the text is required to fit on a single line
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.PreferredHeight">
            <summary>
            Gets the preferred height of the TaskItem.
            Assumes that the text is required to fit within the
            current width of the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.DefaultSize">
            <summary>
            This member overrides Button.DefaultSize
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.FocusState">
            <summary>
            Gets or sets whether the TaskItem is in a highlighted state.
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.SystemSettings">
            <summary>
            Gets or sets System settings for the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.CustomSettings">
            <summary>
            Gets the custom settings for the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.Text">
            <summary>
            Gets or sets the text associated with this TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.UseGdiText">
            <summary>
            Gets or sets whether the TaskItem's text should be drawn 
            and measured using GDI instead of GDI+
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.TextAlign">
            <summary>
            Gets or sets the alignment of the text on the TaskItem
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.StringFormat">
            <summary>
            Gets the StringFormat object used to draw the TaskItem's text
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.DrawTextFlags">
            <summary>
            Gets the DrawTextFlags object used to draw the TaskItem's text
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.TextRect">
            <summary>
            Gets the Rectangle that the TaskItem's text is drawn in
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskItem.DisabledColor">
            <summary>
            Calculates the disabled color for text when the control is disabled
            </summary>
        </member>
        <member name="T:XPExplorerBar.TaskItem.TaskItemSurrogate">
            <summary>
            A class that is serialized instead of a TaskItem (as 
            TaskItems contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Name">
            <summary>
            See TaskItem.Name.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Size">
            <summary>
            See TaskItem.Size.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Location">
            <summary>
            See TaskItem.Location.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.BackColor">
            <summary>
            See TaskItem.BackColor.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.CustomSettings">
            <summary>
            See TaskItem.CustomSettings.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Text">
            <summary>
            See TaskItem.Text.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.ShowFocusCues">
            <summary>
            See TaskItem.ShowFocusCues.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Image">
            <summary>
            See TaskItem.Image.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Enabled">
            <summary>
            See TaskItem.Enabled.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Visible">
            <summary>
            See TaskItem.Visible.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Anchor">
            <summary>
            See TaskItem.Anchor.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Dock">
            <summary>
            See TaskItem.Dock.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.FontName">
            <summary>
            See Font.Name.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.FontSize">
            <summary>
            See Font.Size.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.FontDecoration">
            <summary>
            See Font.Style.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.UseGdiText">
            <summary>
            See TaskItem.UseGdiText.  This member is not intended to 
            be used directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Tag">
            <summary>
            See Control.Tag.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskItem.TaskItemSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItem.TaskItemSurrogate.#ctor">
            <summary>
            Initializes a new instance of the TaskItemSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItem.TaskItemSurrogate.Load(XPExplorerBar.TaskItem)">
            <summary>
            Populates the TaskItemSurrogate with data that is to be 
            serialized from the specified TaskItem
            </summary>
            <param name="taskItem">The TaskItem that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.TaskItemSurrogate.Save">
            <summary>
            Returns a TaskItem that contains the deserialized TaskItemSurrogate data
            </summary>
            <returns>A TaskItem that contains the deserialized TaskItemSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.TaskItem.TaskItemSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the TaskItemSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.TaskItem.TaskItemSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TaskItemSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the TaskItemSurrogate</param>
            <param name="context">The source from which the TaskItemSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.TaskItemDesigner">
            <summary>
            A custom designer used by TaskItems to remove unwanted 
            properties from the Property window in the designer
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemDesigner.#ctor">
            <summary>
            Initializes a new instance of the TaskItemDesigner class
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskItemDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through 
            a TypeDescriptor
            </summary>
            <param name="properties">An IDictionary containing the properties 
            for the class of the component</param>
        </member>
        <member name="T:XPExplorerBar.NativeMethods">
            <summary>
            A class that provides access to the Win32 API
            </summary>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.LoadLibrary(System.String)">
            <summary>
            The LoadLibrary function maps the specified executable module into the 
            address space of the calling process
            </summary>
            <param name="lpFileName">Pointer to a null-terminated string that names 
            the executable module (either a .dll or .exe file). The name specified 
            is the file name of the module and is not related to the name stored in 
            the library module itself, as specified by the LIBRARY keyword in the 
            module-definition (.def) file.  
            If the string specifies a path but the file does not exist in the specified 
            directory, the function fails. When specifying a path, be sure to use 
            backslashes (\), not forward slashes (/).  
            If the string does not specify a path, the function uses a standard search 
            strategy to find the file.</param>
            <returns>If the function succeeds, the return value is a handle to the module. 
            If the function fails, the return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.LoadLibraryEx(System.String,XPExplorerBar.LoadLibraryExFlags)">
            <summary>
            The LoadLibraryEx function maps the specified executable module into the 
            address space of the calling process. The executable module can be a .dll 
            or an .exe file. The specified module may cause other modules to be mapped 
            into the address space
            </summary>
            <param name="lpfFileName">Pointer to a null-terminated string that names 
            the executable module (either a .dll or an .exe file). The name specified 
            is the file name of the executable module. This name is not related to the 
            name stored in a library module itself, as specified by the LIBRARY keyword 
            in the module-definition (.def) file. If the string specifies a path, but 
            the file does not exist in the specified directory, the function fails. When 
            specifying a path, be sure to use backslashes (\), not forward slashes (/). 
            If the string does not specify a path, and the file name extension is omitted, 
            the function appends the default library extension .dll to the file name. 
            However, the file name string can include a trailing point character (.) to 
            indicate that the module name has no extension. If the string does not specify 
            a path, the function uses a standard search strategy to find the file. If 
            mapping the specified module into the address space causes the system to map 
            in other, associated executable modules, the function can use either the 
            standard search strategy or an alternate search strategy to find those modules.</param>
            <param name="flags">Action to take when loading the module. If no flags are 
            specified, the behavior of this function is identical to that of the LoadLibrary 
            function. This parameter can be one of the LoadLibraryExFlags values</param>
            <returns>If the function succeeds, the return value is a handle to the mapped 
            executable module. If the function fails, the return value is NULL.</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.FreeLibrary(System.IntPtr)">
            <summary>
            The FreeLibrary function decrements the reference count of the loaded 
            dynamic-link library (DLL). When the reference count reaches zero, the 
            module is unmapped from the address space of the calling process and the 
            handle is no longer valid
            </summary>
            <param name="hModule">Handle to the loaded DLL module. The LoadLibrary 
            function returns this handle</param>
            <returns>If the function succeeds, the return value is nonzero. If the 
            function fails, the return value is zero</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.FindResource(System.IntPtr,System.String,System.Int32)">
            <summary>
            The FindResource function determines the location of a resource with the 
            specified type and name in the specified module
            </summary>
            <param name="hModule">Handle to the module whose executable file contains 
            the resource. A value of NULL specifies the module handle associated with 
            the image file that the operating system used to create the current process</param>
            <param name="lpName">Specifies the name of the resource</param>
            <param name="lpType">Specifies the resource type</param>
            <returns>If the function succeeds, the return value is a handle to the 
            specified resource's information block. To obtain a handle to the resource, 
            pass this handle to the LoadResource function. If the function fails, the 
            return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.FindResource(System.IntPtr,System.String,System.String)">
            <summary>
            The FindResource function determines the location of a resource with the 
            specified type and name in the specified module
            </summary>
            <param name="hModule">Handle to the module whose executable file contains 
            the resource. A value of NULL specifies the module handle associated with 
            the image file that the operating system used to create the current process</param>
            <param name="lpName">Specifies the name of the resource</param>
            <param name="lpType">Specifies the resource type</param>
            <returns>If the function succeeds, the return value is a handle to the 
            specified resource's information block. To obtain a handle to the resource, 
            pass this handle to the LoadResource function. If the function fails, the 
            return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.SizeofResource(System.IntPtr,System.IntPtr)">
            <summary>
            The SizeofResource function returns the size, in bytes, of the specified 
            resource
            </summary>
            <param name="hModule">Handle to the module whose executable file contains 
            the resource</param>
            <param name="hResInfo">Handle to the resource. This handle must be created 
            by using the FindResource or FindResourceEx function</param>
            <returns>If the function succeeds, the return value is the number of bytes 
            in the resource. If the function fails, the return value is zero</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.LoadResource(System.IntPtr,System.IntPtr)">
            <summary>
            The LoadResource function loads the specified resource into global memory
            </summary>
            <param name="hModule">Handle to the module whose executable file contains 
            the resource. If hModule is NULL, the system loads the resource from the 
            module that was used to create the current process</param>
            <param name="hResInfo">Handle to the resource to be loaded. This handle is 
            returned by the FindResource or FindResourceEx function</param>
            <returns>If the function succeeds, the return value is a handle to the data 
            associated with the resource. If the function fails, the return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.FreeResource(System.IntPtr)">
            <summary>
            The FreeResource function decrements (decreases by one) the reference count 
            of a loaded resource. When the reference count reaches zero, the memory occupied 
            by the resource is freed
            </summary>
            <param name="hglbResource">Handle of the resource. It is assumed that hglbResource 
            was created by LoadResource</param>
            <returns>If the function succeeds, the return value is zero. If the function fails, 
            the return value is non-zero, which indicates that the resource has not been freed</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.CopyMemory(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            The CopyMemory function copies a block of memory from one location to another
            </summary>
            <param name="Destination">Pointer to the starting address of the copied 
            block's destination</param>
            <param name="Source">Pointer to the starting address of the block of memory 
            to copy</param>
            <param name="Length">Size of the block of memory to copy, in bytes</param>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.LoadBitmap(System.IntPtr,System.Int64)">
            <summary>
            The LoadBitmap function loads the specified bitmap resource from a module's 
            executable file
            </summary>
            <param name="hInstance">Handle to the instance of the module whose executable 
            file contains the bitmap to be loaded</param>
            <param name="lpBitmapName">Pointer to a null-terminated string that contains 
            the name of the bitmap resource to be loaded. Alternatively, this parameter 
            can consist of the resource identifier in the low-order word and zero in the 
            high-order word</param>
            <returns>If the function succeeds, the return value is the handle to the specified 
            bitmap. If the function fails, the return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.LoadBitmap(System.IntPtr,System.String)">
            <summary>
            The LoadBitmap function loads the specified bitmap resource from a module's 
            executable file
            </summary>
            <param name="hInstance">Handle to the instance of the module whose executable 
            file contains the bitmap to be loaded</param>
            <param name="lpBitmapName">Pointer to a null-terminated string that contains 
            the name of the bitmap resource to be loaded. Alternatively, this parameter 
            can consist of the resource identifier in the low-order word and zero in the 
            high-order word</param>
            <returns>If the function succeeds, the return value is the handle to the specified 
            bitmap. If the function fails, the return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.GdiFlush">
            <summary>
            The GdiFlush function flushes the calling thread's current batch
            </summary>
            <returns>If all functions in the current batch succeed, the return value is 
            nonzero. If not all functions in the current batch succeed, the return value 
            is zero, indicating that at least one function returned an error</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.LoadString(System.IntPtr,System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
            The LoadString function loads a string resource from the executable file 
            associated with a specified module, copies the string into a buffer, and 
            appends a terminating null character
            </summary>
            <param name="hInstance">Handle to an instance of the module whose executable 
            file contains the string resource</param>
            <param name="uID">Specifies the integer identifier of the string to be loaded</param>
            <param name="lpBuffer">Pointer to the buffer to receive the string</param>
            <param name="nBufferMax">Specifies the size of the buffer, in TCHARs. This 
            refers to bytes for versions of the function or WCHARs for Unicode versions. 
            The string is truncated and null terminated if it is longer than the number 
            of characters specified</param>
            <returns>If the function succeeds, the return value is the number of TCHARs 
            copied into the buffer, not including the null-terminating character, or 
            zero if the string resource does not exist</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.SendMessage(System.IntPtr,XPExplorerBar.WindowMessageFlags,System.IntPtr,System.IntPtr)">
            <summary>
            The SendMessage function sends the specified message to a 
            window or windows. It calls the window procedure for the 
            specified window and does not return until the window 
            procedure has processed the message
            </summary>
            <param name="hwnd">Handle to the window whose window procedure will 
            receive the message</param>
            <param name="msg">Specifies the message to be sent</param>
            <param name="wParam">Specifies additional message-specific information</param>
            <param name="lParam">Specifies additional message-specific information</param>
            <returns>The return value specifies the result of the message processing; 
            it depends on the message sent</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.DllGetVersion(XPExplorerBar.DLLVERSIONINFO@)">
            <summary>
            Implemented by many of the Microsoft?Windows?Shell dynamic-link libraries 
            (DLLs) to allow applications to obtain DLL-specific version information
            </summary>
            <param name="pdvi">Pointer to a DLLVERSIONINFO structure that receives the 
            version information. The cbSize member must be filled in before calling 
            the function</param>
            <returns>Returns NOERROR if successful, or an OLE-defined error value otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            The GetProcAddress function retrieves the address of an exported function 
            or variable from the specified dynamic-link library (DLL)
            </summary>
            <param name="hModule">Handle to the DLL module that contains the function 
            or variable. The LoadLibrary or GetModuleHandle function returns this handle</param>
            <param name="procName">Pointer to a null-terminated string that specifies 
            the function or variable name, or the function's ordinal value. If this 
            parameter is an ordinal value, it must be in the low-order word; the 
            high-order word must be zero</param>
            <returns>If the function succeeds, the return value is the address of the 
            exported function or variable. If the function fails, the return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.SetErrorMode(XPExplorerBar.SetErrorModeFlags)">
            <summary>
            The SetErrorMode function controls whether the system will handle the 
            specified types of serious errors, or whether the process will handle them
            </summary>
            <param name="uMode">Process error mode. This parameter can be one or more of 
            the SetErrorModeFlags values</param>
            <returns>The return value is the previous state of the error-mode bit flags</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.GetSystemMetrics(System.Int32)">
            <summary>
            The GetSystemMetrics function retrieves various system metrics (widths and 
            heights of display elements) and system configuration settings. All dimensions 
            retrieved by GetSystemMetrics are in pixels
            </summary>
            <param name="nIndex">System metric or configuration setting to retrieve. This 
            parameter can be one of the SysMetricsFlags values. Note that all SM_CX* values 
            are widths and all SM_CY* values are heights</param>
            <returns>If the function succeeds, the return value is the requested system 
            metric or configuration setting. If the function fails, the return value is zero</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.GetDC(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a display device context (DC) for 
            the client area of a specified window or for the entire screen. You can use 
            the returned handle in subsequent GDI functions to draw in the DC
            </summary>
            <param name="hWnd">Handle to the window whose DC is to be retrieved. If this 
            value is IntPtr.Zero, GetDC retrieves the DC for the entire screen</param>
            <returns>If the function succeeds, the return value is an IntPtr that points 
            to the handle to the DC for the specified window's client area. If the function 
            fails, the return value is IntPtr.Zero</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The ReleaseDC function releases a device context (DC), freeing it for use by 
            other applications. The effect of the ReleaseDC function depends on the type 
            of DC. It frees only common and window DCs. It has no effect on class or 
            private DCs
            </summary>
            <param name="hWnd">Handle to the window whose DC is to be released</param>
            <param name="hDC">Handle to the DC to be released</param>
            <returns>If the DC was released, the return value is 1, otherwise the return 
            value is zero</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.GetDeviceCaps(System.IntPtr,System.Int32)">
            <summary>
            The GetDeviceCaps function retrieves device-specific information for the 
            specified device
            </summary>
            <param name="hDC">Handle to the DC</param>
            <param name="nIndex">Specifies the item to return. This parameter can be one of 
            the DeviceCapsFlags values</param>
            <returns>The return value specifies the value of the desired item</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.CreateIconFromResourceEx(System.Byte*,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The CreateIconFromResourceEx function creates an icon or cursor from resource 
            bits describing the icon
            </summary>
            <param name="pbIconBits">Pointer to a buffer containing the icon or cursor 
            resource bits. These bits are typically loaded by calls to the 
            LookupIconIdFromDirectoryEx and LoadResource functions</param>
            <param name="cbIconBits">Specifies the size, in bytes, of the set of bits 
            pointed to by the pbIconBits parameter</param>
            <param name="fIcon">Specifies whether an icon or a cursor is to be created. 
            If this parameter is TRUE, an icon is to be created. If it is FALSE, a cursor 
            is to be created</param>
            <param name="dwVersion">Specifies the version number of the icon or cursor 
            format for the resource bits pointed to by the pbIconBits parameter. This 
            parameter can be 0x00030000</param>
            <param name="csDesired">Specifies the desired width, in pixels, of the icon 
            or cursor. If this parameter is zero, the function uses the SM_CXICON or 
            SM_CXCURSOR system metric value to set the width</param>
            <param name="cyDesired">Specifies the desired height, in pixels, of the icon 
            or cursor. If this parameter is zero, the function uses the SM_CYICON or 
            SM_CYCURSOR system metric value to set the height</param>
            <param name="flags"></param>
            <returns>If the function succeeds, the return value is a handle to the icon 
            or cursor. If the function fails, the return value is NULL</returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="hgdiobj"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.DeleteObject(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.DrawText(System.IntPtr,System.String,System.Int32,XPExplorerBar.RECT@,XPExplorerBar.DrawTextFlags)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="lpString"></param>
            <param name="nCount"></param>
            <param name="lpRect"></param>
            <param name="uFormat"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.SetBkMode(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="iBkMode"></param>
            <returns></returns>
        </member>
        <member name="M:XPExplorerBar.NativeMethods.SetTextColor(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="crColor"></param>
            <returns></returns>
        </member>
        <member name="T:XPExplorerBar.POINT">
            <summary>
            The POINT structure defines the x- and y- coordinates of a point
            </summary>
        </member>
        <member name="F:XPExplorerBar.POINT.x">
            <summary>
            Specifies the x-coordinate of the point
            </summary>
        </member>
        <member name="F:XPExplorerBar.POINT.y">
            <summary>
            Specifies the y-coordinate of the point
            </summary>
        </member>
        <member name="M:XPExplorerBar.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new RECT struct with the specified x and y coordinates
            </summary>
            <param name="x">The x-coordinate of the point</param>
            <param name="y">The y-coordinate of the point</param>
        </member>
        <member name="M:XPExplorerBar.POINT.FromPoint(System.Drawing.Point)">
            <summary>
            Creates a new POINT struct from the specified Point
            </summary>
            <param name="p">The Point to create the POINT from</param>
            <returns>A POINT struct with the same x and y coordinates as 
            the specified Point</returns>
        </member>
        <member name="M:XPExplorerBar.POINT.ToPoint">
            <summary>
            Returns a Point with the same x and y coordinates as the POINT
            </summary>
            <returns>A Point with the same x and y coordinates as the POINT</returns>
        </member>
        <member name="T:XPExplorerBar.RECT">
            <summary>
            The RECT structure defines the coordinates of the upper-left 
            and lower-right corners of a rectangle
            </summary>
        </member>
        <member name="F:XPExplorerBar.RECT.left">
            <summary>
            Specifies the x-coordinate of the upper-left corner of the RECT
            </summary>
        </member>
        <member name="F:XPExplorerBar.RECT.top">
            <summary>
            Specifies the y-coordinate of the upper-left corner of the RECT
            </summary>
        </member>
        <member name="F:XPExplorerBar.RECT.right">
            <summary>
            Specifies the x-coordinate of the lower-right corner of the RECT
            </summary>
        </member>
        <member name="F:XPExplorerBar.RECT.bottom">
            <summary>
            Specifies the y-coordinate of the lower-right corner of the RECT
            </summary>
        </member>
        <member name="M:XPExplorerBar.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new RECT struct with the specified location and size
            </summary>
            <param name="left">The x-coordinate of the upper-left corner of the RECT</param>
            <param name="top">The y-coordinate of the upper-left corner of the RECT</param>
            <param name="right">The x-coordinate of the lower-right corner of the RECT</param>
            <param name="bottom">The y-coordinate of the lower-right corner of the RECT</param>
        </member>
        <member name="M:XPExplorerBar.RECT.FromRectangle(System.Drawing.Rectangle)">
            <summary>
            Creates a new RECT struct from the specified Rectangle
            </summary>
            <param name="rect">The Rectangle to create the RECT from</param>
            <returns>A RECT struct with the same location and size as 
            the specified Rectangle</returns>
        </member>
        <member name="M:XPExplorerBar.RECT.FromXYWH(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new RECT struct with the specified location and size
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the RECT</param>
            <param name="y">The y-coordinate of the upper-left corner of the RECT</param>
            <param name="width">The width of the RECT</param>
            <param name="height">The height of the RECT</param>
            <returns>A RECT struct with the specified location and size</returns>
        </member>
        <member name="M:XPExplorerBar.RECT.ToRectangle">
            <summary>
            Returns a Rectangle with the same location and size as the RECT
            </summary>
            <returns>A Rectangle with the same location and size as the RECT</returns>
        </member>
        <member name="T:XPExplorerBar.DLLVERSIONINFO">
            <summary>
            Receives dynamic-link library (DLL)-specific version information. 
            It is used with the DllGetVersion function
            </summary>
        </member>
        <member name="F:XPExplorerBar.DLLVERSIONINFO.cbSize">
            <summary>
            Size of the structure, in bytes. This member must be filled 
            in before calling the function
            </summary>
        </member>
        <member name="F:XPExplorerBar.DLLVERSIONINFO.dwMajorVersion">
            <summary>
            Major version of the DLL. If the DLL's version is 4.0.950, 
            this value will be 4
            </summary>
        </member>
        <member name="F:XPExplorerBar.DLLVERSIONINFO.dwMinorVersion">
            <summary>
            Minor version of the DLL. If the DLL's version is 4.0.950, 
            this value will be 0
            </summary>
        </member>
        <member name="F:XPExplorerBar.DLLVERSIONINFO.dwBuildNumber">
            <summary>
            Build number of the DLL. If the DLL's version is 4.0.950, 
            this value will be 950
            </summary>
        </member>
        <member name="F:XPExplorerBar.DLLVERSIONINFO.dwPlatformID">
            <summary>
            Identifies the platform for which the DLL was built
            </summary>
        </member>
        <member name="T:XPExplorerBar.ICONFILE">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONFILE.reserved">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONFILE.resourceType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONFILE.iconCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONFILE.entries">
            <summary>
            
            </summary>
        </member>
        <member name="T:XPExplorerBar.ICONENTRY">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.width">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.height">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.numColors">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.reserved">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.numPlanes">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.bitsPerPixel">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.dataSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.ICONENTRY.dataOffset">
            <summary>
            
            </summary>
        </member>
        <member name="T:XPExplorerBar.WindowMessageFlags">
            <summary>
            The WindowMessageFlags enemeration contains Windows messages that the 
            XPExplorerBar may be interested in listening for
            </summary>
        </member>
        <member name="F:XPExplorerBar.WindowMessageFlags.WM_PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw 
            itself in the specified device context, most commonly in a printer 
            device context
            </summary>
        </member>
        <member name="F:XPExplorerBar.WindowMessageFlags.WM_PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw 
            its client area in the specified device context, most commonly in a 
            printer device context
            </summary>
        </member>
        <member name="T:XPExplorerBar.WmPrintFlags">
            <summary>
            The WmPrintFlags enemeration contains flags that may be sent 
            when a WM_PRINT or WM_PRINTCLIENT message is recieved
            </summary>
        </member>
        <member name="F:XPExplorerBar.WmPrintFlags.PRF_CHECKVISIBLE">
            <summary>
            Draws the window only if it is visible
            </summary>
        </member>
        <member name="F:XPExplorerBar.WmPrintFlags.PRF_NONCLIENT">
            <summary>
            Draws the nonclient area of the window
            </summary>
        </member>
        <member name="F:XPExplorerBar.WmPrintFlags.PRF_CLIENT">
            <summary>
            Draws the client area of the window
            </summary>
        </member>
        <member name="F:XPExplorerBar.WmPrintFlags.PRF_ERASEBKGND">
            <summary>
            Erases the background before drawing the window
            </summary>
        </member>
        <member name="F:XPExplorerBar.WmPrintFlags.PRF_CHILDREN">
            <summary>
            Draws all visible children windows
            </summary>
        </member>
        <member name="F:XPExplorerBar.WmPrintFlags.PRF_OWNED">
            <summary>
            Draws all owned windows
            </summary>
        </member>
        <member name="T:XPExplorerBar.LoadLibraryExFlags">
            <summary>
            The LoadLibraryExFlags enemeration contains flags that control 
            how a .dll file is loaded with the NativeMethods.LoadLibraryEx 
            function
            </summary>
        </member>
        <member name="F:XPExplorerBar.LoadLibraryExFlags.DONT_RESOLVE_DLL_REFERENCES">
            <summary>
            If this value is used, and the executable module is a DLL, 
            the system does not call DllMain for process and thread 
            initialization and termination. Also, the system does not 
            load additional executable modules that are referenced by 
            the specified module. If this value is not used, and the 
            executable module is a DLL, the system calls DllMain for 
            process and thread initialization and termination. The system 
            loads additional executable modules that are referenced by 
            the specified module
            </summary>
        </member>
        <member name="F:XPExplorerBar.LoadLibraryExFlags.LOAD_LIBRARY_AS_DATAFILE">
            <summary>
            If this value is used, the system maps the file into the calling 
            process's virtual address space as if it were a data file. Nothing 
            is done to execute or prepare to execute the mapped file. Use 
            this flag when you want to load a DLL only to extract messages 
            or resources from it
            </summary>
        </member>
        <member name="F:XPExplorerBar.LoadLibraryExFlags.LOAD_WITH_ALTERED_SEARCH_PATH">
            <summary>
            If this value is used, and lpFileName specifies a path, the 
            system uses the alternate file search strategy to find associated 
            executable modules that the specified module causes to be loaded. 
            If this value is not used, or if lpFileName does not specify a 
            path, the system uses the standard search strategy to find 
            associated executable modules that the specified module causes 
            to be loaded
            </summary>
        </member>
        <member name="F:XPExplorerBar.LoadLibraryExFlags.LOAD_IGNORE_CODE_AUTHZ_LEVEL">
            <summary>
            If this value is used, the system does not perform automatic 
            trust comparisons on the DLL or its dependents when they are 
            loaded
            </summary>
        </member>
        <member name="T:XPExplorerBar.SetErrorModeFlags">
            <summary>
            The SetErrorModeFlags enemeration contains flags that control 
            whether the system will handle the specified types of serious errors, 
            or whether the process will handle them
            </summary>
        </member>
        <member name="F:XPExplorerBar.SetErrorModeFlags.SEM_DEFAULT">
            <summary>
            Use the system default, which is to display all error dialog boxes
            </summary>
        </member>
        <member name="F:XPExplorerBar.SetErrorModeFlags.SEM_FAILCRITICALERRORS">
            <summary>
            The system does not display the critical-error-handler message box. 
            Instead, the system sends the error to the calling process
            </summary>
        </member>
        <member name="F:XPExplorerBar.SetErrorModeFlags.SEM_NOGPFAULTERRORBOX">
            <summary>
            The system does not display the general-protection-fault message box. 
            This flag should only be set by debugging applications that handle 
            general protection (GP) faults themselves with an exception handler
            </summary>
        </member>
        <member name="F:XPExplorerBar.SetErrorModeFlags.SEM_NOALIGNMENTFAULTEXCEPT">
            <summary>
            After this value is set for a process, subsequent attempts to clear 
            the value are ignored. 64-bit Windows:  The system automatically fixes 
            memory alignment faults and makes them invisible to the application. 
            It does this for the calling process and any descendant processes
            </summary>
        </member>
        <member name="F:XPExplorerBar.SetErrorModeFlags.SEM_NOOPENFILEERRORBOX">
            <summary>
            The system does not display a message box when it fails to find a 
            file. Instead, the error is returned to the calling process
            </summary>
        </member>
        <member name="T:XPExplorerBar.DrawTextFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_TOP">
            <summary>
            Justifies the text to the top of the rectangle.
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_LEFT">
            <summary>
            Aligns text to the left.
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_CENTER">
            <summary>
            Centers text horizontally in the rectangle
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_RIGHT">
            <summary>
            Aligns text to the right
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_VCENTER">
            <summary>
            Centers text vertically. This value is used only with the DT_SINGLELINE value
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_BOTTOM">
            <summary>
            Justifies the text to the bottom of the rectangle. This value is used 
            only with the DT_SINGLELINE value
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_WORDBREAK">
            <summary>
            Breaks words. Lines are automatically broken between words if a word would 
            extend past the edge of the rectangle specified by the lpRect parameter. A 
            carriage return-line feed sequence also breaks the line. If this is not 
            specified, output is on one line
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_SINGLELINE">
            <summary>
            Displays text on a single line only. Carriage returns and line feeds do not 
            break the line
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_EXPANDTABS">
            <summary>
            Expands tab characters. The default number of characters per tab is eight. 
            The DT_WORD_ELLIPSIS, DT_PATH_ELLIPSIS, and DT_END_ELLIPSIS values cannot be 
            used with the DT_EXPANDTABS value
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_TABSTOP">
            <summary>
            Sets tab stops. Bits 15? (high-order byte of the low-order word) of the uFormat 
            parameter specify the number of characters for each tab. The default number of 
            characters per tab is eight. The DT_CALCRECT, DT_EXTERNALLEADING, DT_INTERNAL, 
            DT_NOCLIP, and DT_NOPREFIX values cannot be used with the DT_TABSTOP value
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_NOCLIP">
            <summary>
            Draws without clipping. DrawText is somewhat faster when DT_NOCLIP is used
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_EXTERNALLEADING">
            <summary>
            Includes the font external leading in line height. Normally, external leading 
            is not included in the height of a line of text
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_CALCRECT">
            <summary>
            Determines the width and height of the rectangle. If there are multiple lines 
            of text, DrawText uses the width of the rectangle pointed to by the lpRect 
            parameter and extends the base of the rectangle to bound the last line of text. 
            If the largest word is wider than the rectangle, the width is expanded. If the 
            text is less than the width of the rectangle, the width is reduced. If there is 
            only one line of text, DrawText modifies the right side of the rectangle so that 
            it bounds the last character in the line. In either case, DrawText returns the 
            height of the formatted text but does not draw the text
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_NOPREFIX">
            <summary>
            Turns off processing of prefix characters. Normally, DrawText interprets the 
            mnemonic-prefix character &amp; as a directive to underscore the character that 
            follows, and the mnemonic-prefix characters &amp;&amp; as a directive to print a 
            single &amp;. By specifying DT_NOPREFIX, this processing is turned off
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_INTERNAL">
            <summary>
            Uses the system font to calculate text metrics
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_EDITCONTROL">
            <summary>
            Duplicates the text-displaying characteristics of a multiline edit control. 
            Specifically, the average character width is calculated in the same manner as 
            for an edit control, and the function does not display a partially visible last 
            line
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_PATH_ELLIPSIS">
            <summary>
            For displayed text, replaces characters in the middle of the string with ellipses 
            so that the result fits in the specified rectangle. If the string contains backslash 
            (\) characters, DT_PATH_ELLIPSIS preserves as much as possible of the text after 
            the last backslash. The string is not modified unless the DT_MODIFYSTRING flag is 
            specified
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_END_ELLIPSIS">
            <summary>
            For displayed text, if the end of a string does not fit in the rectangle, it is 
            truncated and ellipses are added. If a word that is not at the end of the string 
            goes beyond the limits of the rectangle, it is truncated without ellipses. The 
            string is not modified unless the DT_MODIFYSTRING flag is specified
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_MODIFYSTRING">
            <summary>
            Modifies the specified string to match the displayed text. This value has no effect 
            unless DT_END_ELLIPSIS or DT_PATH_ELLIPSIS is specified
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_RTLREADING">
            <summary>
            Layout in right-to-left reading order for bi-directional text when the font selected 
            into the hdc is a Hebrew or Arabic font. The default reading order for all text is 
            left-to-right
            </summary>
        </member>
        <member name="F:XPExplorerBar.DrawTextFlags.DT_WORD_ELLIPSIS">
            <summary>
            Truncates any word that does not fit in the rectangle and adds ellipses
            </summary>
        </member>
        <member name="T:XPExplorerBar.XPCheckedListBox">
            <summary>
            A CheckedListBox that correctly draws themed borders if Windows XP 
            Visual Styles are enabled when it recieves a WM_PRINT message
            </summary>
        </member>
        <member name="F:XPExplorerBar.XPCheckedListBox.visualStylesEnabled">
            <summary>
            The cached value of whether Xindows XP Visual Styles are enabled
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPCheckedListBox.#ctor">
            <summary>
            Initializes a new instance of the XPCheckedListBox class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPCheckedListBox.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.XPCheckedListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages
            </summary>
            <param name="m">The Windows Message to process</param>
        </member>
        <member name="P:XPExplorerBar.XPCheckedListBox.VisualStylesEnabled">
            <summary>
            Returns whether Windows XP Visual Styles are currently enabled
            </summary>
        </member>
        <member name="T:XPExplorerBar.XPDateTimePicker">
            <summary>
            A DateTimePicker that correctly draws themed borders if Windows XP 
            Visual Styles are enabled when it recieves a WM_PRINT message
            </summary>
        </member>
        <member name="F:XPExplorerBar.XPDateTimePicker.visualStylesEnabled">
            <summary>
            The cached value of whether Xindows XP Visual Styles are enabled
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPDateTimePicker.#ctor">
            <summary>
            Initializes a new instance of the XPDateTimePicker class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPDateTimePicker.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.XPDateTimePicker.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages
            </summary>
            <param name="m">The Windows Message to process</param>
        </member>
        <member name="P:XPExplorerBar.XPDateTimePicker.VisualStylesEnabled">
            <summary>
            Returns whether Windows XP Visual Styles are currently enabled
            </summary>
        </member>
        <member name="T:XPExplorerBar.XPListBox">
            <summary>
            A ListBox that correctly draws themed borders if Windows XP 
            Visual Styles are enabled when it recieves a WM_PRINT message
            </summary>
        </member>
        <member name="F:XPExplorerBar.XPListBox.visualStylesEnabled">
            <summary>
            The cached value of whether Xindows XP Visual Styles are enabled
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPListBox.#ctor">
            <summary>
            Initializes a new instance of the XPListBox class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPListBox.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.XPListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages
            </summary>
            <param name="m">The Windows Message to process</param>
        </member>
        <member name="P:XPExplorerBar.XPListBox.VisualStylesEnabled">
            <summary>
            Returns whether Windows XP Visual Styles are currently enabled
            </summary>
        </member>
        <member name="T:XPExplorerBar.XPListView">
            <summary>
            A ListView that correctly draws themed borders if Windows XP 
            Visual Styles are enabled when it recieves a WM_PRINT message
            </summary>
        </member>
        <member name="F:XPExplorerBar.XPListView.visualStylesEnabled">
            <summary>
            The cached value of whether Xindows XP Visual Styles are enabled
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPListView.#ctor">
            <summary>
            Initializes a new instance of the XPListView class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPListView.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.XPListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages
            </summary>
            <param name="m">The Windows Message to process</param>
        </member>
        <member name="P:XPExplorerBar.XPListView.VisualStylesEnabled">
            <summary>
            Returns whether Windows XP Visual Styles are currently enabled
            </summary>
        </member>
        <member name="T:XPExplorerBar.XPTextBox">
            <summary>
            A TextBox that correctly draws themed borders if Windows XP 
            Visual Styles are enabled when it recieves a WM_PRINT message
            </summary>
        </member>
        <member name="F:XPExplorerBar.XPTextBox.visualStylesEnabled">
            <summary>
            The cached value of whether Xindows XP Visual Styles are enabled
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPTextBox.#ctor">
            <summary>
            Initializes a new instance of the XPTextBox class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPTextBox.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.XPTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages
            </summary>
            <param name="m">The Windows Message to process</param>
        </member>
        <member name="P:XPExplorerBar.XPTextBox.VisualStylesEnabled">
            <summary>
            Returns whether Windows XP Visual Styles are currently enabled
            </summary>
        </member>
        <member name="T:XPExplorerBar.XPTreeView">
            <summary>
            A TreeView that correctly draws themed borders if Windows XP 
            Visual Styles are enabled when it recieves a WM_PRINT message
            </summary>
        </member>
        <member name="F:XPExplorerBar.XPTreeView.visualStylesEnabled">
            <summary>
            The cached value of whether Xindows XP Visual Styles are enabled
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPTreeView.#ctor">
            <summary>
            Initializes a new instance of the XPTreeView class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.XPTreeView.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.XPTreeView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages
            </summary>
            <param name="m">The Windows Message to process</param>
        </member>
        <member name="P:XPExplorerBar.XPTreeView.VisualStylesEnabled">
            <summary>
            Returns whether Windows XP Visual Styles are currently enabled
            </summary>
        </member>
        <member name="T:XPExplorerBar.TaskPane">
            <summary>
            A ScrollableControl that can contain Expandos
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.expandoCollection">
            <summary>
            Internal list of Expandos contained in the TaskPane
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.systemSettings">
            <summary>
            System defined settings for the TaskBar
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.initialising">
            <summary>
            Specifies whether the TaskPane is currently initialising
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.classicTheme">
            <summary>
            Specifies whether the TaskPane and its children should render 
            themselves using a theme similar to the Windows XP Classic theme
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.customTheme">
            <summary>
            Specifies whether the TaskPane and its children should render 
            themselves using a non-official Windows XP theme
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.watermarkRect">
            <summary>
            A Rectangle that specifies the size and location of the watermark
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.layout">
            <summary>
            Specifies whether the TaskPane is currently performing a 
            layout operation
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.beginUpdateCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.customSettings">
            <summary>
            Specifies the custom settings for the TaskPane
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.allowExpandoDragging">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.dropPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.dropIndicatorColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.#ctor">
            <summary>
            Initializes a new instance of the TaskPane class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.UseClassicTheme">
            <summary>
            Forces the TaskPane and all it's Expandos to use a theme
            equivalent to Windows XPs classic theme 
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.UseCustomTheme(System.String)">
            <summary>
            Forces the TaskPane and all it's Expandos to use the 
            specified theme
            </summary>
            <param name="stylePath">The path to the custom 
            shellstyle.dll to use</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.UseDefaultTheme">
            <summary>
            Forces the TaskPane and all it's Expandos to use the 
            current system theme
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.Dispose(System.Boolean)">
            <summary> 
            Releases the unmanaged resources used by the TaskPane and 
            optionally releases the managed resources
            </summary>
            <param name="disposing">True to release both managed and unmanaged 
            resources; false to release only unmanaged resources</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.CollapseAll">
            <summary>
            Collaspes all the Expandos contained in the TaskPane
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandAll">
            <summary>
            Expands all the Expandos contained in the TaskPane
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.CollapseAllButOne(XPExplorerBar.Expando)">
            <summary>
            Collaspes all the Expandos contained in the TaskPane, 
            except for the specified Expando which is expanded
            </summary>
            <param name="expando">The Expando that is to be expanded</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.UpdateDropPoint(System.Drawing.Point)">
            <summary>
            Calculates the Point that the currently dragged Expando will 
            dropped at based on the specified mouse position
            </summary>
            <param name="point">The current position of the mouse in screen 
            co-ordinates</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.DropExpando(XPExplorerBar.Expando)">
            <summary>
            "Drops" the specified Expando and moves it to the current drop point
            </summary>
            <param name="expando">The Expando to be "dropped"</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.BeginInit">
            <summary>
            Signals the TaskPane that initialization is starting
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.EndInit">
            <summary>
            Signals the TaskPane that initialization is complete
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.BeginUpdate">
            <summary>
            Prevents the TaskPane from drawing until the EndUpdate method is called
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.EndUpdate">
            <summary>
            Resumes drawing of the TaskPane after drawing is suspended by the 
            BeginUpdate method
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.DoLayout">
            <summary>
            Forces the TaskPane to apply layout logic to child Expandos, 
            and adjusts the Size and Location of the Expandos if necessary
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.DoLayout(System.Boolean)">
            <summary>
            Forces the TaskPane to apply layout logic to child Expandos, 
            and adjusts the Size and Location of the Expandos if necessary
            </summary>
            <param name="performRealLayout">true to execute pending layout 
            requests; otherwise, false</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.CalcExpandoLocation(XPExplorerBar.Expando)">
            <summary>
            Calculates where the specified Expando should be located
            </summary>
            <returns>A Point that specifies where the Expando should 
            be located</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPane.UpdateExpandos">
            <summary>
            Updates the layout of the Expandos while in design mode, and 
            adds/removes Expandos from the ControlCollection as necessary
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.MatchControlCollToExpandoColl">
            <summary>
            Make sure the the expandos index in the ControlCollection 
            are the same as in the ExpandoCollection (indexes in the 
            ExpandoCollection may have changed due to the user moving 
            them around in the editor or calling ExpandoCollection.Move())
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ResetCustomSettings">
            <summary>
            Resets the custom settings to their default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event
            </summary>
            <param name="e">A ControlEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event
            </summary>
            <param name="e">A ControlEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.FireCustomSettingsChanged(System.EventArgs)">
            <summary>
            Raises the CustomSettingsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnCustomSettingsChanged(System.EventArgs)">
            <summary>
            Raises the CustomSettingsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.expando_StateChanged(System.Object,XPExplorerBar.ExpandoEventArgs)">
            <summary> 
            Event handler for the Expando StateChanged event
            </summary>
            <param name="sender">The object that fired the event</param>
            <param name="e">An ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnExpandoStateChanged(XPExplorerBar.ExpandoEventArgs)">
            <summary>
            Occurs when the value of an Expandos Collapsed property changes
            </summary>
            <param name="e">An ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnExpandoAdded(XPExplorerBar.ExpandoEventArgs)">
            <summary>
            Raises the ExpandoAdded event
            </summary>
            <param name="e">An ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnExpandoRemoved(XPExplorerBar.ExpandoEventArgs)">
            <summary>
            Raises the ExpandoRemoved event
            </summary>
            <param name="e">An ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary> 
            Raises the PaintBackground event
            </summary>
            <param name="e">A PaintEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnParentChanged(System.Object,System.EventArgs)">
            <summary>
            Event handler for the ParentChanged event
            </summary>
            <param name="sender">The object that fired the event</param>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnParentVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Event handler for the ParentVisibleChanged event
            </summary>
            <param name="sender">The object that fired the event</param>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnSystemColorsChanged(System.EventArgs)">
            <summary> 
            Raises the SystemColorsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.OnSizeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:XPExplorerBar.TaskPane.ExpandoAdded">
            <summary>
            Occurs when an Expando is added to the TaskPane
            </summary>
        </member>
        <member name="E:XPExplorerBar.TaskPane.ExpandoRemoved">
            <summary>
            Occurs when an Expando is removed from the TaskPane
            </summary>
        </member>
        <member name="E:XPExplorerBar.TaskPane.CustomSettingsChanged">
            <summary>
            Occurs when a value in the CustomSettings proterty changes
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.Initialising">
            <summary>
            Gets whether the TaskPane is currently initialising
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.GradientStartColor">
            <summary>
            Gets the first color of the TaskPane's background gradient fill.
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.GradientEndColor">
            <summary>
            Gets the second color of the TaskPane's background gradient fill.
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.GradientDirection">
            <summary>
            Gets the direction of the TaskPane's background gradient fill.
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.Expandos">
            <summary>
            A TaskPane.ExpandoCollection representing the collection of 
            Expandos contained within the TaskPane
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.Controls">
            <summary>
            A Control.ControlCollection representing the collection of 
            controls contained within the control
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.AllowExpandoDragging">
            <summary>
            Gets or sets whether Expandos can be dragged around the TaskPane
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.ExpandoDropIndicatorColor">
            <summary>
            Gets or sets the Color that the Expando drop point indicator is drawn in
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.BackImage">
            <summary>
            Gets the Image used as the TaskPane's background
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.StretchMode">
            <summary>
            Gets how the TaskPane's background Image is to be drawn
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.Watermark">
            <summary>
            Gets the Image that is used as a watermark in the TaskPane's 
            client area
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.WatermarkAlignment">
            <summary>
            Gets the alignment of the TaskPane's watermark
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.Padding">
            <summary>
            Gets the amount of space between the border and the 
            Expando's along each side of the TaskPane.
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.SystemSettings">
            <summary>
            Gets or sets the system defined settings for the TaskPane
            </summary>
        </member>
        <member name="P:XPExplorerBar.TaskPane.CustomSettings">
            <summary>
            Gets the custom settings for the TaskPane
            </summary>
        </member>
        <member name="T:XPExplorerBar.TaskPane.ExpandoCollection">
            <summary>
            Represents a collection of Expando objects
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.ExpandoCollection.owner">
            <summary>
            The TaskPane that owns this ExpandoCollection
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.#ctor(XPExplorerBar.TaskPane)">
            <summary>
            Initializes a new instance of the TaskPane.ExpandoCollection class
            </summary>
            <param name="owner">A TaskPane representing the taskpane that owns 
            the Expando collection</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.Add(XPExplorerBar.Expando)">
            <summary>
            Adds the specified expando to the expando collection
            </summary>
            <param name="value">The Expando to add to the expando collection</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.AddRange(XPExplorerBar.Expando[])">
            <summary>
            Adds an array of expando objects to the collection
            </summary>
            <param name="expandos">An array of Expando objects to add 
            to the collection</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.Clear">
            <summary>
            Removes all expandos from the collection
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.Contains(XPExplorerBar.Expando)">
            <summary>
            Determines whether the specified expando is a member of the 
            collection
            </summary>
            <param name="expando">The Expando to locate in the collection</param>
            <returns>true if the Expando is a member of the collection; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.Contains(System.Windows.Forms.Control)">
            <summary>
            Determines whether the specified control is a member of the 
            collection
            </summary>
            <param name="control">The Control to locate in the collection</param>
            <returns>true if the Control is a member of the collection; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.IndexOf(XPExplorerBar.Expando)">
            <summary>
            Retrieves the index of the specified expando in the expando 
            collection
            </summary>
            <param name="expando">The Expando to locate in the collection</param>
            <returns>A zero-based index value that represents the position 
            of the specified Expando in the TaskPane.ExpandoCollection</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.Remove(XPExplorerBar.Expando)">
            <summary>
            Removes the specified expando from the expando collection
            </summary>
            <param name="value">The Expando to remove from the 
            TaskPane.ExpandoCollection</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an expando from the expando collection at the 
            specified indexed location
            </summary>
            <param name="index">The index value of the Expando to 
            remove</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.Move(XPExplorerBar.Expando,System.Int32)">
            <summary>
            Moves the specified expando to the specified indexed location 
            in the expando collection
            </summary>
            <param name="value">The expando to be moved</param>
            <param name="index">The indexed location in the expando collection 
            that the specified expando will be moved to</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.MoveToTop(XPExplorerBar.Expando)">
            <summary>
            Moves the specified expando to the top of the expando collection
            </summary>
            <param name="value">The expando to be moved</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollection.MoveToBottom(XPExplorerBar.Expando)">
            <summary>
            Moves the specified expando to the bottom of the expando collection
            </summary>
            <param name="value">The expando to be moved</param>
        </member>
        <member name="P:XPExplorerBar.TaskPane.ExpandoCollection.Item(System.Int32)">
            <summary>
            The Expando located at the specified index location within 
            the expando collection
            </summary>
            <param name="index">The index of the expando to retrieve 
            from the expando collection</param>
        </member>
        <member name="T:XPExplorerBar.TaskPane.ExpandoCollectionEditor">
            <summary>
            A custom CollectionEditor for editing ExpandoCollections
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the CollectionEditor class 
            using the specified collection type
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the specified 
            service provider and context
            </summary>
            <param name="context">An ITypeDescriptorContext that can be 
            used to gain additional context information</param>
            <param name="isp">A service provider object through which 
            editing services can be obtained</param>
            <param name="value">The object to edit the value of</param>
            <returns>The new value of the object. If the value of the 
            object has not changed, this should return the same object 
            it was passed</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPane.ExpandoCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of the specified collection item type
            </summary>
            <param name="itemType">The type of item to create</param>
            <returns>A new instance of the specified object</returns>
        </member>
        <member name="T:XPExplorerBar.TaskPane.TaskPaneSurrogate">
            <summary>
            A class that is serialized instead of a TaskPane (as 
            TaskPanes contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Name">
            <summary>
            See TaskPane.Name.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Size">
            <summary>
            See TaskPane.Size.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Location">
            <summary>
            See TaskPane.Location.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.BackColor">
            <summary>
            See TaskPane.BackColor.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.CustomSettings">
            <summary>
            See TaskPane.CustomSettings.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.AutoScroll">
            <summary>
            See TaskPane.AutoScroll.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.AutoScrollMargin">
            <summary>
            See TaskPane.AutoScrollMargin.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Enabled">
            <summary>
            See TaskPane.Enabled.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Visible">
            <summary>
            See TaskPane.Visible.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Anchor">
            <summary>
            See TaskPane.Anchor.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Dock">
            <summary>
            See TaskPane.Dock.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.FontName">
            <summary>
            See Font.Name.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.FontSize">
            <summary>
            See Font.Size.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.FontDecoration">
            <summary>
            See Font.Style.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Expandos">
            <summary>
            See TaskPane.Expandos.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Tag">
            <summary>
            See Control.Tag.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.AllowExpandoDragging">
            <summary>
            See TaskPane.AllowExpandoDragging.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.ExpandoDropIndicatorColor">
            <summary>
            See TaskPane.ExpandoDropIndicatorColor.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.TaskPane.TaskPaneSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.TaskPaneSurrogate.#ctor">
            <summary>
            Initializes a new instance of the TaskPaneSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPane.TaskPaneSurrogate.Load(XPExplorerBar.TaskPane)">
            <summary>
            Populates the TaskPaneSurrogate with data that is to be 
            serialized from the specified TaskPane
            </summary>
            <param name="taskPane">The TaskPane that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.TaskPaneSurrogate.Save">
            <summary>
            Returns a TaskPane that contains the deserialized TaskPaneSurrogate data
            </summary>
            <returns>A TaskPane that contains the deserialized TaskPaneSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.TaskPane.TaskPaneSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the TaskPaneSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.TaskPane.TaskPaneSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TaskPaneSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the TaskPaneSurrogate</param>
            <param name="context">The source from which the TaskPaneSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.TaskPaneDesigner">
            <summary>
            A custom designer used by TaskPanes to remove unwanted 
            properties from the Property window in the designer
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneDesigner.#ctor">
            <summary>
            Initializes a new instance of the TaskPaneDesigner class
            </summary>
        </member>
        <member name="M:XPExplorerBar.TaskPaneDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through 
            a TypeDescriptor
            </summary>
            <param name="properties">An IDictionary containing the properties 
            for the class of the component</param>
        </member>
        <member name="T:XPExplorerBar.ExpandoEventHandler">
            <summary>
            Represents the method that will handle the StateChanged, ExpandoAdded, 
            and ExpandoRemoved events of an Expando or TaskPane
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">A ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="T:XPExplorerBar.Expando">
            <summary>
            A Control that replicates the collapsable panels found in 
            Windows XP's Explorer Bar
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.components">
            <summary>
            Required designer variable
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.systemSettings">
            <summary>
            System settings for the Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.specialGroup">
            <summary>
            Is the Expando a special group
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.expandedHeight">
            <summary>
            The height of the Expando in its expanded state
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.titleImage">
            <summary>
            The image displayed on the left side of the titlebar
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.headerHeight">
            <summary>
            The height of the header section 
            (includes titlebar and title image)
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.collapsed">
            <summary>
            Is the Expando collapsed
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.focusState">
            <summary>
            The state of the titlebar
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.titleBarHeight">
            <summary>
            The height of the titlebar
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.animate">
            <summary>
            Specifies whether the Expando is allowed to animate
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.animatingFade">
            <summary>
            Spcifies whether the Expando is currently animating a fade
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.animatingSlide">
            <summary>
            Spcifies whether the Expando is we currently animating a slide
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.animationImage">
            <summary>
            An image of the "client area" which is used 
            during a fade animation
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.animationHelper">
            <summary>
            An AnimationHelper that help the Expando to animate
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.taskpane">
            <summary>
            The TaskPane the Expando belongs to
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.autoLayout">
            <summary>
            Should the Expando layout its items itself
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.oldWidth">
            <summary>
            The last known width of the Expando 
            (used while animating)
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.initialising">
            <summary>
            Specifies whether the Expando is currently initialising
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.itemList">
            <summary>
            Internal list of items contained in the Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.hiddenControls">
            <summary>
            Internal list of controls that have been hidden
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.dummyPanel">
            <summary>
            A panel the Expando can move its controls onto when it is 
            animating from collapsed to expanded.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.canCollapse">
            <summary>
            Specifies whether the Expando is allowed to collapse
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.slideEndHeight">
            <summary>
            The height of the Expando at the end of its slide animation
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.watermark">
            <summary>
            The index of the Image that is used as a watermark
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.showFocusCues">
            <summary>
            Specifies whether the Expando should draw a focus rectangle 
            when it has focus
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.layout">
            <summary>
            Specifies whether the Expando is currently performing a 
            layout operation
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.customSettings">
            <summary>
            Specifies the custom settings for the Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.customHeaderSettings">
            <summary>
            Specifies the custom header settings for the Expando
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.fadeHeights">
            <summary>
            An array of pre-determined heights for use during a 
            fade animation
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.useDefaultTabHandling">
            <summary>
            Specifies whether the Expando should use Windows 
            defsult Tab handling mechanism
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.beginUpdateCount">
            <summary>
            Specifies the number of times BeginUpdate() has been called
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.slideAnimationBatched">
            <summary>
            Specifies whether slide animations should be batched
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.dragging">
            <summary>
            Specifies whether the Expando is currently being dragged
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.dragStart">
            <summary>
            Specifies the Point that a drag operation started at
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.#ctor">
            <summary>
            Initializes a new instance of the Expando class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.Collapse">
            <summary>
            Collapses the group without any animation.  
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.Expand">
            <summary>
            Expands the group without any animation.  
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.StartFadeAnimation">
            <summary>
            Gets the Expando ready to start its collapse/expand animation
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.UpdateFadeAnimation(System.Int32,System.Int32)">
            <summary>
            Updates the next "frame" of the animation
            </summary>
            <param name="animationStepNum">The current step in the animation</param>
            <param name="numAnimationSteps">The total number of steps in the animation</param>
        </member>
        <member name="M:XPExplorerBar.Expando.StopFadeAnimation">
            <summary>
            Gets the Expando to stop its animation
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.GetFadeAnimationImage">
            <summary>
            Returns an image of the group's display area to be used
            in the fade animation
            </summary>
            <returns>The Image to use during the fade animation</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.GetExpandedImage">
            <summary>
            Gets the image to be used in the animation while the 
            Expando is in its expanded state
            </summary>
            <returns>The Image to use during the fade animation</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.GetCollapsedImage">
            <summary>
            Gets the image to be used in the animation while the 
            Expando is in its collapsed state
            </summary>
            <returns>The Image to use during the fade animation</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.CalcAnimationHeights">
            <summary>
            Caches the heights that the Expando should be for each frame 
            of a fade animation
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.StartSlideAnimation">
            <summary>
            Gets the Expando ready to start its show/hide animation
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.UpdateSlideAnimation(System.Int32,System.Int32)">
            <summary>
            Updates the next "frame" of a slide animation
            </summary>
            <param name="animationStepNum">The current step in the animation</param>
            <param name="numAnimationSteps">The total number of steps in the animation</param>
        </member>
        <member name="M:XPExplorerBar.Expando.StopSlideAnimation">
            <summary>
            Gets the Expando to stop its animation
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.HideControl(System.Windows.Forms.Control)">
            <summary>
            Hides the specified Control
            </summary>
            <param name="control">The Control to hide</param>
        </member>
        <member name="M:XPExplorerBar.Expando.HideControl(System.Windows.Forms.Control[])">
            <summary>
            Hides the Controls contained in the specified array
            </summary>
            <param name="controls">The array Controls to hide</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ShowControl(System.Windows.Forms.Control)">
            <summary>
            Shows the specified Control
            </summary>
            <param name="control">The Control to show</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ShowControl(System.Windows.Forms.Control[])">
            <summary>
            Shows the Controls contained in the specified array
            </summary>
            <param name="controls">The array Controls to show</param>
        </member>
        <member name="M:XPExplorerBar.Expando.Dispose(System.Boolean)">
            <summary> 
            Releases the unmanaged resources used by the Expando and 
            optionally releases the managed resources
            </summary>
            <param name="disposing">True to release both managed and unmanaged 
            resources; false to release only unmanaged resources</param>
        </member>
        <member name="M:XPExplorerBar.Expando.InvalidateTitleBar">
            <summary>
            Invalidates the titlebar area
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.BeginInit">
            <summary>
            Signals the object that initialization is starting
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.EndInit">
            <summary>
            Signals the object that initialization is complete
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key
            </summary>
            <param name="keyData">One of the Keys values that represents 
            the key to process</param>
            <returns>true if the key was processed by the control; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ProcessTabKey(System.Boolean)">
            <summary>
            Selects the next available control and makes it the active control
            </summary>
            <param name="forward">true to cycle forward through the controls in 
            the Expando; otherwise, false</param>
            <returns>true if a control is selected; otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ProcessArrowKey(System.Boolean)">
            <summary>
            Selects the next available control and makes it the active control
            </summary>
            <param name="forward">true to cycle forward through the controls in 
            the Expando; otherwise, false</param>
            <returns>true if a control is selected; otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.FindFocusedChild">
            <summary>
            Gets the control contained in the Expando that currently has focus
            </summary>
            <returns>The control contained in the Expando that currently has focus, 
            or null if no child controls have focus</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.BeginUpdate">
            <summary>
            Prevents the Expando from drawing until the EndUpdate method is called
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.EndUpdate">
            <summary>
            Resumes drawing of the Expando after drawing is suspended by the 
            BeginUpdate method
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.DoLayout">
            <summary>
            Forces the control to apply layout logic to child controls, 
            and adjusts the height of the Expando if necessary
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.DoLayout(System.Boolean)">
            <summary>
            Forces the control to apply layout logic to child controls, 
            and adjusts the height of the Expando if necessary
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.CalcHeightAndLayout">
            <summary>
            Calculates the height that the Expando would be if a 
            call to DoLayout() were made
            </summary>
            <returns>The height that the Expando would be if a 
            call to DoLayout() were made</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.UpdateItems">
            <summary>
            Updates the layout of the Expandos items while in design mode, and 
            adds/removes itemss from the ControlCollection as necessary
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.MatchControlCollToItemColl">
            <summary>
            Make sure the controls index in the ControlCollection 
            are the same as in the ItemCollection (indexes in the 
            ItemCollection may have changed due to the user moving 
            them around in the editor or calling ItemCollection.Move())
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.ScaleCore(System.Single,System.Single)">
            <summary>
            Performs the work of scaling the entire control and any child controls
            </summary>
            <param name="dx">The ratio by which to scale the control horizontally</param>
            <param name="dy">The ratio by which to scale the control vertically</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ShouldSerializeSize">
            <summary>
            Specifies whether the Size property should be 
            serialized at design time
            </summary>
            <returns>true if the Size property should be 
            serialized, false otherwise</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ResetCustomSettings">
            <summary>
            Resets the custom settings to their default values
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event
            </summary>
            <param name="e">A ControlEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event
            </summary>
            <param name="e">A ControlEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.FireCustomSettingsChanged(System.EventArgs)">
            <summary>
            Raises the CustomSettingsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnCustomSettingsChanged(System.EventArgs)">
            <summary>
            Raises the CustomSettingsChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnStateChanged(XPExplorerBar.ExpandoEventArgs)">
            <summary>
            Raises the StateChanged event
            </summary>
            <param name="e">An ExpandoStateChangedEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnTitleImageChanged(XPExplorerBar.ExpandoEventArgs)">
            <summary>
            Raises the TitleImageChanged event
            </summary>
            <param name="e">An ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnSpecialGroupChanged(XPExplorerBar.ExpandoEventArgs)">
            <summary>
            Raises the SpecialGroupChanged event
            </summary>
            <param name="e">An ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnWatermarkChanged(XPExplorerBar.ExpandoEventArgs)">
            <summary>
            Raises the WatermarkChanged event
            </summary>
            <param name="e">An ExpandoEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnItemAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ItemAdded event
            </summary>
            <param name="e">A ControlEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnItemRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ItemRemoved event
            </summary>
            <param name="e">A ControlEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event
            </summary>
            <param name="e">A KeyEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnLocationChanged(System.EventArgs)">
            <summary>
            Raises the LocationChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event
            </summary>
            <param name="e">A MouseEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event
            </summary>
            <param name="e">A MouseEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e">A MouseEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event
            </summary>
            <param name="e">A PaintEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event
            </summary>
            <param name="e">A PaintEventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnPaintTitleBarBackground(System.Drawing.Graphics)">
            <summary>
            Paints the title bar background
            </summary>
            <param name="g">The Graphics used to paint the titlebar</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnPaintTitleBar(System.Drawing.Graphics)">
            <summary>
            Paints the title bar
            </summary>
            <param name="g">The Graphics used to paint the titlebar</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnPaintDisplayRect(System.Drawing.Graphics)">
            <summary>
            Paints the "Display Rectangle".  This is the dockable
            area of the control (ie non-titlebar/border area).  This is
            also the same as the PseudoClientRect.
            </summary>
            <param name="g">The Graphics used to paint the DisplayRectangle</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnPaintBorder(System.Drawing.Graphics)">
            <summary>
            Paints the borders
            </summary>
            <param name="g">The Graphics used to paint the border</param>
        </member>
        <member name="M:XPExplorerBar.Expando.PaintTransparentBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Simulates a transparent background by getting the Expandos parent 
            to paint its background and foreground into the specified Graphics 
            at the specified location
            </summary>
            <param name="g">The Graphics used to paint the background</param>
            <param name="clipRect">The Rectangle that represents the rectangle 
            in which to paint</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnParentChanged(System.EventArgs)">
            <summary>
            Raises the ParentChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="M:XPExplorerBar.Expando.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event
            </summary>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="E:XPExplorerBar.Expando.StateChanged">
            <summary>
            Occurs when the value of the Collapsed property changes
            </summary>
        </member>
        <member name="E:XPExplorerBar.Expando.TitleImageChanged">
            <summary>
            Occurs when the value of the TitleImage property changes
            </summary>
        </member>
        <member name="E:XPExplorerBar.Expando.SpecialGroupChanged">
            <summary>
            Occurs when the value of the SpecialGroup property changes
            </summary>
        </member>
        <member name="E:XPExplorerBar.Expando.WatermarkChanged">
            <summary>
            Occurs when the value of the Watermark property changes
            </summary>
        </member>
        <member name="E:XPExplorerBar.Expando.ItemAdded">
            <summary>
            Occurs when an item (Control) is added to the Expando
            </summary>
        </member>
        <member name="E:XPExplorerBar.Expando.ItemRemoved">
            <summary>
            Occurs when an item (Control) is removed from the Expando
            </summary>
        </member>
        <member name="E:XPExplorerBar.Expando.CustomSettingsChanged">
            <summary>
            Occurs when a value in the CustomSettings or CustomHeaderSettings 
            proterties changes
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Initialising">
            <summary>
            Gets whether the Expando is currently initializing
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleAlignment">
            <summary>
            Gets the alignment of the text in the title bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Animate">
            <summary>
            Gets or sets whether the Expando is allowed to animate
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Animating">
            <summary>
            Gets whether the Expando is currently animating
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationImage">
            <summary>
            Gets the Image used by the Expando while it is animating
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.SlideEndHeight">
            <summary>
            Gets the height that the Expando should be at the end of its 
            slide animation
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Border">
            <summary>
            Gets the width of the border along each side of the Expando's pane.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.BorderColor">
            <summary>
            Gets the color of the border along each side of the Expando's pane.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleBorder">
            <summary>
            Gets the width of the border along each side of the Expando's Title Bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleBackColor">
            <summary>
            Gets the background color of the titlebar
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnyCustomTitleGradientsEmpty">
            <summary>
            Gets whether any of the title bar's gradient colors are empty colors
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.PseudoClientRect">
            <summary>
            Returns a fake Client Rectangle.  
            The rectangle takes into account the size of the titlebar 
            and borders (these are actually parts of the real 
            ClientRectangle)
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.PseudoClientHeight">
            <summary>
            Returns the height of the fake client rectangle
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.DisplayRectangle">
            <summary>
            Overrides DisplayRectangle so that docked controls
            don't cover the titlebar or borders
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleBarRectangle">
            <summary>
            Gets a rectangle that contains the titlebar area
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.ShowFocusCues">
            <summary>
            Gets or sets a value indicating whether the Expando should display 
            focus rectangles
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.UseDefaultTabHandling">
            <summary>
            Gets or sets whether the Expando should use Windows 
            default Tab handling mechanism
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleForeColor">
            <summary>
            Gets the color of the Title Bar's text.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleHotForeColor">
            <summary>
            Gets the color of the Title Bar's text when highlighted.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleColor">
            <summary>
            Gets the current color of the Title Bar's text, depending 
            on the current state of the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleFont">
            <summary>
            Gets the font used to render the Title Bar's text.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.ArrowImage">
            <summary>
            Gets the expand/collapse arrow image currently displayed 
            in the title bar, depending on the current state of the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.ArrowImageWidth">
            <summary>
            Gets the width of the expand/collapse arrow image 
            currently displayed in the title bar
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.ArrowImageHeight">
            <summary>
            Gets the height of the expand/collapse arrow image 
            currently displayed in the title bar
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleBackImage">
            <summary>
            The background image used for the Title Bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleBackImageHeight">
            <summary>
            Gets the height of the background image used for the Title Bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleImage">
            <summary>
            The image used on the left side of the Title Bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleImageWidth">
            <summary>
            The width of the image used on the left side of the Title Bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleImageHeight">
            <summary>
            The height of the image used on the left side of the Title Bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Watermark">
            <summary>
            Gets the Image that is used as a watermark in the Expando's 
            client area
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.BackImage">
            <summary>
            The background image used for the Expandos content area.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Items">
            <summary>
            An Expando.ItemCollection representing the collection of 
            Controls contained within the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Controls">
            <summary>
            A Control.ControlCollection representing the collection of 
            controls contained within the control
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AutoLayout">
            <summary>
            Gets or sets whether the Expando will automagically layout its items
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Padding">
            <summary>
            Gets the amount of space between the border and items along 
            each side of the Expando.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitlePadding">
            <summary>
            Gets the amount of space between the border and items along 
            each side of the Title Bar.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Size">
            <summary>
            Gets or sets the height and width of the control
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.ExpandedHeight">
            <summary>
            Gets the height of the Expando in its expanded state
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.HeaderHeight">
            <summary>
            Gets the height of the header section of the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TitleBarHeight">
            <summary>
            Gets the height of the titlebar
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.SpecialGroup">
            <summary>
            Gets or sets whether the Expando should be rendered as a Special Group.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Collapsed">
            <summary>
            Gets or sets whether the Expando is collapsed.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.FocusState">
            <summary>
            Gets or sets whether the title bar is in a highlighted state.
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.CanCollapse">
            <summary>
            Gets or sets whether the Expando is able to collapse
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.SystemSettings">
            <summary>
            Gets or sets the system settings for the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.CustomSettings">
            <summary>
            Gets the custom settings for the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.CustomHeaderSettings">
            <summary>
            Gets the custom header settings for the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.TaskPane">
            <summary>
            Gets or sets the TaskPane the Expando belongs to
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Text">
            <summary>
            Gets or sets the text displayed on the titlebar
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.Visible">
            <summary>
            Gets or sets a value indicating whether the Expando is displayed
            </summary>
        </member>
        <member name="T:XPExplorerBar.Expando.ItemCollection">
            <summary>
            Represents a collection of Control objects
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ItemCollection.owner">
            <summary>
            The Expando that owns this ControlCollection
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.#ctor(XPExplorerBar.Expando)">
            <summary>
            Initializes a new instance of the Expando.ItemCollection class
            </summary>
            <param name="owner">An Expando representing the expando that owns 
            the Control collection</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.Add(System.Windows.Forms.Control)">
            <summary>
            Adds the specified control to the control collection
            </summary>
            <param name="value">The Control to add to the control collection</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.AddRange(System.Windows.Forms.Control[])">
            <summary>
            Adds an array of control objects to the collection
            </summary>
            <param name="controls">An array of Control objects to add 
            to the collection</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.Clear">
            <summary>
            Removes all controls from the collection
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.Contains(System.Windows.Forms.Control)">
            <summary>
            Determines whether the specified control is a member of the 
            collection
            </summary>
            <param name="control">The Control to locate in the collection</param>
            <returns>true if the Control is a member of the collection; 
            otherwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.IndexOf(System.Windows.Forms.Control)">
            <summary>
            Retrieves the index of the specified control in the control 
            collection
            </summary>
            <param name="control">The Control to locate in the collection</param>
            <returns>A zero-based index value that represents the position 
            of the specified Control in the Expando.ItemCollection</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.Remove(System.Windows.Forms.Control)">
            <summary>
            Removes the specified control from the control collection
            </summary>
            <param name="value">The Control to remove from the 
            Expando.ItemCollection</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a control from the control collection at the 
            specified indexed location
            </summary>
            <param name="index">The index value of the Control to 
            remove</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.Move(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Moves the specified control to the specified indexed location 
            in the control collection
            </summary>
            <param name="value">The control to be moved</param>
            <param name="index">The indexed location in the control collection 
            that the specified control will be moved to</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.MoveToTop(System.Windows.Forms.Control)">
            <summary>
            Moves the specified control to the top of the control collection
            </summary>
            <param name="value">The control to be moved</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollection.MoveToBottom(System.Windows.Forms.Control)">
            <summary>
            Moves the specified control to the bottom of the control collection
            </summary>
            <param name="value">The control to be moved</param>
        </member>
        <member name="P:XPExplorerBar.Expando.ItemCollection.Item(System.Int32)">
            <summary>
            The Control located at the specified index location within 
            the control collection
            </summary>
            <param name="index">The index of the control to retrieve 
            from the control collection</param>
        </member>
        <member name="T:XPExplorerBar.Expando.ItemCollectionEditor">
            <summary>
            A custom CollectionEditor for editing ItemCollections
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the CollectionEditor class 
            using the specified collection type
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the specified 
            service provider and context
            </summary>
            <param name="context">An ITypeDescriptorContext that can be 
            used to gain additional context information</param>
            <param name="isp">A service provider object through which 
            editing services can be obtained</param>
            <param name="value">The object to edit the value of</param>
            <returns>The new value of the object. If the value of the 
            object has not changed, this should return the same object 
            it was passed</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain
            </summary>
            <returns>An array of data types that this collection can contain</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ItemCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of the specified collection item type
            </summary>
            <param name="itemType">The type of item to create</param>
            <returns>A new instance of the specified object</returns>
        </member>
        <member name="T:XPExplorerBar.Expando.AnimationPanel">
            <summary>
            An extremely stripped down version of an Expando that an 
            Expando can use instead of itself to get an image of its 
            "client area" and child controls
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationPanel.headerHeight">
            <summary>
            The height of the header section 
            (includes titlebar and title image)
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationPanel.border">
            <summary>
            The border around the "client area"
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationPanel.backImage">
            <summary>
            The background image displayed in the control
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationPanel.#ctor">
            <summary>
            Initializes a new instance of the AnimationPanel class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event
            </summary>
            <param name="e">A PaintEventArgs that contains the event data</param>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationPanel.AutoScroll">
            <summary>
            Overrides AutoScroll to disable scrolling
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationPanel.HeaderHeight">
            <summary>
            Gets or sets the height of the header section of the Expando
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationPanel.Border">
            <summary>
            Gets or sets the border around the "client area"
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationPanel.BackImage">
            <summary>
            Gets or sets the background image displayed in the control
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationPanel.DisplayRectangle">
            <summary>
            Overrides DisplayRectangle so that docked controls
            don't cover the titlebar or borders
            </summary>
        </member>
        <member name="T:XPExplorerBar.Expando.AnimationHelper">
            <summary>
            A class that helps Expandos animate
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.NumAnimationFrames">
            <summary>
            The number of frames in an animation
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.FadeAnimation">
            <summary>
            Specifes that a fade animation is to be performed
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.SlideAnimation">
            <summary>
            Specifes that a slide animation is to be performed
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.animationType">
            <summary>
            The type of animation to perform
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.expando">
            <summary>
            The Expando to animate
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.animationStepNum">
            <summary>
            The current frame in animation
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.numAnimationSteps">
            <summary>
            The number of frames in the animation
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.animationFrameInterval">
            <summary>
            The amount of time each frame is shown (in milliseconds)
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.animating">
            <summary>
            Specifies whether an animation is being performed
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.AnimationHelper.animationTimer">
            <summary>
            A timer that notifies the helper when the next frame is due
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationHelper.#ctor(XPExplorerBar.Expando,System.Int32)">
            <summary>
            Initializes a new instance of the AnimationHelper class with the specified settings
            </summary>
            <param name="expando">The Expando to be animated</param>
            <param name="animationType">The type of animation to perform</param>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationHelper.Dispose">
            <summary>
            Releases all resources used by the AnimationHelper
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationHelper.StartAnimation">
            <summary>
            Starts the Expando collapse/expand animation
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationHelper.PerformAnimation">
            <summary>
            Updates the animation for the Expando
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationHelper.StopAnimation">
            <summary>
            Stops the Expando collapse/expand animation
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.AnimationHelper.animationTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Event handler for the animation timer tick event
            </summary>
            <param name="sender">The object that fired the event</param>
            <param name="e">An EventArgs that contains the event data</param>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationHelper.Expando">
            <summary>
            Gets the Expando that is te be animated
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationHelper.NumAnimationSteps">
            <summary>
            Gets or sets the number of steps that are needed for the Expando 
            to get from fully expanded to fully collapsed, or visa versa
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationHelper.AnimationFrameInterval">
            <summary>
            Gets or sets the number of milliseconds that each "frame" 
            of the animation stays on the screen
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationHelper.Animating">
            <summary>
            Gets whether the Expando is currently animating
            </summary>
        </member>
        <member name="P:XPExplorerBar.Expando.AnimationHelper.AnimationType">
            <summary>
            Gets the type of animation to perform
            </summary>
        </member>
        <member name="T:XPExplorerBar.Expando.ExpandoSurrogate">
            <summary>
            A class that is serialized instead of an Expando (as 
            Expandos contain objects that cause serialization problems)
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Name">
            <summary>
            See Expando.Name.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Text">
            <summary>
            See Expando.Text.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Size">
            <summary>
            See Expando.Size.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Location">
            <summary>
            See Expando.Location.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.BackColor">
            <summary>
            See Expando.BackColor.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.ExpandedHeight">
            <summary>
            See Expando.ExpandedHeight.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.CustomSettings">
            <summary>
            See Expando.CustomSettings.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.CustomHeaderSettings">
            <summary>
            See Expando.CustomHeaderSettings.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Animate">
            <summary>
            See Expando.Animate.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.ShowFocusCues">
            <summary>
            See Expando.ShowFocusCues.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Collapsed">
            <summary>
            See Expando.Collapsed.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.CanCollapse">
            <summary>
            See Expando.CanCollapse.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.SpecialGroup">
            <summary>
            See Expando.SpecialGroup.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.TitleImage">
            <summary>
            See Expando.TitleImage.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Watermark">
            <summary>
            See Expando.Watermark.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Enabled">
            <summary>
            See Expando.Enabled.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Visible">
            <summary>
            See Expando.Visible.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.AutoLayout">
            <summary>
            See Expando.AutoLayout.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Anchor">
            <summary>
            See Expando.Anchor.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Dock">
            <summary>
            See Expando.Dock.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.FontName">
            <summary>
            See Font.Name.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.FontSize">
            <summary>
            See Font.Size.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.FontDecoration">
            <summary>
            See Font.Style.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Items">
            <summary>
            See Expando.Items.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Tag">
            <summary>
            See Control.Tag.  This member is not intended to be used 
            directly from your code.
            </summary>
        </member>
        <member name="F:XPExplorerBar.Expando.ExpandoSurrogate.Version">
            <summary>
            Version number of the surrogate.  This member is not intended 
            to be used directly from your code.
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.ExpandoSurrogate.#ctor">
            <summary>
            Initializes a new instance of the ExpandoSurrogate class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.Expando.ExpandoSurrogate.Load(XPExplorerBar.Expando)">
            <summary>
            Populates the ExpandoSurrogate with data that is to be 
            serialized from the specified Expando
            </summary>
            <param name="expando">The Expando that contains the data 
            to be serialized</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ExpandoSurrogate.Save">
            <summary>
            Returns an Expando that contains the deserialized ExpandoSurrogate data
            </summary>
            <returns>An Expando that contains the deserialized ExpandoSurrogate data</returns>
        </member>
        <member name="M:XPExplorerBar.Expando.ExpandoSurrogate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the ExpandoSurrogate
            </summary>
            <param name="info">The SerializationInfo to populate with data</param>
            <param name="context">The destination for this serialization</param>
        </member>
        <member name="M:XPExplorerBar.Expando.ExpandoSurrogate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExpandoSurrogate class using the information 
            in the SerializationInfo
            </summary>
            <param name="info">The information to populate the ExpandoSurrogate</param>
            <param name="context">The source from which the ExpandoSurrogate is deserialized</param>
        </member>
        <member name="T:XPExplorerBar.ExpandoEventArgs">
            <summary>
            Provides data for the StateChanged, ExpandoAdded and 
            ExpandoRemoved events
            </summary>
        </member>
        <member name="F:XPExplorerBar.ExpandoEventArgs.expando">
            <summary>
            The Expando that generated the event
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoEventArgs.#ctor">
            <summary>
            Initializes a new instance of the ExpandoEventArgs class with default settings
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoEventArgs.#ctor(XPExplorerBar.Expando)">
            <summary>
            Initializes a new instance of the ExpandoEventArgs class with specific Expando
            </summary>
            <param name="expando">The Expando that generated the event</param>
        </member>
        <member name="P:XPExplorerBar.ExpandoEventArgs.Expando">
            <summary>
            Gets the Expando that generated the event
            </summary>
        </member>
        <member name="P:XPExplorerBar.ExpandoEventArgs.Collapsed">
            <summary>
            Gets whether the Expando is collapsed
            </summary>
        </member>
        <member name="T:XPExplorerBar.ExpandoConverter">
            <summary>
            A custom TypeConverter used to help convert Expandos from 
            one Type to another
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the 
            specified type, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a 
            format context</param>
            <param name="destinationType">A Type that represents the type 
            you want to convert to</param>
            <returns>true if this converter can perform the conversion; o
            therwise, false</returns>
        </member>
        <member name="M:XPExplorerBar.ExpandoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using 
            the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides 
            a format context</param>
            <param name="culture">A CultureInfo object. If a null reference 
            is passed, the current culture is assumed</param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value 
            parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="T:XPExplorerBar.ExpandoDesigner">
            <summary>
            A custom designer used by Expandos to remove unwanted 
            properties from the Property window in the designer
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoDesigner.#ctor">
            <summary>
            Initializes a new instance of the ExpandoDesigner class
            </summary>
        </member>
        <member name="M:XPExplorerBar.ExpandoDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through 
            a TypeDescriptor
            </summary>
            <param name="properties">An IDictionary containing the properties 
            for the class of the component</param>
        </member>
        <member name="T:XPExplorerBar.FocusStates">
            <summary>
            Defines the state of an Expandos title bar
            </summary>
        </member>
        <member name="F:XPExplorerBar.FocusStates.None">
            <summary>
            Normal state
            </summary>
        </member>
        <member name="F:XPExplorerBar.FocusStates.Mouse">
            <summary>
            The mouse is over the title bar
            </summary>
        </member>
    </members>
</doc>
