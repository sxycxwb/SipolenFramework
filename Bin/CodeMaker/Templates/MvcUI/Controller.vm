using System;
using System.Text;
using System.Web.Mvc;

namespace RDIFramework.MvcApp.Areas.ExampleModule.Controllers
{
    using RDIFramework.BizLogic;
    using RDIFramework.MvcAppUtilities;
    using RDIFramework.Utilities;

	/// <summary>
    /// ${options.modelname}Controller.cs
    /// ${options.modelname}控制器
    /// 
    /// 修改纪录
    ///     
    ///     yyyy-MM-dd 版本：1.0 创建。
    /// 
    /// 版本：1.0
    /// 
    /// <author>
    ///		<name></name>
    ///		<date></date>
    /// </author>
    /// </summary>
    public class ${options.modelname}Controller : PublicController<${options.modelname}Entity>
    {
		//
        // GET: /ExampleModule/${options.modelname}/

        /// <summary>
        /// 加载工具栏
        /// </summary>
        /// <returns>工具栏HTML</returns>
        public override string BuildToolBarButtons()
        {
            var sb = new StringBuilder();
            const string linkbtnTemplate = "<a id=\"a_{0}\" class=\"easyui-linkbutton\" style=\"float:left\"  plain=\"true\" href=\"javascript:;\" icon=\"{1}\"  {2} title=\"{3}\">{4}</a>";
            sb.Append("<a id=\"a_refresh\" class=\"easyui-linkbutton\" style=\"float:left\"  plain=\"true\" href=\"javascript:;\" icon=\"icon16_arrow_refresh\"  title=\"重新加载\">刷新</a> ");
            sb.Append("<div class='datagrid-btn-separator'></div> ");
            sb.Append(string.Format(linkbtnTemplate, "add", "icon16_table_add", IsAuthorized("${options.modelname}Admin.Add") ? "" : "disabled=\"True\"", "新增数据", "新增"));
            sb.Append(string.Format(linkbtnTemplate, "edit", "icon16_table_edit", IsAuthorized("${options.modelname}Admin.Edit") ? "" : "disabled=\"True\"", "修改选中的数据", "修改"));
            sb.Append(string.Format(linkbtnTemplate, "delete", "icon16_table_delete", IsAuthorized("${options.modelname}Admin.Delete") ? "" : "disabled=\"True\"", "删除选中的数据", "删除"));
            sb.Append("<div class='datagrid-btn-separator'></div> ");
            sb.Append(string.Format(linkbtnTemplate, "export", "icon16_table_export", IsAuthorized("${options.modelname}Admin.Export") ? "" : "disabled=\"True\"", "导出数据", "导出数据"));
            sb.Append("<div class='datagrid-btn-separator'></div> ");
            sb.Append(string.Format(linkbtnTemplate, "search", "icon16_table_filter", IsAuthorized("${options.modelname}Admin.Find") ? "" : "disabled=\"True\"", "查询", "查询"));
            return sb.ToString();
        }


        IDbProvider dbProvider
        {
            get
            {
                var DbDefine = RDIFrameworkService.Instance.DbLinkDefineService.GetEntityByLinkName(Utils.UserInfo, "RDIFrameworkDBLink");
                return DbDefine != null ? DbFactoryProvider.GetProvider((CurrentDbType)Enum.Parse(typeof(CurrentDbType), DbDefine.LinkType, true), SecretHelper.AESDecrypt(DbDefine.LinkData)) 
                                        : DbFactoryProvider.GetProvider(SystemInfo.BusinessDbType, SystemInfo.BusinessDbConnectionString);
            }
        }

		/// <summary>
        /// 返回列表JONS
        /// </summary>
        /// <returns></returns>        
        [AjaxOnly]
        public ActionResult GridPageListJson(int page = 1, int rows = 20, string sort = "CREATEON", string order = "desc", string filter = "")
        {
            var manager = new ${options.modelname}Manager(this.dbProvider);

            var where = TransfromFilterToSql(filter);

            UserInfo cUser = ManageProvider.Provider.Current();
            var recordCount = 0;
            var dtTemp = manager.GetDTByPage(out recordCount, page, rows, where, (sort + " " + order));           
            var jsonData = new
            {
                total = recordCount,
                rows = dtTemp,
            };

            return Content(jsonData.ToJson());
        }

		/// <summary>
        /// 得到实体
        /// </summary>
        /// <param name="key">主键值</param>
        /// <returns></returns>
        [HttpPost]
        [ValidateInput(false)]
        [LoginAuthorize]
        public ActionResult GetEntity(string key)
        {
            var manager = new ${options.modelname}Manager(this.dbProvider, ManageProvider.Provider.Current());
            var entity = manager.GetEntity(key);
            return Content(entity.ToJson());
        }

		/// <summary>
        /// 提交表单
        /// </summary>
        /// <param name="entity">实体对象</param>
        /// <param name="key">主键值</param>
        /// <returns></returns>
        [HttpPost]
        [ValidateInput(false)]
        [LoginAuthorize]
        public virtual ActionResult SubmitForm(${options.modelname}Entity entity, string key)
        {
            try
            {
                int IsOk = 1;
                RDIFramework.Utilities.UserInfo curUser = ManageProvider.Provider.Current();
                var manager = new ${options.modelname}Manager(this.dbProvider, curUser);
                if (string.IsNullOrEmpty(key)) //增加 
                {                                      
                    string returnValue = manager.Add(entity);
                    return Content(!string.IsNullOrEmpty(returnValue)
                        ? new JsonMessage { Success = true, Data = IsOk.ToString(), Message = RDIFrameworkMessage.MSG0009 }.ToString()
                        : new JsonMessage { Success = false, Data = "0", Message = RDIFrameworkMessage.MSG3020 }.ToString());
                }
                else
                {
                    var updateEntity = manager.GetEntity(key);
                    if (updateEntity != null)
                    {
						#set($columns = $options.getcolumninfo())
						#foreach($item in $columns)
						#if($item.ispk)							
						#else
							updateEntity.$item.columnname = entity.$item.columnname;
						#end
						#end
                    }

                    int returnValue = manager.Update(updateEntity);
                    return Content(returnValue > 0
                        ? new JsonMessage { Success = true, Data = IsOk.ToString(), Message = RDIFrameworkMessage.MSG0010 }.ToString()
                        : new JsonMessage { Success = false, Data = "0", Message = RDIFrameworkMessage.MSG3020 }.ToString());
                }
            }
            catch (Exception ex)
            {
                return Content(new JsonMessage { Success = false, Data = "0", Message = "操作失败：" + ex.Message }.ToString());
            }
        }

		/// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="key">主键值</param>
        /// <returns></returns>
        [AjaxOnly]
        [HttpPost]
        [ManagerPermission(PermissionMode.Enforce)]
        public virtual ActionResult Delete(string key)
        {
            try
            {
                var manager = new ${options.modelname}Manager(this.dbProvider, ManageProvider.Provider.Current());
                int vReturnValue = manager.SetDeleted(key);
                return Content(vReturnValue > 0
                    ? new JsonMessage { Success = true, Data = "1", Message = RDIFramework.Utilities.RDIFrameworkMessage.MSG0013 }.ToString()
                    : new JsonMessage { Success = false, Data = "0", Message = RDIFramework.Utilities.RDIFrameworkMessage.MSG3020 }.ToString());
            }
            catch (Exception ex)
            {
                return Content(new JsonMessage { Success = false, Data = "-1", Message = RDIFramework.Utilities.RDIFrameworkMessage.MSG3020 + ex.Message }.ToString());
            }
        }
    }
}